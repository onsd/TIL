
DE10_LITE_SDRAM_Nios_Test.elf:     file format elf32-littlenios2
DE10_LITE_SDRAM_Nios_Test.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x04020230

Program Header:
    LOAD off    0x00001000 vaddr 0x04020000 paddr 0x04020000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x04020020 paddr 0x04020020 align 2**12
         filesz 0x00010c98 memsz 0x00010c98 flags r-x
    LOAD off    0x00011cb8 vaddr 0x04030cb8 paddr 0x040327a4 align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x00014290 vaddr 0x04034290 paddr 0x04034290 align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  04020000  04020000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000210  04020020  04020020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00010644  04020230  04020230  00001230  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000444  04030874  04030874  00011874  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  04030cb8  040327a4  00011cb8  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  04034290  04034290  00014290  2**2
                  ALLOC, SMALL_DATA
  6 .sdram        00000000  00000000  00000000  000137a4  2**0
                  CONTENTS
  7 .onchip_memory2 00000000  040343f0  040343f0  000137a4  2**0
                  CONTENTS
  8 .comment      00000046  00000000  00000000  000137a4  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00000fb0  00000000  00000000  000137f0  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   000257b0  00000000  00000000  000147a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 000098fa  00000000  00000000  00039f50  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000c040  00000000  00000000  0004384a  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  000022a0  00000000  00000000  0004f88c  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00003baf  00000000  00000000  00051b2c  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    00017c81  00000000  00000000  000556db  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000040  00000000  00000000  0006d35c  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 00001978  00000000  00000000  0006d3a0  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  0007200a  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000c  00000000  00000000  0007200d  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  00072019  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  0007201a  2**0
                  CONTENTS, READONLY
 22 .sysid_hash   00000004  00000000  00000000  0007201b  2**0
                  CONTENTS, READONLY
 23 .sysid_base   00000004  00000000  00000000  0007201f  2**0
                  CONTENTS, READONLY
 24 .sysid_time   00000004  00000000  00000000  00072023  2**0
                  CONTENTS, READONLY
 25 .stderr_dev   00000009  00000000  00000000  00072027  2**0
                  CONTENTS, READONLY
 26 .stdin_dev    00000009  00000000  00000000  00072030  2**0
                  CONTENTS, READONLY
 27 .stdout_dev   00000009  00000000  00000000  00072039  2**0
                  CONTENTS, READONLY
 28 .sopc_system_name 0000000e  00000000  00000000  00072042  2**0
                  CONTENTS, READONLY
 29 .quartus_project_dir 00000018  00000000  00000000  00072050  2**0
                  CONTENTS, READONLY
 30 .jdi          00005517  00000000  00000000  00072068  2**0
                  CONTENTS, READONLY
 31 .sopcinfo     000666be  00000000  00000000  0007757f  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
04020000 l    d  .entry	00000000 .entry
04020020 l    d  .exceptions	00000000 .exceptions
04020230 l    d  .text	00000000 .text
04030874 l    d  .rodata	00000000 .rodata
04030cb8 l    d  .rwdata	00000000 .rwdata
04034290 l    d  .bss	00000000 .bss
00000000 l    d  .sdram	00000000 .sdram
040343f0 l    d  .onchip_memory2	00000000 .onchip_memory2
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../DE10_LITE_SDRAM_Nios_Test_bsp//obj/HAL/src/crt0.o
04020268 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 mem_verify.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 rand.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
04030a06 l     O .rodata	00000010 zeroes.4404
04023458 l     F .text	000000bc __sbprintf
04030a16 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
04023668 l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
040251c0 l     F .text	00000008 __fp_unlock
040251d4 l     F .text	0000019c __sinit.part.1
04025370 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
04030cb8 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
040310fc l     O .rwdata	00000020 lc_ctype_charset
040310dc l     O .rwdata	00000020 lc_message_charset
0403111c l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
04030a48 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
04028864 l     F .text	000000fc __sprint_r.part.0
04030b6c l     O .rodata	00000010 zeroes.4349
04029ea0 l     F .text	000000bc __sbprintf
04030b7c l     O .rodata	00000010 blanks.4348
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0402de18 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev.c
0402df60 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0402df8c l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0402e094 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0402e190 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0402e27c l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0402e46c l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
04032794 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
0402e8c8 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0402ea18 l     F .text	00000038 alt_dev_reg
04031704 l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0402ed18 l     F .text	0000020c altera_avalon_jtag_uart_irq
0402ef24 l     F .text	000000a8 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0402f564 l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0402f900 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0402fda4 l     F .text	000000e4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0402ff04 l     F .text	00000050 alt_get_errno
0402ff54 l     F .text	000000f4 alt_file_locked
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
040342c4 g     O .bss	00000004 alt_instruction_exception_handler
04020f60 g     F .text	00000018 putchar
04027d40 g     F .text	00000074 _mprec_log10
04027e2c g     F .text	0000008c __any_on
0402a5ac g     F .text	00000054 _isatty_r
04030a54 g     O .rodata	00000028 __mprec_tinytens
0402e3a8 g     F .text	0000007c alt_main
04020f78 g     F .text	000000c0 _puts_r
040342f0 g     O .bss	00000100 alt_irq
0402a600 g     F .text	00000060 _lseek_r
040327a4 g       *ABS*	00000000 __flash_rwdata_start
0402c7f0 g     F .text	00000088 .hidden __eqdf2
040343f0 g       *ABS*	00000000 __alt_heap_start
04020f1c g     F .text	0000003c printf
0402a6c0 g     F .text	0000009c _wcrtomb_r
04028724 g     F .text	0000005c __sseek
04025520 g     F .text	00000010 __sinit
04029f5c g     F .text	00000140 __swbuf_r
04025ff4 g     F .text	0000007c _setlocale_r
04025378 g     F .text	00000078 __sfmoreglue
0402e448 g     F .text	00000024 __malloc_unlock
04026b7c g     F .text	0000015c memmove
04025508 g     F .text	00000018 _cleanup
04026e00 g     F .text	000000a8 _Balloc
0402c878 g     F .text	000000dc .hidden __gtdf2
040301a8 g     F .text	00000024 altera_nios2_gen2_irq_init
04020000 g     F .entry	0000000c __reset
04020020 g       *ABS*	00000000 __flash_exceptions_start
0402a550 g     F .text	0000005c _fstat_r
040342a8 g     O .bss	00000004 errno
040286a0 g     F .text	00000008 __seofread
040342b0 g     O .bss	00000004 alt_argv
0403a764 g       *ABS*	00000000 _gp
0402e898 g     F .text	00000030 usleep
04031584 g     O .rwdata	00000180 alt_fd_list
04020f58 g     F .text	00000008 _putchar_r
040301cc g     F .text	00000090 alt_find_dev
04020da4 g     F .text	00000148 memcpy
04020468 g     F .text	00000518 TMEM_Verify
040251c8 g     F .text	0000000c _cleanup_r
0402dc30 g     F .text	000000dc .hidden __floatsidf
0402fe88 g     F .text	0000007c alt_io_redirect
0402c954 g     F .text	000000f4 .hidden __ltdf2
04030874 g       *ABS*	00000000 __DTOR_END__
04021038 g     F .text	00000014 puts
04030444 g     F .text	0000009c alt_exception_cause_generated_bad_addr
04028584 g     F .text	00000074 __fpclassifyd
04027c9c g     F .text	000000a4 __ratio
04029e84 g     F .text	0000001c __vfiprintf_internal
0402f124 g     F .text	0000021c altera_avalon_jtag_uart_read
04020eec g     F .text	00000030 _printf_r
04020cc0 g     F .text	00000064 .hidden __udivsi3
0402e0e4 g     F .text	000000ac isatty
04030aa4 g     O .rodata	000000c8 __mprec_tens
04026070 g     F .text	0000000c __locale_charset
040342a4 g     O .bss	00000004 __malloc_top_pad
0403276c g     O .rwdata	00000004 __mb_cur_max
040260a0 g     F .text	0000000c _localeconv_r
04027234 g     F .text	0000003c __i2b
040259a4 g     F .text	000004c8 __sfvwrite_r
040285f8 g     F .text	00000054 _sbrk_r
0402a660 g     F .text	00000060 _read_r
0403278c g     O .rwdata	00000004 alt_max_fd
0402a244 g     F .text	000000f0 _fclose_r
04025190 g     F .text	00000030 fflush
040342a0 g     O .bss	00000004 __malloc_max_sbrked_mem
0402b574 g     F .text	000008ac .hidden __adddf3
04027a44 g     F .text	0000010c __b2d
0402afb0 g     F .text	000005c4 .hidden __umoddi3
0402e2cc g     F .text	000000dc lseek
04032764 g     O .rwdata	00000004 _global_impure_ptr
04028020 g     F .text	00000564 _realloc_r
040343f0 g       *ABS*	00000000 __bss_end
0402fcb4 g     F .text	000000f0 alt_iic_isr_register
0402e790 g     F .text	00000108 alt_tick
0402a9b4 g     F .text	000005fc .hidden __udivdi3
0402a4ac g     F .text	00000024 _fputwc_r
04030a7c g     O .rodata	00000028 __mprec_bigtens
04027018 g     F .text	00000104 __s2b
0402dd0c g     F .text	000000a8 .hidden __floatunsidf
04027784 g     F .text	00000060 __mcmp
04025540 g     F .text	00000018 __fp_lock_all
0402fc68 g     F .text	0000004c alt_ic_irq_enabled
0402e6f4 g     F .text	0000009c alt_alarm_stop
040342c0 g     O .bss	00000004 alt_irq_active
040200fc g     F .exceptions	000000d4 alt_irq_handler
0403155c g     O .rwdata	00000028 alt_dev_null
0402df40 g     F .text	00000020 alt_dcache_flush_all
0402711c g     F .text	00000068 __hi0bits
0402dbb0 g     F .text	00000080 .hidden __fixdfsi
040327a4 g       *ABS*	00000000 __ram_rwdata_end
04032784 g     O .rwdata	00000008 alt_dev_list
0402e918 g     F .text	00000100 write
04027eb8 g     F .text	000000a0 _putc_r
04030cb8 g       *ABS*	00000000 __ram_rodata_end
0402dfdc g     F .text	000000b8 fstat
0402c954 g     F .text	000000f4 .hidden __ledf2
040274fc g     F .text	00000140 __pow5mult
04028978 g     F .text	0000150c ___vfiprintf_internal_r
04034298 g     O .bss	00000004 __nlocale_changed
04020d24 g     F .text	00000058 .hidden __umodsi3
040343f0 g       *ABS*	00000000 end
0402ec50 g     F .text	000000c8 altera_avalon_jtag_uart_init
040201d0 g     F .exceptions	00000060 alt_instruction_exception_entry
04030874 g       *ABS*	00000000 __CTOR_LIST__
040386a0 g       *ABS*	00000000 __alt_stack_pointer
0402f5dc g     F .text	0000008c alt_avalon_timer_sc_init
0402ddb4 g     F .text	00000064 .hidden __clzsi2
0402f340 g     F .text	00000224 altera_avalon_jtag_uart_write
04025530 g     F .text	00000004 __sfp_lock_acquire
04026a98 g     F .text	000000e4 memchr
04021160 g     F .text	000022dc ___vfprintf_internal_r
04025694 g     F .text	00000310 _free_r
0402607c g     F .text	00000010 __locale_mb_cur_max
040306c0 g     F .text	00000180 __call_exitprocs
04034294 g     O .bss	00000004 __mlocale_changed
04032770 g     O .rwdata	00000004 __malloc_sbrk_base
04020230 g     F .text	0000003c _start
040342b8 g     O .bss	00000004 _alt_tick_rate
04021064 g     F .text	00000064 rand
0402763c g     F .text	00000148 __lshift
040342bc g     O .bss	00000004 _alt_nticks
0402e4bc g     F .text	00000104 read
0402ea88 g     F .text	00000064 alt_sys_init
040305a8 g     F .text	00000118 __register_exitproc
04027270 g     F .text	0000028c __multiply
0402efcc g     F .text	00000068 altera_avalon_jtag_uart_close
04020d7c g     F .text	00000028 .hidden __mulsi3
04030cb8 g       *ABS*	00000000 __ram_rwdata_start
04030874 g       *ABS*	00000000 __ram_rodata_start
040342c8 g     O .bss	00000028 __malloc_current_mallinfo
04027b50 g     F .text	0000014c __d2b
0402eaec g     F .text	00000060 altera_avalon_jtag_uart_read_fd
04030370 g     F .text	000000d4 alt_get_fd
0402f7a8 g     F .text	00000158 alt_busy_sleep
0402a114 g     F .text	00000054 _close_r
0403052c g     F .text	0000007c memcmp
0402ebac g     F .text	00000050 altera_avalon_jtag_uart_close_fd
040343f0 g       *ABS*	00000000 __alt_stack_base
0402ebfc g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
04023514 g     F .text	00000154 __swsetup_r
0402be20 g     F .text	000009d0 .hidden __divdf3
040253f0 g     F .text	00000118 __sfp
04027db4 g     F .text	00000078 __copybits
04031154 g     O .rwdata	00000408 __malloc_av_
0402553c g     F .text	00000004 __sinit_lock_release
0402ca48 g     F .text	0000086c .hidden __muldf3
0402864c g     F .text	00000054 __sread
0403025c g     F .text	00000114 alt_find_file
0402f950 g     F .text	000000a4 alt_dev_llist_insert
0402e424 g     F .text	00000024 __malloc_lock
0402e644 g     F .text	000000b0 sbrk
04025134 g     F .text	0000005c _fflush_r
0402a168 g     F .text	000000dc _calloc_r
04034290 g       *ABS*	00000000 __bss_start
04026cd8 g     F .text	00000128 memset
0402026c g     F .text	000001fc main
040342b4 g     O .bss	00000004 alt_envp
0403429c g     O .bss	00000004 __malloc_max_total_mem
0402eb4c g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0402a09c g     F .text	00000018 __swbuf
0402104c g     F .text	00000018 srand
04028780 g     F .text	00000008 __sclose
040386a0 g       *ABS*	00000000 __alt_heap_limit
0402a334 g     F .text	00000014 fclose
04023890 g     F .text	00001688 _dtoa_r
0402628c g     F .text	0000080c _malloc_r
0402a81c g     F .text	00000030 __ascii_wctomb
04032790 g     O .rwdata	00000004 alt_errno
04025e6c g     F .text	000000c4 _fwalk
04027f58 g     F .text	000000c8 putc
04020bc8 g     F .text	00000084 .hidden __divsi3
04025570 g     F .text	00000124 _malloc_trim_r
04030874 g       *ABS*	00000000 __CTOR_END__
04028788 g     F .text	000000dc strcmp
04030874 g       *ABS*	00000000 __flash_rodata_start
04030874 g       *ABS*	00000000 __DTOR_LIST__
0402c7f0 g     F .text	00000088 .hidden __nedf2
0402ea50 g     F .text	00000038 alt_irq_init
0402e5c0 g     F .text	00000084 alt_release_fd
04030b8c g     O .rodata	00000100 .hidden __clz_tab
04034290 g     O .bss	00000004 _PathLocale
040304e0 g     F .text	00000014 atexit
0402a0b4 g     F .text	00000060 _write_r
040260ac g     F .text	00000018 setlocale
04032768 g     O .rwdata	00000004 _impure_ptr
040342ac g     O .bss	00000004 alt_argc
04024f18 g     F .text	0000021c __sflush_r
0402fa54 g     F .text	00000060 _do_dtors
04026098 g     F .text	00000008 __locale_cjk_lang
04020020 g       .exceptions	00000000 alt_irq_entry
040279e0 g     F .text	00000064 __ulp
04025558 g     F .text	00000018 __fp_unlock_all
0403277c g     O .rwdata	00000008 alt_fs_list
04020020 g       *ABS*	00000000 __ram_exceptions_start
040260c4 g     F .text	0000000c localeconv
04020000 g       *ABS*	00000000 __alt_mem_onchip_memory2
0402fad4 g     F .text	00000050 alt_ic_isr_register
040327a4 g       *ABS*	00000000 _edata
040343f0 g       *ABS*	00000000 _end
0402a348 g     F .text	00000164 __fputwc
04020230 g       *ABS*	00000000 __ram_exceptions_end
0402f034 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0402fbc4 g     F .text	000000a4 alt_ic_irq_disable
040286a8 g     F .text	0000007c __swrite
04032774 g     O .rwdata	00000004 __malloc_trim_threshold
0402608c g     F .text	0000000c __locale_msgcharset
040304f4 g     F .text	00000038 exit
04025f30 g     F .text	000000c4 _fwalk_reent
040277e4 g     F .text	000001fc __mdiff
04020c4c g     F .text	00000074 .hidden __modsi3
04020980 g     F .text	00000248 TMEM_QuickVerify
040386a0 g       *ABS*	00000000 __alt_data_end
04020020 g     F .exceptions	00000000 alt_exception
04025534 g     F .text	00000004 __sfp_lock_release
00000000 g       *ABS*	00000000 __alt_mem_sdram
04030840 g     F .text	00000034 _exit
0402f668 g     F .text	00000140 alt_alarm_start
0402a8a8 g     F .text	0000010c .hidden __muldi3
040260d0 g     F .text	000001bc __smakebuf_r
040210c8 g     F .text	00000098 strlen
04030048 g     F .text	00000160 open
0402c878 g     F .text	000000dc .hidden __gedf2
04032778 g     O .rwdata	00000004 __wctomb
04028960 g     F .text	00000018 __sprint_r
0402fab4 g     F .text	00000020 alt_icache_flush_all
040327a0 g     O .rwdata	00000004 alt_priority_mask
0402fb24 g     F .text	000000a0 alt_ic_irq_enable
0402343c g     F .text	0000001c __vfprintf_internal
0402a84c g     F .text	0000005c _wctomb_r
0402d2b4 g     F .text	000008fc .hidden __subdf3
04027184 g     F .text	000000b0 __lo0bits
04032798 g     O .rwdata	00000008 alt_alarm_list
0402f9f4 g     F .text	00000060 _do_ctors
0402a75c g     F .text	000000c0 wcrtomb
0402de68 g     F .text	000000d8 close
0402e1f8 g     F .text	00000084 alt_load
0402a4d0 g     F .text	00000080 fputwc
04025538 g     F .text	00000004 __sinit_lock_acquire
04026ed0 g     F .text	00000148 __multadd
04026ea8 g     F .text	00000028 _Bfree



Disassembly of section .entry:

04020000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
 4020000:	004100b4 	movhi	at,1026
    ori r1, r1, %lo(_start)
 4020004:	08408c14 	ori	at,at,560
    jmp r1
 4020008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

04020020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
 4020020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
 4020024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
 4020028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
 402002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
 4020030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
 4020034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
 4020038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
 402003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
 4020040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
 4020044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
 4020048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
 402004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
 4020050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
 4020054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
 4020058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
 402005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
 4020060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
 4020064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
 4020068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
 402006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 4020070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
 4020074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
 4020078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
 402007c:	10000326 	beq	r2,zero,402008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
 4020080:	20000226 	beq	r4,zero,402008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
 4020084:	40200fc0 	call	40200fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
 4020088:	00000706 	br	40200a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
 402008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
 4020090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
 4020094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
 4020098:	40201d00 	call	40201d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
 402009c:	1000021e 	bne	r2,zero,40200a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
 40200a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 40200a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
 40200a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
 40200ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
 40200b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
 40200b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
 40200b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
 40200bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
 40200c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
 40200c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
 40200c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
 40200cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
 40200d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
 40200d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
 40200d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
 40200dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
 40200e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
 40200e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
 40200e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
 40200ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
 40200f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
 40200f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
 40200f8:	ef80083a 	eret

040200fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
 40200fc:	defff904 	addi	sp,sp,-28
 4020100:	dfc00615 	stw	ra,24(sp)
 4020104:	df000515 	stw	fp,20(sp)
 4020108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 402010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 4020110:	0005313a 	rdctl	r2,ipending
 4020114:	e0bffe15 	stw	r2,-8(fp)

  return active;
 4020118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 402011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 4020120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 4020124:	00800044 	movi	r2,1
 4020128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 402012c:	e0fffb17 	ldw	r3,-20(fp)
 4020130:	e0bffc17 	ldw	r2,-16(fp)
 4020134:	1884703a 	and	r2,r3,r2
 4020138:	10001426 	beq	r2,zero,402018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 402013c:	008100f4 	movhi	r2,1027
 4020140:	1090bc04 	addi	r2,r2,17136
 4020144:	e0fffd17 	ldw	r3,-12(fp)
 4020148:	180690fa 	slli	r3,r3,3
 402014c:	10c5883a 	add	r2,r2,r3
 4020150:	10c00017 	ldw	r3,0(r2)
 4020154:	008100f4 	movhi	r2,1027
 4020158:	1090bc04 	addi	r2,r2,17136
 402015c:	e13ffd17 	ldw	r4,-12(fp)
 4020160:	200890fa 	slli	r4,r4,3
 4020164:	1105883a 	add	r2,r2,r4
 4020168:	10800104 	addi	r2,r2,4
 402016c:	10800017 	ldw	r2,0(r2)
 4020170:	1009883a 	mov	r4,r2
 4020174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 4020178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 402017c:	0005313a 	rdctl	r2,ipending
 4020180:	e0bfff15 	stw	r2,-4(fp)

  return active;
 4020184:	e0bfff17 	ldw	r2,-4(fp)
 4020188:	00000706 	br	40201a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
 402018c:	e0bffc17 	ldw	r2,-16(fp)
 4020190:	1085883a 	add	r2,r2,r2
 4020194:	e0bffc15 	stw	r2,-16(fp)
      i++;
 4020198:	e0bffd17 	ldw	r2,-12(fp)
 402019c:	10800044 	addi	r2,r2,1
 40201a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 40201a4:	003fe106 	br	402012c <_gp+0xfffe59c8>

    active = alt_irq_pending ();
 40201a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 40201ac:	e0bffb17 	ldw	r2,-20(fp)
 40201b0:	103fdb1e 	bne	r2,zero,4020120 <_gp+0xfffe59bc>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 40201b4:	0001883a 	nop
}
 40201b8:	0001883a 	nop
 40201bc:	e037883a 	mov	sp,fp
 40201c0:	dfc00117 	ldw	ra,4(sp)
 40201c4:	df000017 	ldw	fp,0(sp)
 40201c8:	dec00204 	addi	sp,sp,8
 40201cc:	f800283a 	ret

040201d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 40201d0:	defffb04 	addi	sp,sp,-20
 40201d4:	dfc00415 	stw	ra,16(sp)
 40201d8:	df000315 	stw	fp,12(sp)
 40201dc:	df000304 	addi	fp,sp,12
 40201e0:	e13fff15 	stw	r4,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
 40201e4:	00bfffc4 	movi	r2,-1
 40201e8:	e0bffd15 	stw	r2,-12(fp)
  badaddr = 0;
 40201ec:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 40201f0:	d0a6d817 	ldw	r2,-25760(gp)
 40201f4:	10000726 	beq	r2,zero,4020214 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 40201f8:	d0a6d817 	ldw	r2,-25760(gp)
 40201fc:	e0fffd17 	ldw	r3,-12(fp)
 4020200:	e1bffe17 	ldw	r6,-8(fp)
 4020204:	e17fff17 	ldw	r5,-4(fp)
 4020208:	1809883a 	mov	r4,r3
 402020c:	103ee83a 	callr	r2
 4020210:	00000206 	br	402021c <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 4020214:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 4020218:	0005883a 	mov	r2,zero
}
 402021c:	e037883a 	mov	sp,fp
 4020220:	dfc00117 	ldw	ra,4(sp)
 4020224:	df000017 	ldw	fp,0(sp)
 4020228:	dec00204 	addi	sp,sp,8
 402022c:	f800283a 	ret

Disassembly of section .text:

04020230 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
 4020230:	06c100f4 	movhi	sp,1027
    ori sp, sp, %lo(__alt_stack_pointer)
 4020234:	dee1a814 	ori	sp,sp,34464
    movhi gp, %hi(_gp)
 4020238:	068100f4 	movhi	gp,1027
    ori gp, gp, %lo(_gp)
 402023c:	d6a9d914 	ori	gp,gp,42852
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
 4020240:	008100f4 	movhi	r2,1027
    ori r2, r2, %lo(__bss_start)
 4020244:	1090a414 	ori	r2,r2,17040

    movhi r3, %hi(__bss_end)
 4020248:	00c100f4 	movhi	r3,1027
    ori r3, r3, %lo(__bss_end)
 402024c:	18d0fc14 	ori	r3,r3,17392

    beq r2, r3, 1f
 4020250:	10c00326 	beq	r2,r3,4020260 <_start+0x30>

0:
    stw zero, (r2)
 4020254:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
 4020258:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
 402025c:	10fffd36 	bltu	r2,r3,4020254 <_gp+0xfffe5af0>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
 4020260:	402e1f80 	call	402e1f8 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
 4020264:	402e3a80 	call	402e3a8 <alt_main>

04020268 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
 4020268:	003fff06 	br	4020268 <_gp+0xfffe5b04>

0402026c <main>:
#include "mem_verify.h"
#include "system.h"
#include "alt_types.h"

int main()
{
 402026c:	defff404 	addi	sp,sp,-48
 4020270:	dfc00b15 	stw	ra,44(sp)
 4020274:	df000a15 	stw	fp,40(sp)
 4020278:	dc000915 	stw	r16,36(sp)
 402027c:	df000a04 	addi	fp,sp,40
	bool bPass, bLoop;
	int TestIndex ;
	alt_u32 InitValue = 0x01;
 4020280:	00800044 	movi	r2,1
 4020284:	e0bffa15 	stw	r2,-24(fp)
	bool bShowMessage = TRUE;
 4020288:	00800044 	movi	r2,1
 402028c:	e0bffb15 	stw	r2,-20(fp)
	alt_u32 TimeStart, TimeElapsed;
	alt_u8 Status,ButtonStatus;
	const alt_u8 ButtonMask = 0x03; // 2 button
 4020290:	008000c4 	movi	r2,3
 4020294:	e0bffc05 	stb	r2,-16(fp)

    printf("===== SDRAM Test! Size=%dMB (CPU Clock:%d) =====\r\n", SDRAM_SPAN/1024/1024, ALT_CPU_CPU_FREQ);
 4020298:	01817db4 	movhi	r6,1526
 402029c:	31b84004 	addi	r6,r6,-7936
 40202a0:	01401004 	movi	r5,64
 40202a4:	010100f4 	movhi	r4,1027
 40202a8:	21021d04 	addi	r4,r4,2164
 40202ac:	4020f1c0 	call	4020f1c <printf>

    while(1){
        printf("\n==========================================================\n");
 40202b0:	010100f4 	movhi	r4,1027
 40202b4:	21022a04 	addi	r4,r4,2216
 40202b8:	40210380 	call	4021038 <puts>
        printf("Press any KEY to start test [KEY0 for continued test] \n");
 40202bc:	010100f4 	movhi	r4,1027
 40202c0:	21023904 	addi	r4,r4,2276
 40202c4:	40210380 	call	4021038 <puts>
        ButtonStatus = ButtonMask;
 40202c8:	e0bffc03 	ldbu	r2,-16(fp)
 40202cc:	e0bff905 	stb	r2,-28(fp)
        while((ButtonStatus & ButtonMask) == ButtonMask){
 40202d0:	00001006 	br	4020314 <main+0xa8>

        	ButtonStatus = IORD(KEY_BASE, 0);
 40202d4:	00810134 	movhi	r2,1028
 40202d8:	10840804 	addi	r2,r2,4128
 40202dc:	10800037 	ldwio	r2,0(r2)
 40202e0:	e0bff905 	stb	r2,-28(fp)

        	IOWR(HEX_BASE, 0, IORD(SW_BASE, 0));
 40202e4:	00810134 	movhi	r2,1028
 40202e8:	10841804 	addi	r2,r2,4192
 40202ec:	10c00037 	ldwio	r3,0(r2)
 40202f0:	00810134 	movhi	r2,1028
 40202f4:	10842004 	addi	r2,r2,4224
 40202f8:	10c00035 	stwio	r3,0(r2)
        	IOWR(LEDR_BASE, 0, IORD(SW_BASE, 0));
 40202fc:	00810134 	movhi	r2,1028
 4020300:	10841804 	addi	r2,r2,4192
 4020304:	10c00037 	ldwio	r3,0(r2)
 4020308:	00810134 	movhi	r2,1028
 402030c:	10842804 	addi	r2,r2,4256
 4020310:	10c00035 	stwio	r3,0(r2)

    while(1){
        printf("\n==========================================================\n");
        printf("Press any KEY to start test [KEY0 for continued test] \n");
        ButtonStatus = ButtonMask;
        while((ButtonStatus & ButtonMask) == ButtonMask){
 4020314:	e0fff903 	ldbu	r3,-28(fp)
 4020318:	e0bffc03 	ldbu	r2,-16(fp)
 402031c:	1884703a 	and	r2,r3,r2
 4020320:	10c03fcc 	andi	r3,r2,255
 4020324:	e0bffc03 	ldbu	r2,-16(fp)
 4020328:	18bfea26 	beq	r3,r2,40202d4 <_gp+0xfffe5b70>

        	IOWR(HEX_BASE, 0, IORD(SW_BASE, 0));
        	IOWR(LEDR_BASE, 0, IORD(SW_BASE, 0));
        }

        if ((ButtonStatus & 0x01) == 0x00){
 402032c:	e0bff903 	ldbu	r2,-28(fp)
 4020330:	1080004c 	andi	r2,r2,1
 4020334:	1000031e 	bne	r2,zero,4020344 <main+0xd8>
            bLoop = TRUE;
 4020338:	00800044 	movi	r2,1
 402033c:	e0bff715 	stw	r2,-36(fp)
 4020340:	00000106 	br	4020348 <main+0xdc>
        }else{
            bLoop = FALSE;
 4020344:	e03ff715 	stw	zero,-36(fp)
        }

		//
        bPass = TRUE;
 4020348:	00800044 	movi	r2,1
 402034c:	e0bff615 	stw	r2,-40(fp)
        TestIndex = 0;
 4020350:	e03ff815 	stw	zero,-32(fp)

        do{
        	TestIndex++;
 4020354:	e0bff817 	ldw	r2,-32(fp)
 4020358:	10800044 	addi	r2,r2,1
 402035c:	e0bff815 	stw	r2,-32(fp)
        	printf("=====> SDRAM Testing, Iteration: %d\n", TestIndex);
 4020360:	e17ff817 	ldw	r5,-32(fp)
 4020364:	010100f4 	movhi	r4,1027
 4020368:	21024704 	addi	r4,r4,2332
 402036c:	4020f1c0 	call	4020f1c <printf>
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 4020370:	008100f4 	movhi	r2,1027
 4020374:	1090af04 	addi	r2,r2,17084
 4020378:	10800017 	ldw	r2,0(r2)
        	TimeStart = alt_nticks();
 402037c:	e0bffd15 	stw	r2,-12(fp)

        	if (bPass)
 4020380:	e0bff617 	ldw	r2,-40(fp)
 4020384:	10000626 	beq	r2,zero,40203a0 <main+0x134>
        		bPass = TMEM_Verify(SDRAM_BASE, SDRAM_SPAN, InitValue,  bShowMessage);
 4020388:	e1fffb17 	ldw	r7,-20(fp)
 402038c:	e1bffa17 	ldw	r6,-24(fp)
 4020390:	01410034 	movhi	r5,1024
 4020394:	0009883a 	mov	r4,zero
 4020398:	40204680 	call	4020468 <TMEM_Verify>
 402039c:	e0bff615 	stw	r2,-40(fp)
 40203a0:	008100f4 	movhi	r2,1027
 40203a4:	1090af04 	addi	r2,r2,17084
 40203a8:	10c00017 	ldw	r3,0(r2)

        	TimeElapsed = alt_nticks() - TimeStart;
 40203ac:	e0bffd17 	ldw	r2,-12(fp)
 40203b0:	1885c83a 	sub	r2,r3,r2
 40203b4:	e0bffe15 	stw	r2,-8(fp)
        	printf("SDRAM test:%s, %d seconds\r\n", bPass?"Pass":"NG", (int)(TimeElapsed/alt_ticks_per_second()));
 40203b8:	e0bff617 	ldw	r2,-40(fp)
 40203bc:	10000326 	beq	r2,zero,40203cc <main+0x160>
 40203c0:	040100f4 	movhi	r16,1027
 40203c4:	84025104 	addi	r16,r16,2372
 40203c8:	00000206 	br	40203d4 <main+0x168>
 40203cc:	040100f4 	movhi	r16,1027
 40203d0:	84025304 	addi	r16,r16,2380
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 40203d4:	008100f4 	movhi	r2,1027
 40203d8:	1090ae04 	addi	r2,r2,17080
 40203dc:	10800017 	ldw	r2,0(r2)
 40203e0:	100b883a 	mov	r5,r2
 40203e4:	e13ffe17 	ldw	r4,-8(fp)
 40203e8:	4020cc00 	call	4020cc0 <__udivsi3>
 40203ec:	100d883a 	mov	r6,r2
 40203f0:	800b883a 	mov	r5,r16
 40203f4:	010100f4 	movhi	r4,1027
 40203f8:	21025404 	addi	r4,r4,2384
 40203fc:	4020f1c0 	call	4020f1c <printf>

            usleep(500*1000);
 4020400:	01000234 	movhi	r4,8
 4020404:	21284804 	addi	r4,r4,-24288
 4020408:	402e8980 	call	402e898 <usleep>
            if (bPass && bLoop){  // is abort loop?
 402040c:	e0bff617 	ldw	r2,-40(fp)
 4020410:	10000d26 	beq	r2,zero,4020448 <main+0x1dc>
 4020414:	e0bff717 	ldw	r2,-36(fp)
 4020418:	10000b26 	beq	r2,zero,4020448 <main+0x1dc>
            	ButtonStatus = IORD(KEY_BASE, 0);
 402041c:	00810134 	movhi	r2,1028
 4020420:	10840804 	addi	r2,r2,4128
 4020424:	10800037 	ldwio	r2,0(r2)
 4020428:	e0bff905 	stb	r2,-28(fp)
            	if ((ButtonStatus & ButtonMask) != ButtonMask)
 402042c:	e0fff903 	ldbu	r3,-28(fp)
 4020430:	e0bffc03 	ldbu	r2,-16(fp)
 4020434:	1884703a 	and	r2,r3,r2
 4020438:	10c03fcc 	andi	r3,r2,255
 402043c:	e0bffc03 	ldbu	r2,-16(fp)
 4020440:	18800126 	beq	r3,r2,4020448 <main+0x1dc>
            		bLoop = FALSE; // press any key to abort continued test
 4020444:	e03ff715 	stw	zero,-36(fp)
            }
            usleep(600*1000);
 4020448:	01000274 	movhi	r4,9
 402044c:	2109f004 	addi	r4,r4,10176
 4020450:	402e8980 	call	402e898 <usleep>
        }while(bLoop && bPass);
 4020454:	e0bff717 	ldw	r2,-36(fp)
 4020458:	103f9526 	beq	r2,zero,40202b0 <_gp+0xfffe5b4c>
 402045c:	e0bff617 	ldw	r2,-40(fp)
 4020460:	103fbc1e 	bne	r2,zero,4020354 <_gp+0xfffe5bf0>
	} // while(1)
 4020464:	003f9206 	br	40202b0 <_gp+0xfffe5b4c>

04020468 <TMEM_Verify>:
#include "terasic_includes.h"
#include "mem_verify.h"



bool TMEM_Verify(alt_u32 BaseAddr, alt_u32 ByteLen, alt_u32 InitValue, bool bShowMessage){
 4020468:	def7e504 	addi	sp,sp,-8300
 402046c:	dfc81a15 	stw	ra,8296(sp)
 4020470:	df081915 	stw	fp,8292(sp)
 4020474:	df081904 	addi	fp,sp,8292
 4020478:	e13ffc15 	stw	r4,-16(fp)
 402047c:	e17ffd15 	stw	r5,-12(fp)
 4020480:	e1bffe15 	stw	r6,-8(fp)
 4020484:	e1ffff15 	stw	r7,-4(fp)
    bool bPass = TRUE;
 4020488:	00800044 	movi	r2,1
 402048c:	e0b7e715 	stw	r2,-8292(fp)
    alt_u32 szData[1025];
    alt_u32 szRead[1025];
    int i, nRemainedLen, nAccessLen;
    alt_u32 *pDes, *pSrc, nItemNum, nPos;

    int nProgressIndex=0;
 4020490:	e037ed15 	stw	zero,-8268(fp)
    alt_u32 szProgress[10];
    
    for(i=0;i<10;i++){
 4020494:	e037e815 	stw	zero,-8288(fp)
 4020498:	00001506 	br	40204f0 <TMEM_Verify+0x88>
        szProgress[i] = ByteLen/10*(i+1);     
 402049c:	e0bffd17 	ldw	r2,-12(fp)
 40204a0:	01400284 	movi	r5,10
 40204a4:	1009883a 	mov	r4,r2
 40204a8:	4020cc00 	call	4020cc0 <__udivsi3>
 40204ac:	1007883a 	mov	r3,r2
 40204b0:	e0b7e817 	ldw	r2,-8288(fp)
 40204b4:	10800044 	addi	r2,r2,1
 40204b8:	100b883a 	mov	r5,r2
 40204bc:	1809883a 	mov	r4,r3
 40204c0:	4020d7c0 	call	4020d7c <__mulsi3>
 40204c4:	1007883a 	mov	r3,r2
 40204c8:	e0b7e817 	ldw	r2,-8288(fp)
 40204cc:	1085883a 	add	r2,r2,r2
 40204d0:	1085883a 	add	r2,r2,r2
 40204d4:	e137e704 	addi	r4,fp,-8292
 40204d8:	2085883a 	add	r2,r4,r2
 40204dc:	10880b04 	addi	r2,r2,8236
 40204e0:	10c00015 	stw	r3,0(r2)
    alt_u32 *pDes, *pSrc, nItemNum, nPos;

    int nProgressIndex=0;
    alt_u32 szProgress[10];
    
    for(i=0;i<10;i++){
 40204e4:	e0b7e817 	ldw	r2,-8288(fp)
 40204e8:	10800044 	addi	r2,r2,1
 40204ec:	e0b7e815 	stw	r2,-8288(fp)
 40204f0:	e0b7e817 	ldw	r2,-8288(fp)
 40204f4:	10800290 	cmplti	r2,r2,10
 40204f8:	103fe81e 	bne	r2,zero,402049c <_gp+0xfffe5d38>
        szProgress[i] = ByteLen/10*(i+1);     
    }
    
    
    
    nItemNum = sizeof(szData)/sizeof(szData[0]);
 40204fc:	00810044 	movi	r2,1025
 4020500:	e0b7ee15 	stw	r2,-8264(fp)
    for(i=0;i<nItemNum;i++){
 4020504:	e037e815 	stw	zero,-8288(fp)
 4020508:	00002106 	br	4020590 <TMEM_Verify+0x128>
        if (i == 0)
 402050c:	e0b7e817 	ldw	r2,-8288(fp)
 4020510:	1000091e 	bne	r2,zero,4020538 <TMEM_Verify+0xd0>
            szData[i] = InitValue;
 4020514:	e0b7e817 	ldw	r2,-8288(fp)
 4020518:	1085883a 	add	r2,r2,r2
 402051c:	1085883a 	add	r2,r2,r2
 4020520:	e0f7e704 	addi	r3,fp,-8292
 4020524:	1885883a 	add	r2,r3,r2
 4020528:	10800904 	addi	r2,r2,36
 402052c:	e0fffe17 	ldw	r3,-8(fp)
 4020530:	10c00015 	stw	r3,0(r2)
 4020534:	00001306 	br	4020584 <TMEM_Verify+0x11c>
        else     
            szData[i] = szData[i-1] * 13;
 4020538:	e0b7e817 	ldw	r2,-8288(fp)
 402053c:	10bfffc4 	addi	r2,r2,-1
 4020540:	1085883a 	add	r2,r2,r2
 4020544:	1085883a 	add	r2,r2,r2
 4020548:	e137e704 	addi	r4,fp,-8292
 402054c:	2085883a 	add	r2,r4,r2
 4020550:	10800904 	addi	r2,r2,36
 4020554:	10800017 	ldw	r2,0(r2)
 4020558:	01400344 	movi	r5,13
 402055c:	1009883a 	mov	r4,r2
 4020560:	4020d7c0 	call	4020d7c <__mulsi3>
 4020564:	1007883a 	mov	r3,r2
 4020568:	e0b7e817 	ldw	r2,-8288(fp)
 402056c:	1085883a 	add	r2,r2,r2
 4020570:	1085883a 	add	r2,r2,r2
 4020574:	e137e704 	addi	r4,fp,-8292
 4020578:	2085883a 	add	r2,r4,r2
 402057c:	10800904 	addi	r2,r2,36
 4020580:	10c00015 	stw	r3,0(r2)
    }
    
    
    
    nItemNum = sizeof(szData)/sizeof(szData[0]);
    for(i=0;i<nItemNum;i++){
 4020584:	e0b7e817 	ldw	r2,-8288(fp)
 4020588:	10800044 	addi	r2,r2,1
 402058c:	e0b7e815 	stw	r2,-8288(fp)
 4020590:	e0f7e817 	ldw	r3,-8288(fp)
 4020594:	e0b7ee17 	ldw	r2,-8264(fp)
 4020598:	18bfdc36 	bltu	r3,r2,402050c <_gp+0xfffe5da8>
        if (i == 0)
            szData[i] = InitValue;
        else     
            szData[i] = szData[i-1] * 13;
    }
    szData[nItemNum-1] = 0xAAAAAAAA;
 402059c:	e0b7ee17 	ldw	r2,-8264(fp)
 40205a0:	10bfffc4 	addi	r2,r2,-1
 40205a4:	1085883a 	add	r2,r2,r2
 40205a8:	1085883a 	add	r2,r2,r2
 40205ac:	e0f7e704 	addi	r3,fp,-8292
 40205b0:	1885883a 	add	r2,r3,r2
 40205b4:	10c00904 	addi	r3,r2,36
 40205b8:	00aaaaf4 	movhi	r2,43691
 40205bc:	10aaaa84 	addi	r2,r2,-21846
 40205c0:	18800015 	stw	r2,0(r3)
    szData[nItemNum-2] = 0x55555555;
 40205c4:	e0b7ee17 	ldw	r2,-8264(fp)
 40205c8:	10bfff84 	addi	r2,r2,-2
 40205cc:	1085883a 	add	r2,r2,r2
 40205d0:	1085883a 	add	r2,r2,r2
 40205d4:	e137e704 	addi	r4,fp,-8292
 40205d8:	2085883a 	add	r2,r4,r2
 40205dc:	10c00904 	addi	r3,r2,36
 40205e0:	00955574 	movhi	r2,21845
 40205e4:	10955544 	addi	r2,r2,21845
 40205e8:	18800015 	stw	r2,0(r3)
    szData[nItemNum-3] = 0x00000000;
 40205ec:	e0b7ee17 	ldw	r2,-8264(fp)
 40205f0:	10bfff44 	addi	r2,r2,-3
 40205f4:	1085883a 	add	r2,r2,r2
 40205f8:	1085883a 	add	r2,r2,r2
 40205fc:	e0f7e704 	addi	r3,fp,-8292
 4020600:	1885883a 	add	r2,r3,r2
 4020604:	10800904 	addi	r2,r2,36
 4020608:	10000015 	stw	zero,0(r2)
    szData[nItemNum-4] = 0xFFFFFFFF;
 402060c:	e0b7ee17 	ldw	r2,-8264(fp)
 4020610:	10bfff04 	addi	r2,r2,-4
 4020614:	1085883a 	add	r2,r2,r2
 4020618:	1085883a 	add	r2,r2,r2
 402061c:	e137e704 	addi	r4,fp,-8292
 4020620:	2085883a 	add	r2,r4,r2
 4020624:	10800904 	addi	r2,r2,36
 4020628:	00ffffc4 	movi	r3,-1
 402062c:	10c00015 	stw	r3,0(r2)
    
    if (bShowMessage)
 4020630:	e0bfff17 	ldw	r2,-4(fp)
 4020634:	10000326 	beq	r2,zero,4020644 <TMEM_Verify+0x1dc>
        printf("write...\n");
 4020638:	010100f4 	movhi	r4,1027
 402063c:	21025b04 	addi	r4,r4,2412
 4020640:	40210380 	call	4021038 <puts>
    // write
    pDes = (alt_u32 *)BaseAddr;
 4020644:	e0bffc17 	ldw	r2,-16(fp)
 4020648:	e0b7ea15 	stw	r2,-8280(fp)
    nAccessLen = sizeof(szData);
 402064c:	00840104 	movi	r2,4100
 4020650:	e0b7e915 	stw	r2,-8284(fp)
    nPos = 0;
 4020654:	e037ec15 	stw	zero,-8272(fp)
    while(nPos < ByteLen){
 4020658:	00003706 	br	4020738 <TMEM_Verify+0x2d0>
        nRemainedLen = ByteLen - nPos;
 402065c:	e0fffd17 	ldw	r3,-12(fp)
 4020660:	e0b7ec17 	ldw	r2,-8272(fp)
 4020664:	1885c83a 	sub	r2,r3,r2
 4020668:	e0b7ef15 	stw	r2,-8260(fp)
        if (nAccessLen > nRemainedLen)
 402066c:	e0b7e917 	ldw	r2,-8284(fp)
 4020670:	e0f7ef17 	ldw	r3,-8260(fp)
 4020674:	1880020e 	bge	r3,r2,4020680 <TMEM_Verify+0x218>
            nAccessLen = nRemainedLen;
 4020678:	e0b7ef17 	ldw	r2,-8260(fp)
 402067c:	e0b7e915 	stw	r2,-8284(fp)
        memcpy(pDes, szData, nAccessLen);
 4020680:	e0f7e917 	ldw	r3,-8284(fp)
 4020684:	e0b7f004 	addi	r2,fp,-8256
 4020688:	180d883a 	mov	r6,r3
 402068c:	100b883a 	mov	r5,r2
 4020690:	e137ea17 	ldw	r4,-8280(fp)
 4020694:	4020da40 	call	4020da4 <memcpy>
        pDes += nAccessLen/4;
 4020698:	e0b7e917 	ldw	r2,-8284(fp)
 402069c:	1000010e 	bge	r2,zero,40206a4 <TMEM_Verify+0x23c>
 40206a0:	108000c4 	addi	r2,r2,3
 40206a4:	1005d0ba 	srai	r2,r2,2
 40206a8:	1085883a 	add	r2,r2,r2
 40206ac:	1085883a 	add	r2,r2,r2
 40206b0:	1007883a 	mov	r3,r2
 40206b4:	e0b7ea17 	ldw	r2,-8280(fp)
 40206b8:	10c5883a 	add	r2,r2,r3
 40206bc:	e0b7ea15 	stw	r2,-8280(fp)
        nPos += nAccessLen;
 40206c0:	e0b7e917 	ldw	r2,-8284(fp)
 40206c4:	e0f7ec17 	ldw	r3,-8272(fp)
 40206c8:	1885883a 	add	r2,r3,r2
 40206cc:	e0b7ec15 	stw	r2,-8272(fp)
        
        if (bShowMessage){
 40206d0:	e0bfff17 	ldw	r2,-4(fp)
 40206d4:	10001826 	beq	r2,zero,4020738 <TMEM_Verify+0x2d0>
            if (nProgressIndex <= 9 && nPos >= szProgress[nProgressIndex]){
 40206d8:	e0b7ed17 	ldw	r2,-8268(fp)
 40206dc:	10800288 	cmpgei	r2,r2,10
 40206e0:	1000151e 	bne	r2,zero,4020738 <TMEM_Verify+0x2d0>
 40206e4:	e0b7ed17 	ldw	r2,-8268(fp)
 40206e8:	1085883a 	add	r2,r2,r2
 40206ec:	1085883a 	add	r2,r2,r2
 40206f0:	e0f7e704 	addi	r3,fp,-8292
 40206f4:	1885883a 	add	r2,r3,r2
 40206f8:	10880b04 	addi	r2,r2,8236
 40206fc:	10800017 	ldw	r2,0(r2)
 4020700:	e0f7ec17 	ldw	r3,-8272(fp)
 4020704:	18800c36 	bltu	r3,r2,4020738 <TMEM_Verify+0x2d0>
                nProgressIndex++;
 4020708:	e0b7ed17 	ldw	r2,-8268(fp)
 402070c:	10800044 	addi	r2,r2,1
 4020710:	e0b7ed15 	stw	r2,-8268(fp)
                printf("%02d%% ", nProgressIndex*10);
 4020714:	01400284 	movi	r5,10
 4020718:	e137ed17 	ldw	r4,-8268(fp)
 402071c:	4020d7c0 	call	4020d7c <__mulsi3>
 4020720:	100b883a 	mov	r5,r2
 4020724:	010100f4 	movhi	r4,1027
 4020728:	21025e04 	addi	r4,r4,2424
 402072c:	4020f1c0 	call	4020f1c <printf>
                usleep(50);
 4020730:	01000c84 	movi	r4,50
 4020734:	402e8980 	call	402e898 <usleep>
        printf("write...\n");
    // write
    pDes = (alt_u32 *)BaseAddr;
    nAccessLen = sizeof(szData);
    nPos = 0;
    while(nPos < ByteLen){
 4020738:	e0f7ec17 	ldw	r3,-8272(fp)
 402073c:	e0bffd17 	ldw	r2,-12(fp)
 4020740:	18bfc636 	bltu	r3,r2,402065c <_gp+0xfffe5ef8>
                usleep(50);
            }
        }            
    } 
    
    alt_dcache_flush_all();
 4020744:	402df400 	call	402df40 <alt_dcache_flush_all>
    
    if (bShowMessage){
 4020748:	e0bfff17 	ldw	r2,-4(fp)
 402074c:	10000626 	beq	r2,zero,4020768 <TMEM_Verify+0x300>
        nProgressIndex = 0;
 4020750:	e037ed15 	stw	zero,-8268(fp)
        printf("\nread/verify...\n");
 4020754:	010100f4 	movhi	r4,1027
 4020758:	21026004 	addi	r4,r4,2432
 402075c:	40210380 	call	4021038 <puts>
        usleep(50);
 4020760:	01000c84 	movi	r4,50
 4020764:	402e8980 	call	402e898 <usleep>
    }        
    
    // read & verify
    pSrc = (alt_u32 *)BaseAddr;
 4020768:	e0bffc17 	ldw	r2,-16(fp)
 402076c:	e0b7eb15 	stw	r2,-8276(fp)
    nAccessLen = sizeof(szRead);
 4020770:	00840104 	movi	r2,4100
 4020774:	e0b7e915 	stw	r2,-8284(fp)
    nPos = 0;
 4020778:	e037ec15 	stw	zero,-8272(fp)
    while(bPass && nPos < ByteLen){
 402077c:	00007106 	br	4020944 <TMEM_Verify+0x4dc>
        nRemainedLen = ByteLen - nPos;
 4020780:	e0fffd17 	ldw	r3,-12(fp)
 4020784:	e0b7ec17 	ldw	r2,-8272(fp)
 4020788:	1885c83a 	sub	r2,r3,r2
 402078c:	e0b7ef15 	stw	r2,-8260(fp)
        if (nAccessLen > nRemainedLen)
 4020790:	e0b7e917 	ldw	r2,-8284(fp)
 4020794:	e0f7ef17 	ldw	r3,-8260(fp)
 4020798:	1880020e 	bge	r3,r2,40207a4 <TMEM_Verify+0x33c>
            nAccessLen = nRemainedLen;
 402079c:	e0b7ef17 	ldw	r2,-8260(fp)
 40207a0:	e0b7e915 	stw	r2,-8284(fp)
       // memset(szRead, 0xAA, nAccessLen); // reset content    
        memcpy(szRead, pSrc, nAccessLen);
 40207a4:	e0f7e917 	ldw	r3,-8284(fp)
 40207a8:	e0bbf104 	addi	r2,fp,-4156
 40207ac:	180d883a 	mov	r6,r3
 40207b0:	e177eb17 	ldw	r5,-8276(fp)
 40207b4:	1009883a 	mov	r4,r2
 40207b8:	4020da40 	call	4020da4 <memcpy>
        // verify
        nItemNum = nAccessLen / 4;
 40207bc:	e0b7e917 	ldw	r2,-8284(fp)
 40207c0:	1000010e 	bge	r2,zero,40207c8 <TMEM_Verify+0x360>
 40207c4:	108000c4 	addi	r2,r2,3
 40207c8:	1005d0ba 	srai	r2,r2,2
 40207cc:	e0b7ee15 	stw	r2,-8264(fp)
        for(i=0;i<nItemNum && bPass;i++){
 40207d0:	e037e815 	stw	zero,-8288(fp)
 40207d4:	00003106 	br	402089c <TMEM_Verify+0x434>
            if (szRead[i] != szData[i]){
 40207d8:	e0b7e817 	ldw	r2,-8288(fp)
 40207dc:	1085883a 	add	r2,r2,r2
 40207e0:	1085883a 	add	r2,r2,r2
 40207e4:	e137e704 	addi	r4,fp,-8292
 40207e8:	2085883a 	add	r2,r4,r2
 40207ec:	10840a04 	addi	r2,r2,4136
 40207f0:	10c00017 	ldw	r3,0(r2)
 40207f4:	e0b7e817 	ldw	r2,-8288(fp)
 40207f8:	1085883a 	add	r2,r2,r2
 40207fc:	1085883a 	add	r2,r2,r2
 4020800:	e137e704 	addi	r4,fp,-8292
 4020804:	2085883a 	add	r2,r4,r2
 4020808:	10800904 	addi	r2,r2,36
 402080c:	10800017 	ldw	r2,0(r2)
 4020810:	18801f26 	beq	r3,r2,4020890 <TMEM_Verify+0x428>
                if (bShowMessage){
 4020814:	e0bfff17 	ldw	r2,-4(fp)
 4020818:	10001c26 	beq	r2,zero,402088c <TMEM_Verify+0x424>
                   printf("verify ng, read=%08Xh, expected=%08Xh, i=%Xh\n", (int)szRead[i], (int)szData[i], (int)(nPos/4+i));
 402081c:	e0b7e817 	ldw	r2,-8288(fp)
 4020820:	1085883a 	add	r2,r2,r2
 4020824:	1085883a 	add	r2,r2,r2
 4020828:	e0f7e704 	addi	r3,fp,-8292
 402082c:	1885883a 	add	r2,r3,r2
 4020830:	10840a04 	addi	r2,r2,4136
 4020834:	10800017 	ldw	r2,0(r2)
 4020838:	1009883a 	mov	r4,r2
 402083c:	e0b7e817 	ldw	r2,-8288(fp)
 4020840:	1085883a 	add	r2,r2,r2
 4020844:	1085883a 	add	r2,r2,r2
 4020848:	e0f7e704 	addi	r3,fp,-8292
 402084c:	1885883a 	add	r2,r3,r2
 4020850:	10800904 	addi	r2,r2,36
 4020854:	10800017 	ldw	r2,0(r2)
 4020858:	100b883a 	mov	r5,r2
 402085c:	e0b7ec17 	ldw	r2,-8272(fp)
 4020860:	1006d0ba 	srli	r3,r2,2
 4020864:	e0b7e817 	ldw	r2,-8288(fp)
 4020868:	1885883a 	add	r2,r3,r2
 402086c:	100f883a 	mov	r7,r2
 4020870:	280d883a 	mov	r6,r5
 4020874:	200b883a 	mov	r5,r4
 4020878:	010100f4 	movhi	r4,1027
 402087c:	21026404 	addi	r4,r4,2448
 4020880:	4020f1c0 	call	4020f1c <printf>
                   usleep(50);
 4020884:	01000c84 	movi	r4,50
 4020888:	402e8980 	call	402e898 <usleep>
                }   
                bPass = FALSE;
 402088c:	e037e715 	stw	zero,-8292(fp)
            nAccessLen = nRemainedLen;
       // memset(szRead, 0xAA, nAccessLen); // reset content    
        memcpy(szRead, pSrc, nAccessLen);
        // verify
        nItemNum = nAccessLen / 4;
        for(i=0;i<nItemNum && bPass;i++){
 4020890:	e0b7e817 	ldw	r2,-8288(fp)
 4020894:	10800044 	addi	r2,r2,1
 4020898:	e0b7e815 	stw	r2,-8288(fp)
 402089c:	e0f7e817 	ldw	r3,-8288(fp)
 40208a0:	e0b7ee17 	ldw	r2,-8264(fp)
 40208a4:	1880022e 	bgeu	r3,r2,40208b0 <TMEM_Verify+0x448>
 40208a8:	e0b7e717 	ldw	r2,-8292(fp)
 40208ac:	103fca1e 	bne	r2,zero,40207d8 <_gp+0xfffe6074>
                }   
                bPass = FALSE;
            }    
        }
        //
        pSrc += nItemNum;
 40208b0:	e0b7ee17 	ldw	r2,-8264(fp)
 40208b4:	1085883a 	add	r2,r2,r2
 40208b8:	1085883a 	add	r2,r2,r2
 40208bc:	1007883a 	mov	r3,r2
 40208c0:	e0b7eb17 	ldw	r2,-8276(fp)
 40208c4:	10c5883a 	add	r2,r2,r3
 40208c8:	e0b7eb15 	stw	r2,-8276(fp)
        nPos += nAccessLen;
 40208cc:	e0b7e917 	ldw	r2,-8284(fp)
 40208d0:	e0f7ec17 	ldw	r3,-8272(fp)
 40208d4:	1885883a 	add	r2,r3,r2
 40208d8:	e0b7ec15 	stw	r2,-8272(fp)

        if (bShowMessage){
 40208dc:	e0bfff17 	ldw	r2,-4(fp)
 40208e0:	10001826 	beq	r2,zero,4020944 <TMEM_Verify+0x4dc>
            if (nProgressIndex <= 9 && nPos >= szProgress[nProgressIndex]){
 40208e4:	e0b7ed17 	ldw	r2,-8268(fp)
 40208e8:	10800288 	cmpgei	r2,r2,10
 40208ec:	1000151e 	bne	r2,zero,4020944 <TMEM_Verify+0x4dc>
 40208f0:	e0b7ed17 	ldw	r2,-8268(fp)
 40208f4:	1085883a 	add	r2,r2,r2
 40208f8:	1085883a 	add	r2,r2,r2
 40208fc:	e137e704 	addi	r4,fp,-8292
 4020900:	2085883a 	add	r2,r4,r2
 4020904:	10880b04 	addi	r2,r2,8236
 4020908:	10800017 	ldw	r2,0(r2)
 402090c:	e0f7ec17 	ldw	r3,-8272(fp)
 4020910:	18800c36 	bltu	r3,r2,4020944 <TMEM_Verify+0x4dc>
                nProgressIndex++;
 4020914:	e0b7ed17 	ldw	r2,-8268(fp)
 4020918:	10800044 	addi	r2,r2,1
 402091c:	e0b7ed15 	stw	r2,-8268(fp)
                printf("%02d%% ", nProgressIndex*10);
 4020920:	01400284 	movi	r5,10
 4020924:	e137ed17 	ldw	r4,-8268(fp)
 4020928:	4020d7c0 	call	4020d7c <__mulsi3>
 402092c:	100b883a 	mov	r5,r2
 4020930:	010100f4 	movhi	r4,1027
 4020934:	21025e04 	addi	r4,r4,2424
 4020938:	4020f1c0 	call	4020f1c <printf>
                usleep(50);
 402093c:	01000c84 	movi	r4,50
 4020940:	402e8980 	call	402e898 <usleep>
    
    // read & verify
    pSrc = (alt_u32 *)BaseAddr;
    nAccessLen = sizeof(szRead);
    nPos = 0;
    while(bPass && nPos < ByteLen){
 4020944:	e0b7e717 	ldw	r2,-8292(fp)
 4020948:	10000326 	beq	r2,zero,4020958 <TMEM_Verify+0x4f0>
 402094c:	e0f7ec17 	ldw	r3,-8272(fp)
 4020950:	e0bffd17 	ldw	r2,-12(fp)
 4020954:	18bf8a36 	bltu	r3,r2,4020780 <_gp+0xfffe601c>
                usleep(50);
            }
        }            
    }     
    
    if (bShowMessage)
 4020958:	e0bfff17 	ldw	r2,-4(fp)
 402095c:	10000226 	beq	r2,zero,4020968 <TMEM_Verify+0x500>
        printf("\n");
 4020960:	01000284 	movi	r4,10
 4020964:	4020f600 	call	4020f60 <putchar>
   
    
    return bPass;
 4020968:	e0b7e717 	ldw	r2,-8292(fp)
}
 402096c:	e037883a 	mov	sp,fp
 4020970:	dfc00117 	ldw	ra,4(sp)
 4020974:	df000017 	ldw	fp,0(sp)
 4020978:	dec00204 	addi	sp,sp,8
 402097c:	f800283a 	ret

04020980 <TMEM_QuickVerify>:

bool TMEM_QuickVerify(alt_u32 BaseAddr, alt_u32 DataSize, alt_u32 DataWidth, alt_u32 AddrWidth){
 4020980:	defff104 	addi	sp,sp,-60
 4020984:	dfc00e15 	stw	ra,56(sp)
 4020988:	df000d15 	stw	fp,52(sp)
 402098c:	df000d04 	addi	fp,sp,52
 4020990:	e13ffc15 	stw	r4,-16(fp)
 4020994:	e17ffd15 	stw	r5,-12(fp)
 4020998:	e1bffe15 	stw	r6,-8(fp)
 402099c:	e1ffff15 	stw	r7,-4(fp)
    bool bPass = TRUE;
 40209a0:	00800044 	movi	r2,1
 40209a4:	e0bff315 	stw	r2,-52(fp)
    const alt_u32 TestNum = 1024*512;
 40209a8:	00800234 	movhi	r2,8
 40209ac:	e0bff615 	stw	r2,-40(fp)
    const alt_u32 TestPattern = 0xAA;
 40209b0:	00802a84 	movi	r2,170
 40209b4:	e0bff715 	stw	r2,-36(fp)
    alt_u32 mask, Read32, Addr32, TestData32, TestAddr32;
    int i;
    
    //alt_u32 *pMem = (alt_u32 *)BaseAddr;
    // test address line
    mask = 0x01;
 40209b8:	00800044 	movi	r2,1
 40209bc:	e0bff415 	stw	r2,-48(fp)
    for(i=0;i<AddrWidth && bPass;i++){
 40209c0:	e03ff515 	stw	zero,-44(fp)
 40209c4:	00001b06 	br	4020a34 <TMEM_QuickVerify+0xb4>
        //*(pMem + mask) = TestPattern;
        IOWR(BaseAddr, mask, TestPattern);
 40209c8:	e0bff417 	ldw	r2,-48(fp)
 40209cc:	1085883a 	add	r2,r2,r2
 40209d0:	1085883a 	add	r2,r2,r2
 40209d4:	1007883a 	mov	r3,r2
 40209d8:	e0bffc17 	ldw	r2,-16(fp)
 40209dc:	1885883a 	add	r2,r3,r2
 40209e0:	1007883a 	mov	r3,r2
 40209e4:	e0bff717 	ldw	r2,-36(fp)
 40209e8:	18800035 	stwio	r2,0(r3)
        //if (*(pMem + mask) != TestPattern)
        Read32 = IORD(BaseAddr, mask);
 40209ec:	e0bff417 	ldw	r2,-48(fp)
 40209f0:	1085883a 	add	r2,r2,r2
 40209f4:	1085883a 	add	r2,r2,r2
 40209f8:	1007883a 	mov	r3,r2
 40209fc:	e0bffc17 	ldw	r2,-16(fp)
 4020a00:	1885883a 	add	r2,r3,r2
 4020a04:	10800037 	ldwio	r2,0(r2)
 4020a08:	e0bff815 	stw	r2,-32(fp)
        if (Read32 != TestPattern)
 4020a0c:	e0fff817 	ldw	r3,-32(fp)
 4020a10:	e0bff717 	ldw	r2,-36(fp)
 4020a14:	18800126 	beq	r3,r2,4020a1c <TMEM_QuickVerify+0x9c>
            bPass = FALSE;
 4020a18:	e03ff315 	stw	zero,-52(fp)
        mask <<= 1;    
 4020a1c:	e0bff417 	ldw	r2,-48(fp)
 4020a20:	1085883a 	add	r2,r2,r2
 4020a24:	e0bff415 	stw	r2,-48(fp)
    int i;
    
    //alt_u32 *pMem = (alt_u32 *)BaseAddr;
    // test address line
    mask = 0x01;
    for(i=0;i<AddrWidth && bPass;i++){
 4020a28:	e0bff517 	ldw	r2,-44(fp)
 4020a2c:	10800044 	addi	r2,r2,1
 4020a30:	e0bff515 	stw	r2,-44(fp)
 4020a34:	e0fff517 	ldw	r3,-44(fp)
 4020a38:	e0bfff17 	ldw	r2,-4(fp)
 4020a3c:	1880022e 	bgeu	r3,r2,4020a48 <TMEM_QuickVerify+0xc8>
 4020a40:	e0bff317 	ldw	r2,-52(fp)
 4020a44:	103fe01e 	bne	r2,zero,40209c8 <_gp+0xfffe6264>
            bPass = FALSE;
        mask <<= 1;    
    }
    
    // test data line
    mask = 0x01;
 4020a48:	00800044 	movi	r2,1
 4020a4c:	e0bff415 	stw	r2,-48(fp)
    for(i=0;i<DataWidth && bPass;i++){
 4020a50:	e03ff515 	stw	zero,-44(fp)
 4020a54:	00002306 	br	4020ae4 <TMEM_QuickVerify+0x164>
        //*(pMem+i/32) = mask;
        Addr32 = i*13;
 4020a58:	01400344 	movi	r5,13
 4020a5c:	e13ff517 	ldw	r4,-44(fp)
 4020a60:	4020d7c0 	call	4020d7c <__mulsi3>
 4020a64:	e0bff915 	stw	r2,-28(fp)
        IOWR(BaseAddr, Addr32, mask);
 4020a68:	e0bff917 	ldw	r2,-28(fp)
 4020a6c:	1085883a 	add	r2,r2,r2
 4020a70:	1085883a 	add	r2,r2,r2
 4020a74:	1007883a 	mov	r3,r2
 4020a78:	e0bffc17 	ldw	r2,-16(fp)
 4020a7c:	1885883a 	add	r2,r3,r2
 4020a80:	1007883a 	mov	r3,r2
 4020a84:	e0bff417 	ldw	r2,-48(fp)
 4020a88:	18800035 	stwio	r2,0(r3)
        Read32 = IORD(BaseAddr, Addr32);
 4020a8c:	e0bff917 	ldw	r2,-28(fp)
 4020a90:	1085883a 	add	r2,r2,r2
 4020a94:	1085883a 	add	r2,r2,r2
 4020a98:	1007883a 	mov	r3,r2
 4020a9c:	e0bffc17 	ldw	r2,-16(fp)
 4020aa0:	1885883a 	add	r2,r3,r2
 4020aa4:	10800037 	ldwio	r2,0(r2)
 4020aa8:	e0bff815 	stw	r2,-32(fp)
        //if (*(pMem+i/32) != mask)
        if (Read32 != mask)
 4020aac:	e0fff817 	ldw	r3,-32(fp)
 4020ab0:	e0bff417 	ldw	r2,-48(fp)
 4020ab4:	18800126 	beq	r3,r2,4020abc <TMEM_QuickVerify+0x13c>
            bPass = FALSE;
 4020ab8:	e03ff315 	stw	zero,-52(fp)
        mask <<= 1;
 4020abc:	e0bff417 	ldw	r2,-48(fp)
 4020ac0:	1085883a 	add	r2,r2,r2
 4020ac4:	e0bff415 	stw	r2,-48(fp)
        if (mask == 0x00)
 4020ac8:	e0bff417 	ldw	r2,-48(fp)
 4020acc:	1000021e 	bne	r2,zero,4020ad8 <TMEM_QuickVerify+0x158>
            mask = 0x01;    
 4020ad0:	00800044 	movi	r2,1
 4020ad4:	e0bff415 	stw	r2,-48(fp)
        mask <<= 1;    
    }
    
    // test data line
    mask = 0x01;
    for(i=0;i<DataWidth && bPass;i++){
 4020ad8:	e0bff517 	ldw	r2,-44(fp)
 4020adc:	10800044 	addi	r2,r2,1
 4020ae0:	e0bff515 	stw	r2,-44(fp)
 4020ae4:	e0fff517 	ldw	r3,-44(fp)
 4020ae8:	e0bffe17 	ldw	r2,-8(fp)
 4020aec:	1880022e 	bgeu	r3,r2,4020af8 <TMEM_QuickVerify+0x178>
 4020af0:	e0bff317 	ldw	r2,-52(fp)
 4020af4:	103fd81e 	bne	r2,zero,4020a58 <_gp+0xfffe62f4>
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 4020af8:	008100f4 	movhi	r2,1027
 4020afc:	1090af04 	addi	r2,r2,17084
 4020b00:	10800017 	ldw	r2,0(r2)
        if (mask == 0x00)
            mask = 0x01;    
    }
    
    // random data test
    srand(alt_nticks());
 4020b04:	1009883a 	mov	r4,r2
 4020b08:	402104c0 	call	402104c <srand>
    for(i=0;i<TestNum && bPass;i++){
 4020b0c:	e03ff515 	stw	zero,-44(fp)
 4020b10:	00002206 	br	4020b9c <TMEM_QuickVerify+0x21c>
        TestAddr32 = rand()%(DataSize/4);
 4020b14:	40210640 	call	4021064 <rand>
 4020b18:	1007883a 	mov	r3,r2
 4020b1c:	e0bffd17 	ldw	r2,-12(fp)
 4020b20:	1004d0ba 	srli	r2,r2,2
 4020b24:	100b883a 	mov	r5,r2
 4020b28:	1809883a 	mov	r4,r3
 4020b2c:	4020d240 	call	4020d24 <__umodsi3>
 4020b30:	e0bffa15 	stw	r2,-24(fp)
        TestData32 = rand();
 4020b34:	40210640 	call	4021064 <rand>
 4020b38:	e0bffb15 	stw	r2,-20(fp)
        IOWR(BaseAddr, TestAddr32, TestData32);
 4020b3c:	e0bffa17 	ldw	r2,-24(fp)
 4020b40:	1085883a 	add	r2,r2,r2
 4020b44:	1085883a 	add	r2,r2,r2
 4020b48:	1007883a 	mov	r3,r2
 4020b4c:	e0bffc17 	ldw	r2,-16(fp)
 4020b50:	1885883a 	add	r2,r3,r2
 4020b54:	1007883a 	mov	r3,r2
 4020b58:	e0bffb17 	ldw	r2,-20(fp)
 4020b5c:	18800035 	stwio	r2,0(r3)
        Read32 = IORD(BaseAddr, TestAddr32);
 4020b60:	e0bffa17 	ldw	r2,-24(fp)
 4020b64:	1085883a 	add	r2,r2,r2
 4020b68:	1085883a 	add	r2,r2,r2
 4020b6c:	1007883a 	mov	r3,r2
 4020b70:	e0bffc17 	ldw	r2,-16(fp)
 4020b74:	1885883a 	add	r2,r3,r2
 4020b78:	10800037 	ldwio	r2,0(r2)
 4020b7c:	e0bff815 	stw	r2,-32(fp)
        if (Read32 != TestData32)
 4020b80:	e0fff817 	ldw	r3,-32(fp)
 4020b84:	e0bffb17 	ldw	r2,-20(fp)
 4020b88:	18800126 	beq	r3,r2,4020b90 <TMEM_QuickVerify+0x210>
            bPass = FALSE;        
 4020b8c:	e03ff315 	stw	zero,-52(fp)
            mask = 0x01;    
    }
    
    // random data test
    srand(alt_nticks());
    for(i=0;i<TestNum && bPass;i++){
 4020b90:	e0bff517 	ldw	r2,-44(fp)
 4020b94:	10800044 	addi	r2,r2,1
 4020b98:	e0bff515 	stw	r2,-44(fp)
 4020b9c:	e0fff517 	ldw	r3,-44(fp)
 4020ba0:	e0bff617 	ldw	r2,-40(fp)
 4020ba4:	1880022e 	bgeu	r3,r2,4020bb0 <TMEM_QuickVerify+0x230>
 4020ba8:	e0bff317 	ldw	r2,-52(fp)
 4020bac:	103fd91e 	bne	r2,zero,4020b14 <_gp+0xfffe63b0>
        if (Read32 != TestData32)
            bPass = FALSE;        
        
    }
    
    return bPass;
 4020bb0:	e0bff317 	ldw	r2,-52(fp)
}
 4020bb4:	e037883a 	mov	sp,fp
 4020bb8:	dfc00117 	ldw	ra,4(sp)
 4020bbc:	df000017 	ldw	fp,0(sp)
 4020bc0:	dec00204 	addi	sp,sp,8
 4020bc4:	f800283a 	ret

04020bc8 <__divsi3>:
 4020bc8:	20001b16 	blt	r4,zero,4020c38 <__divsi3+0x70>
 4020bcc:	000f883a 	mov	r7,zero
 4020bd0:	28001616 	blt	r5,zero,4020c2c <__divsi3+0x64>
 4020bd4:	200d883a 	mov	r6,r4
 4020bd8:	29001a2e 	bgeu	r5,r4,4020c44 <__divsi3+0x7c>
 4020bdc:	00800804 	movi	r2,32
 4020be0:	00c00044 	movi	r3,1
 4020be4:	00000106 	br	4020bec <__divsi3+0x24>
 4020be8:	10000d26 	beq	r2,zero,4020c20 <__divsi3+0x58>
 4020bec:	294b883a 	add	r5,r5,r5
 4020bf0:	10bfffc4 	addi	r2,r2,-1
 4020bf4:	18c7883a 	add	r3,r3,r3
 4020bf8:	293ffb36 	bltu	r5,r4,4020be8 <_gp+0xfffe6484>
 4020bfc:	0005883a 	mov	r2,zero
 4020c00:	18000726 	beq	r3,zero,4020c20 <__divsi3+0x58>
 4020c04:	0005883a 	mov	r2,zero
 4020c08:	31400236 	bltu	r6,r5,4020c14 <__divsi3+0x4c>
 4020c0c:	314dc83a 	sub	r6,r6,r5
 4020c10:	10c4b03a 	or	r2,r2,r3
 4020c14:	1806d07a 	srli	r3,r3,1
 4020c18:	280ad07a 	srli	r5,r5,1
 4020c1c:	183ffa1e 	bne	r3,zero,4020c08 <_gp+0xfffe64a4>
 4020c20:	38000126 	beq	r7,zero,4020c28 <__divsi3+0x60>
 4020c24:	0085c83a 	sub	r2,zero,r2
 4020c28:	f800283a 	ret
 4020c2c:	014bc83a 	sub	r5,zero,r5
 4020c30:	39c0005c 	xori	r7,r7,1
 4020c34:	003fe706 	br	4020bd4 <_gp+0xfffe6470>
 4020c38:	0109c83a 	sub	r4,zero,r4
 4020c3c:	01c00044 	movi	r7,1
 4020c40:	003fe306 	br	4020bd0 <_gp+0xfffe646c>
 4020c44:	00c00044 	movi	r3,1
 4020c48:	003fee06 	br	4020c04 <_gp+0xfffe64a0>

04020c4c <__modsi3>:
 4020c4c:	20001716 	blt	r4,zero,4020cac <__modsi3+0x60>
 4020c50:	000f883a 	mov	r7,zero
 4020c54:	2005883a 	mov	r2,r4
 4020c58:	28001216 	blt	r5,zero,4020ca4 <__modsi3+0x58>
 4020c5c:	2900162e 	bgeu	r5,r4,4020cb8 <__modsi3+0x6c>
 4020c60:	01800804 	movi	r6,32
 4020c64:	00c00044 	movi	r3,1
 4020c68:	00000106 	br	4020c70 <__modsi3+0x24>
 4020c6c:	30000a26 	beq	r6,zero,4020c98 <__modsi3+0x4c>
 4020c70:	294b883a 	add	r5,r5,r5
 4020c74:	31bfffc4 	addi	r6,r6,-1
 4020c78:	18c7883a 	add	r3,r3,r3
 4020c7c:	293ffb36 	bltu	r5,r4,4020c6c <_gp+0xfffe6508>
 4020c80:	18000526 	beq	r3,zero,4020c98 <__modsi3+0x4c>
 4020c84:	1806d07a 	srli	r3,r3,1
 4020c88:	11400136 	bltu	r2,r5,4020c90 <__modsi3+0x44>
 4020c8c:	1145c83a 	sub	r2,r2,r5
 4020c90:	280ad07a 	srli	r5,r5,1
 4020c94:	183ffb1e 	bne	r3,zero,4020c84 <_gp+0xfffe6520>
 4020c98:	38000126 	beq	r7,zero,4020ca0 <__modsi3+0x54>
 4020c9c:	0085c83a 	sub	r2,zero,r2
 4020ca0:	f800283a 	ret
 4020ca4:	014bc83a 	sub	r5,zero,r5
 4020ca8:	003fec06 	br	4020c5c <_gp+0xfffe64f8>
 4020cac:	0109c83a 	sub	r4,zero,r4
 4020cb0:	01c00044 	movi	r7,1
 4020cb4:	003fe706 	br	4020c54 <_gp+0xfffe64f0>
 4020cb8:	00c00044 	movi	r3,1
 4020cbc:	003ff106 	br	4020c84 <_gp+0xfffe6520>

04020cc0 <__udivsi3>:
 4020cc0:	200d883a 	mov	r6,r4
 4020cc4:	2900152e 	bgeu	r5,r4,4020d1c <__udivsi3+0x5c>
 4020cc8:	28001416 	blt	r5,zero,4020d1c <__udivsi3+0x5c>
 4020ccc:	00800804 	movi	r2,32
 4020cd0:	00c00044 	movi	r3,1
 4020cd4:	00000206 	br	4020ce0 <__udivsi3+0x20>
 4020cd8:	10000e26 	beq	r2,zero,4020d14 <__udivsi3+0x54>
 4020cdc:	28000516 	blt	r5,zero,4020cf4 <__udivsi3+0x34>
 4020ce0:	294b883a 	add	r5,r5,r5
 4020ce4:	10bfffc4 	addi	r2,r2,-1
 4020ce8:	18c7883a 	add	r3,r3,r3
 4020cec:	293ffa36 	bltu	r5,r4,4020cd8 <_gp+0xfffe6574>
 4020cf0:	18000826 	beq	r3,zero,4020d14 <__udivsi3+0x54>
 4020cf4:	0005883a 	mov	r2,zero
 4020cf8:	31400236 	bltu	r6,r5,4020d04 <__udivsi3+0x44>
 4020cfc:	314dc83a 	sub	r6,r6,r5
 4020d00:	10c4b03a 	or	r2,r2,r3
 4020d04:	1806d07a 	srli	r3,r3,1
 4020d08:	280ad07a 	srli	r5,r5,1
 4020d0c:	183ffa1e 	bne	r3,zero,4020cf8 <_gp+0xfffe6594>
 4020d10:	f800283a 	ret
 4020d14:	0005883a 	mov	r2,zero
 4020d18:	f800283a 	ret
 4020d1c:	00c00044 	movi	r3,1
 4020d20:	003ff406 	br	4020cf4 <_gp+0xfffe6590>

04020d24 <__umodsi3>:
 4020d24:	2005883a 	mov	r2,r4
 4020d28:	2900122e 	bgeu	r5,r4,4020d74 <__umodsi3+0x50>
 4020d2c:	28001116 	blt	r5,zero,4020d74 <__umodsi3+0x50>
 4020d30:	01800804 	movi	r6,32
 4020d34:	00c00044 	movi	r3,1
 4020d38:	00000206 	br	4020d44 <__umodsi3+0x20>
 4020d3c:	30000c26 	beq	r6,zero,4020d70 <__umodsi3+0x4c>
 4020d40:	28000516 	blt	r5,zero,4020d58 <__umodsi3+0x34>
 4020d44:	294b883a 	add	r5,r5,r5
 4020d48:	31bfffc4 	addi	r6,r6,-1
 4020d4c:	18c7883a 	add	r3,r3,r3
 4020d50:	293ffa36 	bltu	r5,r4,4020d3c <_gp+0xfffe65d8>
 4020d54:	18000626 	beq	r3,zero,4020d70 <__umodsi3+0x4c>
 4020d58:	1806d07a 	srli	r3,r3,1
 4020d5c:	11400136 	bltu	r2,r5,4020d64 <__umodsi3+0x40>
 4020d60:	1145c83a 	sub	r2,r2,r5
 4020d64:	280ad07a 	srli	r5,r5,1
 4020d68:	183ffb1e 	bne	r3,zero,4020d58 <_gp+0xfffe65f4>
 4020d6c:	f800283a 	ret
 4020d70:	f800283a 	ret
 4020d74:	00c00044 	movi	r3,1
 4020d78:	003ff706 	br	4020d58 <_gp+0xfffe65f4>

04020d7c <__mulsi3>:
 4020d7c:	0005883a 	mov	r2,zero
 4020d80:	20000726 	beq	r4,zero,4020da0 <__mulsi3+0x24>
 4020d84:	20c0004c 	andi	r3,r4,1
 4020d88:	2008d07a 	srli	r4,r4,1
 4020d8c:	18000126 	beq	r3,zero,4020d94 <__mulsi3+0x18>
 4020d90:	1145883a 	add	r2,r2,r5
 4020d94:	294b883a 	add	r5,r5,r5
 4020d98:	203ffa1e 	bne	r4,zero,4020d84 <_gp+0xfffe6620>
 4020d9c:	f800283a 	ret
 4020da0:	f800283a 	ret

04020da4 <memcpy>:
 4020da4:	defffd04 	addi	sp,sp,-12
 4020da8:	dfc00215 	stw	ra,8(sp)
 4020dac:	dc400115 	stw	r17,4(sp)
 4020db0:	dc000015 	stw	r16,0(sp)
 4020db4:	00c003c4 	movi	r3,15
 4020db8:	2005883a 	mov	r2,r4
 4020dbc:	1980452e 	bgeu	r3,r6,4020ed4 <memcpy+0x130>
 4020dc0:	2906b03a 	or	r3,r5,r4
 4020dc4:	18c000cc 	andi	r3,r3,3
 4020dc8:	1800441e 	bne	r3,zero,4020edc <memcpy+0x138>
 4020dcc:	347ffc04 	addi	r17,r6,-16
 4020dd0:	8822d13a 	srli	r17,r17,4
 4020dd4:	28c00104 	addi	r3,r5,4
 4020dd8:	23400104 	addi	r13,r4,4
 4020ddc:	8820913a 	slli	r16,r17,4
 4020de0:	2b000204 	addi	r12,r5,8
 4020de4:	22c00204 	addi	r11,r4,8
 4020de8:	84000504 	addi	r16,r16,20
 4020dec:	2a800304 	addi	r10,r5,12
 4020df0:	22400304 	addi	r9,r4,12
 4020df4:	2c21883a 	add	r16,r5,r16
 4020df8:	2811883a 	mov	r8,r5
 4020dfc:	200f883a 	mov	r7,r4
 4020e00:	41000017 	ldw	r4,0(r8)
 4020e04:	1fc00017 	ldw	ra,0(r3)
 4020e08:	63c00017 	ldw	r15,0(r12)
 4020e0c:	39000015 	stw	r4,0(r7)
 4020e10:	53800017 	ldw	r14,0(r10)
 4020e14:	6fc00015 	stw	ra,0(r13)
 4020e18:	5bc00015 	stw	r15,0(r11)
 4020e1c:	4b800015 	stw	r14,0(r9)
 4020e20:	18c00404 	addi	r3,r3,16
 4020e24:	39c00404 	addi	r7,r7,16
 4020e28:	42000404 	addi	r8,r8,16
 4020e2c:	6b400404 	addi	r13,r13,16
 4020e30:	63000404 	addi	r12,r12,16
 4020e34:	5ac00404 	addi	r11,r11,16
 4020e38:	52800404 	addi	r10,r10,16
 4020e3c:	4a400404 	addi	r9,r9,16
 4020e40:	1c3fef1e 	bne	r3,r16,4020e00 <_gp+0xfffe669c>
 4020e44:	89c00044 	addi	r7,r17,1
 4020e48:	380e913a 	slli	r7,r7,4
 4020e4c:	310003cc 	andi	r4,r6,15
 4020e50:	02c000c4 	movi	r11,3
 4020e54:	11c7883a 	add	r3,r2,r7
 4020e58:	29cb883a 	add	r5,r5,r7
 4020e5c:	5900212e 	bgeu	r11,r4,4020ee4 <memcpy+0x140>
 4020e60:	1813883a 	mov	r9,r3
 4020e64:	2811883a 	mov	r8,r5
 4020e68:	200f883a 	mov	r7,r4
 4020e6c:	42800017 	ldw	r10,0(r8)
 4020e70:	4a400104 	addi	r9,r9,4
 4020e74:	39ffff04 	addi	r7,r7,-4
 4020e78:	4abfff15 	stw	r10,-4(r9)
 4020e7c:	42000104 	addi	r8,r8,4
 4020e80:	59fffa36 	bltu	r11,r7,4020e6c <_gp+0xfffe6708>
 4020e84:	213fff04 	addi	r4,r4,-4
 4020e88:	2008d0ba 	srli	r4,r4,2
 4020e8c:	318000cc 	andi	r6,r6,3
 4020e90:	21000044 	addi	r4,r4,1
 4020e94:	2109883a 	add	r4,r4,r4
 4020e98:	2109883a 	add	r4,r4,r4
 4020e9c:	1907883a 	add	r3,r3,r4
 4020ea0:	290b883a 	add	r5,r5,r4
 4020ea4:	30000626 	beq	r6,zero,4020ec0 <memcpy+0x11c>
 4020ea8:	198d883a 	add	r6,r3,r6
 4020eac:	29c00003 	ldbu	r7,0(r5)
 4020eb0:	18c00044 	addi	r3,r3,1
 4020eb4:	29400044 	addi	r5,r5,1
 4020eb8:	19ffffc5 	stb	r7,-1(r3)
 4020ebc:	19bffb1e 	bne	r3,r6,4020eac <_gp+0xfffe6748>
 4020ec0:	dfc00217 	ldw	ra,8(sp)
 4020ec4:	dc400117 	ldw	r17,4(sp)
 4020ec8:	dc000017 	ldw	r16,0(sp)
 4020ecc:	dec00304 	addi	sp,sp,12
 4020ed0:	f800283a 	ret
 4020ed4:	2007883a 	mov	r3,r4
 4020ed8:	003ff206 	br	4020ea4 <_gp+0xfffe6740>
 4020edc:	2007883a 	mov	r3,r4
 4020ee0:	003ff106 	br	4020ea8 <_gp+0xfffe6744>
 4020ee4:	200d883a 	mov	r6,r4
 4020ee8:	003fee06 	br	4020ea4 <_gp+0xfffe6740>

04020eec <_printf_r>:
 4020eec:	defffd04 	addi	sp,sp,-12
 4020ef0:	2805883a 	mov	r2,r5
 4020ef4:	dfc00015 	stw	ra,0(sp)
 4020ef8:	d9800115 	stw	r6,4(sp)
 4020efc:	d9c00215 	stw	r7,8(sp)
 4020f00:	21400217 	ldw	r5,8(r4)
 4020f04:	d9c00104 	addi	r7,sp,4
 4020f08:	100d883a 	mov	r6,r2
 4020f0c:	40211600 	call	4021160 <___vfprintf_internal_r>
 4020f10:	dfc00017 	ldw	ra,0(sp)
 4020f14:	dec00304 	addi	sp,sp,12
 4020f18:	f800283a 	ret

04020f1c <printf>:
 4020f1c:	defffc04 	addi	sp,sp,-16
 4020f20:	dfc00015 	stw	ra,0(sp)
 4020f24:	d9400115 	stw	r5,4(sp)
 4020f28:	d9800215 	stw	r6,8(sp)
 4020f2c:	d9c00315 	stw	r7,12(sp)
 4020f30:	008100f4 	movhi	r2,1027
 4020f34:	1089da04 	addi	r2,r2,10088
 4020f38:	10800017 	ldw	r2,0(r2)
 4020f3c:	200b883a 	mov	r5,r4
 4020f40:	d9800104 	addi	r6,sp,4
 4020f44:	11000217 	ldw	r4,8(r2)
 4020f48:	402343c0 	call	402343c <__vfprintf_internal>
 4020f4c:	dfc00017 	ldw	ra,0(sp)
 4020f50:	dec00404 	addi	sp,sp,16
 4020f54:	f800283a 	ret

04020f58 <_putchar_r>:
 4020f58:	21800217 	ldw	r6,8(r4)
 4020f5c:	4027eb81 	jmpi	4027eb8 <_putc_r>

04020f60 <putchar>:
 4020f60:	008100f4 	movhi	r2,1027
 4020f64:	1089da04 	addi	r2,r2,10088
 4020f68:	200b883a 	mov	r5,r4
 4020f6c:	11000017 	ldw	r4,0(r2)
 4020f70:	21800217 	ldw	r6,8(r4)
 4020f74:	4027eb81 	jmpi	4027eb8 <_putc_r>

04020f78 <_puts_r>:
 4020f78:	defff604 	addi	sp,sp,-40
 4020f7c:	dc000715 	stw	r16,28(sp)
 4020f80:	2021883a 	mov	r16,r4
 4020f84:	2809883a 	mov	r4,r5
 4020f88:	dc400815 	stw	r17,32(sp)
 4020f8c:	dfc00915 	stw	ra,36(sp)
 4020f90:	2823883a 	mov	r17,r5
 4020f94:	40210c80 	call	40210c8 <strlen>
 4020f98:	10c00044 	addi	r3,r2,1
 4020f9c:	d8800115 	stw	r2,4(sp)
 4020fa0:	008100f4 	movhi	r2,1027
 4020fa4:	10827004 	addi	r2,r2,2496
 4020fa8:	d8800215 	stw	r2,8(sp)
 4020fac:	00800044 	movi	r2,1
 4020fb0:	d8800315 	stw	r2,12(sp)
 4020fb4:	00800084 	movi	r2,2
 4020fb8:	dc400015 	stw	r17,0(sp)
 4020fbc:	d8c00615 	stw	r3,24(sp)
 4020fc0:	dec00415 	stw	sp,16(sp)
 4020fc4:	d8800515 	stw	r2,20(sp)
 4020fc8:	80000226 	beq	r16,zero,4020fd4 <_puts_r+0x5c>
 4020fcc:	80800e17 	ldw	r2,56(r16)
 4020fd0:	10001426 	beq	r2,zero,4021024 <_puts_r+0xac>
 4020fd4:	81400217 	ldw	r5,8(r16)
 4020fd8:	2880030b 	ldhu	r2,12(r5)
 4020fdc:	10c8000c 	andi	r3,r2,8192
 4020fe0:	1800061e 	bne	r3,zero,4020ffc <_puts_r+0x84>
 4020fe4:	29001917 	ldw	r4,100(r5)
 4020fe8:	00f7ffc4 	movi	r3,-8193
 4020fec:	10880014 	ori	r2,r2,8192
 4020ff0:	20c6703a 	and	r3,r4,r3
 4020ff4:	2880030d 	sth	r2,12(r5)
 4020ff8:	28c01915 	stw	r3,100(r5)
 4020ffc:	d9800404 	addi	r6,sp,16
 4021000:	8009883a 	mov	r4,r16
 4021004:	40259a40 	call	40259a4 <__sfvwrite_r>
 4021008:	1000091e 	bne	r2,zero,4021030 <_puts_r+0xb8>
 402100c:	00800284 	movi	r2,10
 4021010:	dfc00917 	ldw	ra,36(sp)
 4021014:	dc400817 	ldw	r17,32(sp)
 4021018:	dc000717 	ldw	r16,28(sp)
 402101c:	dec00a04 	addi	sp,sp,40
 4021020:	f800283a 	ret
 4021024:	8009883a 	mov	r4,r16
 4021028:	40255200 	call	4025520 <__sinit>
 402102c:	003fe906 	br	4020fd4 <_gp+0xfffe6870>
 4021030:	00bfffc4 	movi	r2,-1
 4021034:	003ff606 	br	4021010 <_gp+0xfffe68ac>

04021038 <puts>:
 4021038:	008100f4 	movhi	r2,1027
 402103c:	1089da04 	addi	r2,r2,10088
 4021040:	200b883a 	mov	r5,r4
 4021044:	11000017 	ldw	r4,0(r2)
 4021048:	4020f781 	jmpi	4020f78 <_puts_r>

0402104c <srand>:
 402104c:	008100f4 	movhi	r2,1027
 4021050:	1089da04 	addi	r2,r2,10088
 4021054:	10800017 	ldw	r2,0(r2)
 4021058:	11002915 	stw	r4,164(r2)
 402105c:	10002a15 	stw	zero,168(r2)
 4021060:	f800283a 	ret

04021064 <rand>:
 4021064:	008100f4 	movhi	r2,1027
 4021068:	defffe04 	addi	sp,sp,-8
 402106c:	1089da04 	addi	r2,r2,10088
 4021070:	dc000015 	stw	r16,0(sp)
 4021074:	14000017 	ldw	r16,0(r2)
 4021078:	dfc00115 	stw	ra,4(sp)
 402107c:	01932574 	movhi	r6,19605
 4021080:	81002917 	ldw	r4,164(r16)
 4021084:	81402a17 	ldw	r5,168(r16)
 4021088:	01d614b4 	movhi	r7,22610
 402108c:	319fcb44 	addi	r6,r6,32557
 4021090:	39fd0b44 	addi	r7,r7,-3027
 4021094:	402a8a80 	call	402a8a8 <__muldi3>
 4021098:	11000044 	addi	r4,r2,1
 402109c:	2085803a 	cmpltu	r2,r4,r2
 40210a0:	10c7883a 	add	r3,r2,r3
 40210a4:	00a00034 	movhi	r2,32768
 40210a8:	10bfffc4 	addi	r2,r2,-1
 40210ac:	1884703a 	and	r2,r3,r2
 40210b0:	81002915 	stw	r4,164(r16)
 40210b4:	80c02a15 	stw	r3,168(r16)
 40210b8:	dfc00117 	ldw	ra,4(sp)
 40210bc:	dc000017 	ldw	r16,0(sp)
 40210c0:	dec00204 	addi	sp,sp,8
 40210c4:	f800283a 	ret

040210c8 <strlen>:
 40210c8:	208000cc 	andi	r2,r4,3
 40210cc:	10002026 	beq	r2,zero,4021150 <strlen+0x88>
 40210d0:	20800007 	ldb	r2,0(r4)
 40210d4:	10002026 	beq	r2,zero,4021158 <strlen+0x90>
 40210d8:	2005883a 	mov	r2,r4
 40210dc:	00000206 	br	40210e8 <strlen+0x20>
 40210e0:	10c00007 	ldb	r3,0(r2)
 40210e4:	18001826 	beq	r3,zero,4021148 <strlen+0x80>
 40210e8:	10800044 	addi	r2,r2,1
 40210ec:	10c000cc 	andi	r3,r2,3
 40210f0:	183ffb1e 	bne	r3,zero,40210e0 <_gp+0xfffe697c>
 40210f4:	10c00017 	ldw	r3,0(r2)
 40210f8:	01ffbff4 	movhi	r7,65279
 40210fc:	39ffbfc4 	addi	r7,r7,-257
 4021100:	00ca303a 	nor	r5,zero,r3
 4021104:	01a02074 	movhi	r6,32897
 4021108:	19c7883a 	add	r3,r3,r7
 402110c:	31a02004 	addi	r6,r6,-32640
 4021110:	1946703a 	and	r3,r3,r5
 4021114:	1986703a 	and	r3,r3,r6
 4021118:	1800091e 	bne	r3,zero,4021140 <strlen+0x78>
 402111c:	10800104 	addi	r2,r2,4
 4021120:	10c00017 	ldw	r3,0(r2)
 4021124:	19cb883a 	add	r5,r3,r7
 4021128:	00c6303a 	nor	r3,zero,r3
 402112c:	28c6703a 	and	r3,r5,r3
 4021130:	1986703a 	and	r3,r3,r6
 4021134:	183ff926 	beq	r3,zero,402111c <_gp+0xfffe69b8>
 4021138:	00000106 	br	4021140 <strlen+0x78>
 402113c:	10800044 	addi	r2,r2,1
 4021140:	10c00007 	ldb	r3,0(r2)
 4021144:	183ffd1e 	bne	r3,zero,402113c <_gp+0xfffe69d8>
 4021148:	1105c83a 	sub	r2,r2,r4
 402114c:	f800283a 	ret
 4021150:	2005883a 	mov	r2,r4
 4021154:	003fe706 	br	40210f4 <_gp+0xfffe6990>
 4021158:	0005883a 	mov	r2,zero
 402115c:	f800283a 	ret

04021160 <___vfprintf_internal_r>:
 4021160:	deffb804 	addi	sp,sp,-288
 4021164:	dfc04715 	stw	ra,284(sp)
 4021168:	ddc04515 	stw	r23,276(sp)
 402116c:	dd404315 	stw	r21,268(sp)
 4021170:	d9002d15 	stw	r4,180(sp)
 4021174:	282f883a 	mov	r23,r5
 4021178:	302b883a 	mov	r21,r6
 402117c:	d9c02e15 	stw	r7,184(sp)
 4021180:	df004615 	stw	fp,280(sp)
 4021184:	dd804415 	stw	r22,272(sp)
 4021188:	dd004215 	stw	r20,264(sp)
 402118c:	dcc04115 	stw	r19,260(sp)
 4021190:	dc804015 	stw	r18,256(sp)
 4021194:	dc403f15 	stw	r17,252(sp)
 4021198:	dc003e15 	stw	r16,248(sp)
 402119c:	40260a00 	call	40260a0 <_localeconv_r>
 40211a0:	10800017 	ldw	r2,0(r2)
 40211a4:	1009883a 	mov	r4,r2
 40211a8:	d8803415 	stw	r2,208(sp)
 40211ac:	40210c80 	call	40210c8 <strlen>
 40211b0:	d8803715 	stw	r2,220(sp)
 40211b4:	d8802d17 	ldw	r2,180(sp)
 40211b8:	10000226 	beq	r2,zero,40211c4 <___vfprintf_internal_r+0x64>
 40211bc:	10800e17 	ldw	r2,56(r2)
 40211c0:	1000fb26 	beq	r2,zero,40215b0 <___vfprintf_internal_r+0x450>
 40211c4:	b880030b 	ldhu	r2,12(r23)
 40211c8:	10c8000c 	andi	r3,r2,8192
 40211cc:	1800061e 	bne	r3,zero,40211e8 <___vfprintf_internal_r+0x88>
 40211d0:	b9001917 	ldw	r4,100(r23)
 40211d4:	00f7ffc4 	movi	r3,-8193
 40211d8:	10880014 	ori	r2,r2,8192
 40211dc:	20c6703a 	and	r3,r4,r3
 40211e0:	b880030d 	sth	r2,12(r23)
 40211e4:	b8c01915 	stw	r3,100(r23)
 40211e8:	10c0020c 	andi	r3,r2,8
 40211ec:	1800c326 	beq	r3,zero,40214fc <___vfprintf_internal_r+0x39c>
 40211f0:	b8c00417 	ldw	r3,16(r23)
 40211f4:	1800c126 	beq	r3,zero,40214fc <___vfprintf_internal_r+0x39c>
 40211f8:	1080068c 	andi	r2,r2,26
 40211fc:	00c00284 	movi	r3,10
 4021200:	10c0c626 	beq	r2,r3,402151c <___vfprintf_internal_r+0x3bc>
 4021204:	d8c00404 	addi	r3,sp,16
 4021208:	050100f4 	movhi	r20,1027
 402120c:	d9001e04 	addi	r4,sp,120
 4021210:	a5028184 	addi	r20,r20,2566
 4021214:	d8c01e15 	stw	r3,120(sp)
 4021218:	d8002015 	stw	zero,128(sp)
 402121c:	d8001f15 	stw	zero,124(sp)
 4021220:	d8003315 	stw	zero,204(sp)
 4021224:	d8003615 	stw	zero,216(sp)
 4021228:	d8003815 	stw	zero,224(sp)
 402122c:	1811883a 	mov	r8,r3
 4021230:	d8003915 	stw	zero,228(sp)
 4021234:	d8003a15 	stw	zero,232(sp)
 4021238:	d8002f15 	stw	zero,188(sp)
 402123c:	d9002815 	stw	r4,160(sp)
 4021240:	a8800007 	ldb	r2,0(r21)
 4021244:	10028b26 	beq	r2,zero,4021c74 <___vfprintf_internal_r+0xb14>
 4021248:	00c00944 	movi	r3,37
 402124c:	a823883a 	mov	r17,r21
 4021250:	10c0021e 	bne	r2,r3,402125c <___vfprintf_internal_r+0xfc>
 4021254:	00001406 	br	40212a8 <___vfprintf_internal_r+0x148>
 4021258:	10c00326 	beq	r2,r3,4021268 <___vfprintf_internal_r+0x108>
 402125c:	8c400044 	addi	r17,r17,1
 4021260:	88800007 	ldb	r2,0(r17)
 4021264:	103ffc1e 	bne	r2,zero,4021258 <_gp+0xfffe6af4>
 4021268:	8d61c83a 	sub	r16,r17,r21
 402126c:	80000e26 	beq	r16,zero,40212a8 <___vfprintf_internal_r+0x148>
 4021270:	d8c02017 	ldw	r3,128(sp)
 4021274:	d8801f17 	ldw	r2,124(sp)
 4021278:	45400015 	stw	r21,0(r8)
 402127c:	1c07883a 	add	r3,r3,r16
 4021280:	10800044 	addi	r2,r2,1
 4021284:	d8c02015 	stw	r3,128(sp)
 4021288:	44000115 	stw	r16,4(r8)
 402128c:	d8801f15 	stw	r2,124(sp)
 4021290:	00c001c4 	movi	r3,7
 4021294:	1880a916 	blt	r3,r2,402153c <___vfprintf_internal_r+0x3dc>
 4021298:	42000204 	addi	r8,r8,8
 402129c:	d9402f17 	ldw	r5,188(sp)
 40212a0:	2c0b883a 	add	r5,r5,r16
 40212a4:	d9402f15 	stw	r5,188(sp)
 40212a8:	88800007 	ldb	r2,0(r17)
 40212ac:	1000aa26 	beq	r2,zero,4021558 <___vfprintf_internal_r+0x3f8>
 40212b0:	8d400044 	addi	r21,r17,1
 40212b4:	8c400047 	ldb	r17,1(r17)
 40212b8:	0021883a 	mov	r16,zero
 40212bc:	00bfffc4 	movi	r2,-1
 40212c0:	0025883a 	mov	r18,zero
 40212c4:	dc002905 	stb	r16,164(sp)
 40212c8:	d8002785 	stb	zero,158(sp)
 40212cc:	d8002b05 	stb	zero,172(sp)
 40212d0:	d8802a15 	stw	r2,168(sp)
 40212d4:	d8003115 	stw	zero,196(sp)
 40212d8:	04c01604 	movi	r19,88
 40212dc:	05800244 	movi	r22,9
 40212e0:	9021883a 	mov	r16,r18
 40212e4:	4039883a 	mov	fp,r8
 40212e8:	ad400044 	addi	r21,r21,1
 40212ec:	88bff804 	addi	r2,r17,-32
 40212f0:	98833236 	bltu	r19,r2,4021fbc <___vfprintf_internal_r+0xe5c>
 40212f4:	100490ba 	slli	r2,r2,2
 40212f8:	00c100b4 	movhi	r3,1026
 40212fc:	18c4c304 	addi	r3,r3,4876
 4021300:	10c5883a 	add	r2,r2,r3
 4021304:	10800017 	ldw	r2,0(r2)
 4021308:	1000683a 	jmp	r2
 402130c:	04021eb4 	movhi	r16,2170
 4021310:	04021fbc 	xorhi	r16,zero,2174
 4021314:	04021fbc 	xorhi	r16,zero,2174
 4021318:	04021ed4 	movui	r16,2171
 402131c:	04021fbc 	xorhi	r16,zero,2174
 4021320:	04021fbc 	xorhi	r16,zero,2174
 4021324:	04021fbc 	xorhi	r16,zero,2174
 4021328:	04021fbc 	xorhi	r16,zero,2174
 402132c:	04021fbc 	xorhi	r16,zero,2174
 4021330:	04021fbc 	xorhi	r16,zero,2174
 4021334:	040215bc 	xorhi	r16,zero,2134
 4021338:	04021dc4 	movi	r16,2167
 402133c:	04021fbc 	xorhi	r16,zero,2174
 4021340:	04021480 	call	402148 <__alt_mem_sdram+0x402148>
 4021344:	040215e0 	cmpeqi	r16,zero,2135
 4021348:	04021fbc 	xorhi	r16,zero,2174
 402134c:	04021630 	cmpltui	r16,zero,2136
 4021350:	0402163c 	xorhi	r16,zero,2136
 4021354:	0402163c 	xorhi	r16,zero,2136
 4021358:	0402163c 	xorhi	r16,zero,2136
 402135c:	0402163c 	xorhi	r16,zero,2136
 4021360:	0402163c 	xorhi	r16,zero,2136
 4021364:	0402163c 	xorhi	r16,zero,2136
 4021368:	0402163c 	xorhi	r16,zero,2136
 402136c:	0402163c 	xorhi	r16,zero,2136
 4021370:	0402163c 	xorhi	r16,zero,2136
 4021374:	04021fbc 	xorhi	r16,zero,2174
 4021378:	04021fbc 	xorhi	r16,zero,2174
 402137c:	04021fbc 	xorhi	r16,zero,2174
 4021380:	04021fbc 	xorhi	r16,zero,2174
 4021384:	04021fbc 	xorhi	r16,zero,2174
 4021388:	04021fbc 	xorhi	r16,zero,2174
 402138c:	04021fbc 	xorhi	r16,zero,2174
 4021390:	04021fbc 	xorhi	r16,zero,2174
 4021394:	04021fbc 	xorhi	r16,zero,2174
 4021398:	04021fbc 	xorhi	r16,zero,2174
 402139c:	04021678 	rdprs	r16,zero,2137
 40213a0:	04021740 	call	402174 <__alt_mem_sdram+0x402174>
 40213a4:	04021fbc 	xorhi	r16,zero,2174
 40213a8:	04021740 	call	402174 <__alt_mem_sdram+0x402174>
 40213ac:	04021fbc 	xorhi	r16,zero,2174
 40213b0:	04021fbc 	xorhi	r16,zero,2174
 40213b4:	04021fbc 	xorhi	r16,zero,2174
 40213b8:	04021fbc 	xorhi	r16,zero,2174
 40213bc:	040217ec 	andhi	r16,zero,2143
 40213c0:	04021fbc 	xorhi	r16,zero,2174
 40213c4:	04021fbc 	xorhi	r16,zero,2174
 40213c8:	040217f8 	rdprs	r16,zero,2143
 40213cc:	04021fbc 	xorhi	r16,zero,2174
 40213d0:	04021fbc 	xorhi	r16,zero,2174
 40213d4:	04021fbc 	xorhi	r16,zero,2174
 40213d8:	04021fbc 	xorhi	r16,zero,2174
 40213dc:	04021fbc 	xorhi	r16,zero,2174
 40213e0:	04021c7c 	xorhi	r16,zero,2161
 40213e4:	04021fbc 	xorhi	r16,zero,2174
 40213e8:	04021fbc 	xorhi	r16,zero,2174
 40213ec:	04021ce8 	cmpgeui	r16,zero,2163
 40213f0:	04021fbc 	xorhi	r16,zero,2174
 40213f4:	04021fbc 	xorhi	r16,zero,2174
 40213f8:	04021fbc 	xorhi	r16,zero,2174
 40213fc:	04021fbc 	xorhi	r16,zero,2174
 4021400:	04021fbc 	xorhi	r16,zero,2174
 4021404:	04021fbc 	xorhi	r16,zero,2174
 4021408:	04021fbc 	xorhi	r16,zero,2174
 402140c:	04021fbc 	xorhi	r16,zero,2174
 4021410:	04021fbc 	xorhi	r16,zero,2174
 4021414:	04021fbc 	xorhi	r16,zero,2174
 4021418:	04021f60 	cmpeqi	r16,zero,2173
 402141c:	04021ee0 	cmpeqi	r16,zero,2171
 4021420:	04021740 	call	402174 <__alt_mem_sdram+0x402174>
 4021424:	04021740 	call	402174 <__alt_mem_sdram+0x402174>
 4021428:	04021740 	call	402174 <__alt_mem_sdram+0x402174>
 402142c:	04021f00 	call	4021f0 <__alt_mem_sdram+0x4021f0>
 4021430:	04021ee0 	cmpeqi	r16,zero,2171
 4021434:	04021fbc 	xorhi	r16,zero,2174
 4021438:	04021fbc 	xorhi	r16,zero,2174
 402143c:	04021f0c 	andi	r16,zero,2172
 4021440:	04021fbc 	xorhi	r16,zero,2174
 4021444:	04021f20 	cmpeqi	r16,zero,2172
 4021448:	04021da4 	muli	r16,zero,2166
 402144c:	0402148c 	andi	r16,zero,2130
 4021450:	04021ddc 	xori	r16,zero,2167
 4021454:	04021fbc 	xorhi	r16,zero,2174
 4021458:	04021de8 	cmpgeui	r16,zero,2167
 402145c:	04021fbc 	xorhi	r16,zero,2174
 4021460:	04021e4c 	andi	r16,zero,2169
 4021464:	04021fbc 	xorhi	r16,zero,2174
 4021468:	04021fbc 	xorhi	r16,zero,2174
 402146c:	04021e6c 	andhi	r16,zero,2169
 4021470:	d8c03117 	ldw	r3,196(sp)
 4021474:	d8802e15 	stw	r2,184(sp)
 4021478:	00c7c83a 	sub	r3,zero,r3
 402147c:	d8c03115 	stw	r3,196(sp)
 4021480:	84000114 	ori	r16,r16,4
 4021484:	ac400007 	ldb	r17,0(r21)
 4021488:	003f9706 	br	40212e8 <_gp+0xfffe6b84>
 402148c:	00800c04 	movi	r2,48
 4021490:	d8802705 	stb	r2,156(sp)
 4021494:	00801e04 	movi	r2,120
 4021498:	d8802745 	stb	r2,157(sp)
 402149c:	d9002a17 	ldw	r4,168(sp)
 40214a0:	d8802e17 	ldw	r2,184(sp)
 40214a4:	d8002785 	stb	zero,158(sp)
 40214a8:	e011883a 	mov	r8,fp
 40214ac:	10c00104 	addi	r3,r2,4
 40214b0:	14c00017 	ldw	r19,0(r2)
 40214b4:	002d883a 	mov	r22,zero
 40214b8:	80800094 	ori	r2,r16,2
 40214bc:	2002ca16 	blt	r4,zero,4021fe8 <___vfprintf_internal_r+0xe88>
 40214c0:	00bfdfc4 	movi	r2,-129
 40214c4:	80a4703a 	and	r18,r16,r2
 40214c8:	d8c02e15 	stw	r3,184(sp)
 40214cc:	94800094 	ori	r18,r18,2
 40214d0:	9802b41e 	bne	r19,zero,4021fa4 <___vfprintf_internal_r+0xe44>
 40214d4:	014100f4 	movhi	r5,1027
 40214d8:	29427a04 	addi	r5,r5,2536
 40214dc:	d9403915 	stw	r5,228(sp)
 40214e0:	04401e04 	movi	r17,120
 40214e4:	d8802a17 	ldw	r2,168(sp)
 40214e8:	0039883a 	mov	fp,zero
 40214ec:	1001fa26 	beq	r2,zero,4021cd8 <___vfprintf_internal_r+0xb78>
 40214f0:	0027883a 	mov	r19,zero
 40214f4:	002d883a 	mov	r22,zero
 40214f8:	00021906 	br	4021d60 <___vfprintf_internal_r+0xc00>
 40214fc:	d9002d17 	ldw	r4,180(sp)
 4021500:	b80b883a 	mov	r5,r23
 4021504:	40235140 	call	4023514 <__swsetup_r>
 4021508:	1005dc1e 	bne	r2,zero,4022c7c <___vfprintf_internal_r+0x1b1c>
 402150c:	b880030b 	ldhu	r2,12(r23)
 4021510:	00c00284 	movi	r3,10
 4021514:	1080068c 	andi	r2,r2,26
 4021518:	10ff3a1e 	bne	r2,r3,4021204 <_gp+0xfffe6aa0>
 402151c:	b880038f 	ldh	r2,14(r23)
 4021520:	103f3816 	blt	r2,zero,4021204 <_gp+0xfffe6aa0>
 4021524:	d9c02e17 	ldw	r7,184(sp)
 4021528:	d9002d17 	ldw	r4,180(sp)
 402152c:	a80d883a 	mov	r6,r21
 4021530:	b80b883a 	mov	r5,r23
 4021534:	40234580 	call	4023458 <__sbprintf>
 4021538:	00001106 	br	4021580 <___vfprintf_internal_r+0x420>
 402153c:	d9002d17 	ldw	r4,180(sp)
 4021540:	d9801e04 	addi	r6,sp,120
 4021544:	b80b883a 	mov	r5,r23
 4021548:	40289600 	call	4028960 <__sprint_r>
 402154c:	1000081e 	bne	r2,zero,4021570 <___vfprintf_internal_r+0x410>
 4021550:	da000404 	addi	r8,sp,16
 4021554:	003f5106 	br	402129c <_gp+0xfffe6b38>
 4021558:	d8802017 	ldw	r2,128(sp)
 402155c:	10000426 	beq	r2,zero,4021570 <___vfprintf_internal_r+0x410>
 4021560:	d9002d17 	ldw	r4,180(sp)
 4021564:	d9801e04 	addi	r6,sp,120
 4021568:	b80b883a 	mov	r5,r23
 402156c:	40289600 	call	4028960 <__sprint_r>
 4021570:	b880030b 	ldhu	r2,12(r23)
 4021574:	1080100c 	andi	r2,r2,64
 4021578:	1005c01e 	bne	r2,zero,4022c7c <___vfprintf_internal_r+0x1b1c>
 402157c:	d8802f17 	ldw	r2,188(sp)
 4021580:	dfc04717 	ldw	ra,284(sp)
 4021584:	df004617 	ldw	fp,280(sp)
 4021588:	ddc04517 	ldw	r23,276(sp)
 402158c:	dd804417 	ldw	r22,272(sp)
 4021590:	dd404317 	ldw	r21,268(sp)
 4021594:	dd004217 	ldw	r20,264(sp)
 4021598:	dcc04117 	ldw	r19,260(sp)
 402159c:	dc804017 	ldw	r18,256(sp)
 40215a0:	dc403f17 	ldw	r17,252(sp)
 40215a4:	dc003e17 	ldw	r16,248(sp)
 40215a8:	dec04804 	addi	sp,sp,288
 40215ac:	f800283a 	ret
 40215b0:	d9002d17 	ldw	r4,180(sp)
 40215b4:	40255200 	call	4025520 <__sinit>
 40215b8:	003f0206 	br	40211c4 <_gp+0xfffe6a60>
 40215bc:	d9002e17 	ldw	r4,184(sp)
 40215c0:	d9402e17 	ldw	r5,184(sp)
 40215c4:	21000017 	ldw	r4,0(r4)
 40215c8:	28800104 	addi	r2,r5,4
 40215cc:	d9003115 	stw	r4,196(sp)
 40215d0:	203fa716 	blt	r4,zero,4021470 <_gp+0xfffe6d0c>
 40215d4:	d8802e15 	stw	r2,184(sp)
 40215d8:	ac400007 	ldb	r17,0(r21)
 40215dc:	003f4206 	br	40212e8 <_gp+0xfffe6b84>
 40215e0:	ac400007 	ldb	r17,0(r21)
 40215e4:	01000a84 	movi	r4,42
 40215e8:	a8c00044 	addi	r3,r21,1
 40215ec:	89075826 	beq	r17,r4,4023350 <___vfprintf_internal_r+0x21f0>
 40215f0:	8cbff404 	addi	r18,r17,-48
 40215f4:	b486ae36 	bltu	r22,r18,40230b0 <___vfprintf_internal_r+0x1f50>
 40215f8:	0009883a 	mov	r4,zero
 40215fc:	1823883a 	mov	r17,r3
 4021600:	01400284 	movi	r5,10
 4021604:	4020d7c0 	call	4020d7c <__mulsi3>
 4021608:	88c00007 	ldb	r3,0(r17)
 402160c:	1489883a 	add	r4,r2,r18
 4021610:	8d400044 	addi	r21,r17,1
 4021614:	1cbff404 	addi	r18,r3,-48
 4021618:	a823883a 	mov	r17,r21
 402161c:	b4bff82e 	bgeu	r22,r18,4021600 <_gp+0xfffe6e9c>
 4021620:	1823883a 	mov	r17,r3
 4021624:	2005f616 	blt	r4,zero,4022e00 <___vfprintf_internal_r+0x1ca0>
 4021628:	d9002a15 	stw	r4,168(sp)
 402162c:	003f2f06 	br	40212ec <_gp+0xfffe6b88>
 4021630:	84002014 	ori	r16,r16,128
 4021634:	ac400007 	ldb	r17,0(r21)
 4021638:	003f2b06 	br	40212e8 <_gp+0xfffe6b84>
 402163c:	8cbff404 	addi	r18,r17,-48
 4021640:	d8003115 	stw	zero,196(sp)
 4021644:	0009883a 	mov	r4,zero
 4021648:	a823883a 	mov	r17,r21
 402164c:	01400284 	movi	r5,10
 4021650:	4020d7c0 	call	4020d7c <__mulsi3>
 4021654:	88c00007 	ldb	r3,0(r17)
 4021658:	9089883a 	add	r4,r18,r2
 402165c:	ad400044 	addi	r21,r21,1
 4021660:	1cbff404 	addi	r18,r3,-48
 4021664:	a823883a 	mov	r17,r21
 4021668:	b4bff82e 	bgeu	r22,r18,402164c <_gp+0xfffe6ee8>
 402166c:	1823883a 	mov	r17,r3
 4021670:	d9003115 	stw	r4,196(sp)
 4021674:	003f1d06 	br	40212ec <_gp+0xfffe6b88>
 4021678:	8025883a 	mov	r18,r16
 402167c:	dc002903 	ldbu	r16,164(sp)
 4021680:	e011883a 	mov	r8,fp
 4021684:	84003fcc 	andi	r16,r16,255
 4021688:	8007531e 	bne	r16,zero,40233d8 <___vfprintf_internal_r+0x2278>
 402168c:	94800414 	ori	r18,r18,16
 4021690:	9080080c 	andi	r2,r18,32
 4021694:	1003a326 	beq	r2,zero,4022524 <___vfprintf_internal_r+0x13c4>
 4021698:	d9002e17 	ldw	r4,184(sp)
 402169c:	20800117 	ldw	r2,4(r4)
 40216a0:	24c00017 	ldw	r19,0(r4)
 40216a4:	21000204 	addi	r4,r4,8
 40216a8:	d9002e15 	stw	r4,184(sp)
 40216ac:	102d883a 	mov	r22,r2
 40216b0:	10047316 	blt	r2,zero,4022880 <___vfprintf_internal_r+0x1720>
 40216b4:	d9002a17 	ldw	r4,168(sp)
 40216b8:	df002783 	ldbu	fp,158(sp)
 40216bc:	2003e416 	blt	r4,zero,4022650 <___vfprintf_internal_r+0x14f0>
 40216c0:	00ffdfc4 	movi	r3,-129
 40216c4:	9d84b03a 	or	r2,r19,r22
 40216c8:	90e4703a 	and	r18,r18,r3
 40216cc:	10018026 	beq	r2,zero,4021cd0 <___vfprintf_internal_r+0xb70>
 40216d0:	b003ab26 	beq	r22,zero,4022580 <___vfprintf_internal_r+0x1420>
 40216d4:	dc402915 	stw	r17,164(sp)
 40216d8:	dc001e04 	addi	r16,sp,120
 40216dc:	b023883a 	mov	r17,r22
 40216e0:	402d883a 	mov	r22,r8
 40216e4:	9809883a 	mov	r4,r19
 40216e8:	880b883a 	mov	r5,r17
 40216ec:	01800284 	movi	r6,10
 40216f0:	000f883a 	mov	r7,zero
 40216f4:	402afb00 	call	402afb0 <__umoddi3>
 40216f8:	10800c04 	addi	r2,r2,48
 40216fc:	843fffc4 	addi	r16,r16,-1
 4021700:	9809883a 	mov	r4,r19
 4021704:	880b883a 	mov	r5,r17
 4021708:	80800005 	stb	r2,0(r16)
 402170c:	01800284 	movi	r6,10
 4021710:	000f883a 	mov	r7,zero
 4021714:	402a9b40 	call	402a9b4 <__udivdi3>
 4021718:	1027883a 	mov	r19,r2
 402171c:	10c4b03a 	or	r2,r2,r3
 4021720:	1823883a 	mov	r17,r3
 4021724:	103fef1e 	bne	r2,zero,40216e4 <_gp+0xfffe6f80>
 4021728:	d8c02817 	ldw	r3,160(sp)
 402172c:	dc402917 	ldw	r17,164(sp)
 4021730:	b011883a 	mov	r8,r22
 4021734:	1c07c83a 	sub	r3,r3,r16
 4021738:	d8c02b15 	stw	r3,172(sp)
 402173c:	00005f06 	br	40218bc <___vfprintf_internal_r+0x75c>
 4021740:	8025883a 	mov	r18,r16
 4021744:	dc002903 	ldbu	r16,164(sp)
 4021748:	e011883a 	mov	r8,fp
 402174c:	84003fcc 	andi	r16,r16,255
 4021750:	80071e1e 	bne	r16,zero,40233cc <___vfprintf_internal_r+0x226c>
 4021754:	9080020c 	andi	r2,r18,8
 4021758:	1004af26 	beq	r2,zero,4022a18 <___vfprintf_internal_r+0x18b8>
 402175c:	d9002e17 	ldw	r4,184(sp)
 4021760:	d9402e17 	ldw	r5,184(sp)
 4021764:	d8802e17 	ldw	r2,184(sp)
 4021768:	21000017 	ldw	r4,0(r4)
 402176c:	29400117 	ldw	r5,4(r5)
 4021770:	10800204 	addi	r2,r2,8
 4021774:	d9003615 	stw	r4,216(sp)
 4021778:	d9403815 	stw	r5,224(sp)
 402177c:	d8802e15 	stw	r2,184(sp)
 4021780:	d9003617 	ldw	r4,216(sp)
 4021784:	d9403817 	ldw	r5,224(sp)
 4021788:	da003d15 	stw	r8,244(sp)
 402178c:	04000044 	movi	r16,1
 4021790:	40285840 	call	4028584 <__fpclassifyd>
 4021794:	da003d17 	ldw	r8,244(sp)
 4021798:	1404441e 	bne	r2,r16,40228ac <___vfprintf_internal_r+0x174c>
 402179c:	d9003617 	ldw	r4,216(sp)
 40217a0:	d9403817 	ldw	r5,224(sp)
 40217a4:	000d883a 	mov	r6,zero
 40217a8:	000f883a 	mov	r7,zero
 40217ac:	402c9540 	call	402c954 <__ledf2>
 40217b0:	da003d17 	ldw	r8,244(sp)
 40217b4:	1005e316 	blt	r2,zero,4022f44 <___vfprintf_internal_r+0x1de4>
 40217b8:	df002783 	ldbu	fp,158(sp)
 40217bc:	008011c4 	movi	r2,71
 40217c0:	1445580e 	bge	r2,r17,4022d24 <___vfprintf_internal_r+0x1bc4>
 40217c4:	040100f4 	movhi	r16,1027
 40217c8:	84027204 	addi	r16,r16,2504
 40217cc:	00c000c4 	movi	r3,3
 40217d0:	00bfdfc4 	movi	r2,-129
 40217d4:	d8c02915 	stw	r3,164(sp)
 40217d8:	90a4703a 	and	r18,r18,r2
 40217dc:	d8c02b15 	stw	r3,172(sp)
 40217e0:	d8002a15 	stw	zero,168(sp)
 40217e4:	d8003215 	stw	zero,200(sp)
 40217e8:	00003a06 	br	40218d4 <___vfprintf_internal_r+0x774>
 40217ec:	84000214 	ori	r16,r16,8
 40217f0:	ac400007 	ldb	r17,0(r21)
 40217f4:	003ebc06 	br	40212e8 <_gp+0xfffe6b84>
 40217f8:	8025883a 	mov	r18,r16
 40217fc:	dc002903 	ldbu	r16,164(sp)
 4021800:	e011883a 	mov	r8,fp
 4021804:	84003fcc 	andi	r16,r16,255
 4021808:	8007001e 	bne	r16,zero,402340c <___vfprintf_internal_r+0x22ac>
 402180c:	94800414 	ori	r18,r18,16
 4021810:	9080080c 	andi	r2,r18,32
 4021814:	1002fa26 	beq	r2,zero,4022400 <___vfprintf_internal_r+0x12a0>
 4021818:	d9002e17 	ldw	r4,184(sp)
 402181c:	d9402a17 	ldw	r5,168(sp)
 4021820:	d8002785 	stb	zero,158(sp)
 4021824:	20800204 	addi	r2,r4,8
 4021828:	24c00017 	ldw	r19,0(r4)
 402182c:	25800117 	ldw	r22,4(r4)
 4021830:	2804b116 	blt	r5,zero,4022af8 <___vfprintf_internal_r+0x1998>
 4021834:	013fdfc4 	movi	r4,-129
 4021838:	9d86b03a 	or	r3,r19,r22
 402183c:	d8802e15 	stw	r2,184(sp)
 4021840:	9124703a 	and	r18,r18,r4
 4021844:	1802fb1e 	bne	r3,zero,4022434 <___vfprintf_internal_r+0x12d4>
 4021848:	d8c02a17 	ldw	r3,168(sp)
 402184c:	0039883a 	mov	fp,zero
 4021850:	1805e526 	beq	r3,zero,4022fe8 <___vfprintf_internal_r+0x1e88>
 4021854:	0027883a 	mov	r19,zero
 4021858:	002d883a 	mov	r22,zero
 402185c:	dc001e04 	addi	r16,sp,120
 4021860:	9806d0fa 	srli	r3,r19,3
 4021864:	b008977a 	slli	r4,r22,29
 4021868:	b02cd0fa 	srli	r22,r22,3
 402186c:	9cc001cc 	andi	r19,r19,7
 4021870:	98800c04 	addi	r2,r19,48
 4021874:	843fffc4 	addi	r16,r16,-1
 4021878:	20e6b03a 	or	r19,r4,r3
 402187c:	80800005 	stb	r2,0(r16)
 4021880:	9d86b03a 	or	r3,r19,r22
 4021884:	183ff61e 	bne	r3,zero,4021860 <_gp+0xfffe70fc>
 4021888:	90c0004c 	andi	r3,r18,1
 402188c:	18014126 	beq	r3,zero,4021d94 <___vfprintf_internal_r+0xc34>
 4021890:	10803fcc 	andi	r2,r2,255
 4021894:	1080201c 	xori	r2,r2,128
 4021898:	10bfe004 	addi	r2,r2,-128
 402189c:	00c00c04 	movi	r3,48
 40218a0:	10c13c26 	beq	r2,r3,4021d94 <___vfprintf_internal_r+0xc34>
 40218a4:	80ffffc5 	stb	r3,-1(r16)
 40218a8:	d8c02817 	ldw	r3,160(sp)
 40218ac:	80bfffc4 	addi	r2,r16,-1
 40218b0:	1021883a 	mov	r16,r2
 40218b4:	1887c83a 	sub	r3,r3,r2
 40218b8:	d8c02b15 	stw	r3,172(sp)
 40218bc:	d8802b17 	ldw	r2,172(sp)
 40218c0:	d9002a17 	ldw	r4,168(sp)
 40218c4:	1100010e 	bge	r2,r4,40218cc <___vfprintf_internal_r+0x76c>
 40218c8:	2005883a 	mov	r2,r4
 40218cc:	d8802915 	stw	r2,164(sp)
 40218d0:	d8003215 	stw	zero,200(sp)
 40218d4:	e7003fcc 	andi	fp,fp,255
 40218d8:	e700201c 	xori	fp,fp,128
 40218dc:	e73fe004 	addi	fp,fp,-128
 40218e0:	e0000326 	beq	fp,zero,40218f0 <___vfprintf_internal_r+0x790>
 40218e4:	d8c02917 	ldw	r3,164(sp)
 40218e8:	18c00044 	addi	r3,r3,1
 40218ec:	d8c02915 	stw	r3,164(sp)
 40218f0:	90c0008c 	andi	r3,r18,2
 40218f4:	d8c02c15 	stw	r3,176(sp)
 40218f8:	18000326 	beq	r3,zero,4021908 <___vfprintf_internal_r+0x7a8>
 40218fc:	d8c02917 	ldw	r3,164(sp)
 4021900:	18c00084 	addi	r3,r3,2
 4021904:	d8c02915 	stw	r3,164(sp)
 4021908:	90c0210c 	andi	r3,r18,132
 402190c:	d8c03015 	stw	r3,192(sp)
 4021910:	1801c51e 	bne	r3,zero,4022028 <___vfprintf_internal_r+0xec8>
 4021914:	d9003117 	ldw	r4,196(sp)
 4021918:	d8c02917 	ldw	r3,164(sp)
 402191c:	20e7c83a 	sub	r19,r4,r3
 4021920:	04c1c10e 	bge	zero,r19,4022028 <___vfprintf_internal_r+0xec8>
 4021924:	02400404 	movi	r9,16
 4021928:	d8c02017 	ldw	r3,128(sp)
 402192c:	d8801f17 	ldw	r2,124(sp)
 4021930:	4cc52f0e 	bge	r9,r19,4022df0 <___vfprintf_internal_r+0x1c90>
 4021934:	014100f4 	movhi	r5,1027
 4021938:	29428584 	addi	r5,r5,2582
 402193c:	dc403b15 	stw	r17,236(sp)
 4021940:	d9403515 	stw	r5,212(sp)
 4021944:	9823883a 	mov	r17,r19
 4021948:	482d883a 	mov	r22,r9
 402194c:	9027883a 	mov	r19,r18
 4021950:	070001c4 	movi	fp,7
 4021954:	8025883a 	mov	r18,r16
 4021958:	dc002d17 	ldw	r16,180(sp)
 402195c:	00000306 	br	402196c <___vfprintf_internal_r+0x80c>
 4021960:	8c7ffc04 	addi	r17,r17,-16
 4021964:	42000204 	addi	r8,r8,8
 4021968:	b440130e 	bge	r22,r17,40219b8 <___vfprintf_internal_r+0x858>
 402196c:	010100f4 	movhi	r4,1027
 4021970:	18c00404 	addi	r3,r3,16
 4021974:	10800044 	addi	r2,r2,1
 4021978:	21028584 	addi	r4,r4,2582
 402197c:	41000015 	stw	r4,0(r8)
 4021980:	45800115 	stw	r22,4(r8)
 4021984:	d8c02015 	stw	r3,128(sp)
 4021988:	d8801f15 	stw	r2,124(sp)
 402198c:	e0bff40e 	bge	fp,r2,4021960 <_gp+0xfffe71fc>
 4021990:	d9801e04 	addi	r6,sp,120
 4021994:	b80b883a 	mov	r5,r23
 4021998:	8009883a 	mov	r4,r16
 402199c:	40289600 	call	4028960 <__sprint_r>
 40219a0:	103ef31e 	bne	r2,zero,4021570 <_gp+0xfffe6e0c>
 40219a4:	8c7ffc04 	addi	r17,r17,-16
 40219a8:	d8c02017 	ldw	r3,128(sp)
 40219ac:	d8801f17 	ldw	r2,124(sp)
 40219b0:	da000404 	addi	r8,sp,16
 40219b4:	b47fed16 	blt	r22,r17,402196c <_gp+0xfffe7208>
 40219b8:	9021883a 	mov	r16,r18
 40219bc:	9825883a 	mov	r18,r19
 40219c0:	8827883a 	mov	r19,r17
 40219c4:	dc403b17 	ldw	r17,236(sp)
 40219c8:	d9403517 	ldw	r5,212(sp)
 40219cc:	98c7883a 	add	r3,r19,r3
 40219d0:	10800044 	addi	r2,r2,1
 40219d4:	41400015 	stw	r5,0(r8)
 40219d8:	44c00115 	stw	r19,4(r8)
 40219dc:	d8c02015 	stw	r3,128(sp)
 40219e0:	d8801f15 	stw	r2,124(sp)
 40219e4:	010001c4 	movi	r4,7
 40219e8:	2082c516 	blt	r4,r2,4022500 <___vfprintf_internal_r+0x13a0>
 40219ec:	df002787 	ldb	fp,158(sp)
 40219f0:	42000204 	addi	r8,r8,8
 40219f4:	e0000c26 	beq	fp,zero,4021a28 <___vfprintf_internal_r+0x8c8>
 40219f8:	d8801f17 	ldw	r2,124(sp)
 40219fc:	d9002784 	addi	r4,sp,158
 4021a00:	18c00044 	addi	r3,r3,1
 4021a04:	10800044 	addi	r2,r2,1
 4021a08:	41000015 	stw	r4,0(r8)
 4021a0c:	01000044 	movi	r4,1
 4021a10:	41000115 	stw	r4,4(r8)
 4021a14:	d8c02015 	stw	r3,128(sp)
 4021a18:	d8801f15 	stw	r2,124(sp)
 4021a1c:	010001c4 	movi	r4,7
 4021a20:	20825e16 	blt	r4,r2,402239c <___vfprintf_internal_r+0x123c>
 4021a24:	42000204 	addi	r8,r8,8
 4021a28:	d8802c17 	ldw	r2,176(sp)
 4021a2c:	10000c26 	beq	r2,zero,4021a60 <___vfprintf_internal_r+0x900>
 4021a30:	d8801f17 	ldw	r2,124(sp)
 4021a34:	d9002704 	addi	r4,sp,156
 4021a38:	18c00084 	addi	r3,r3,2
 4021a3c:	10800044 	addi	r2,r2,1
 4021a40:	41000015 	stw	r4,0(r8)
 4021a44:	01000084 	movi	r4,2
 4021a48:	41000115 	stw	r4,4(r8)
 4021a4c:	d8c02015 	stw	r3,128(sp)
 4021a50:	d8801f15 	stw	r2,124(sp)
 4021a54:	010001c4 	movi	r4,7
 4021a58:	20825816 	blt	r4,r2,40223bc <___vfprintf_internal_r+0x125c>
 4021a5c:	42000204 	addi	r8,r8,8
 4021a60:	d9003017 	ldw	r4,192(sp)
 4021a64:	00802004 	movi	r2,128
 4021a68:	2081bb26 	beq	r4,r2,4022158 <___vfprintf_internal_r+0xff8>
 4021a6c:	d9402a17 	ldw	r5,168(sp)
 4021a70:	d8802b17 	ldw	r2,172(sp)
 4021a74:	28adc83a 	sub	r22,r5,r2
 4021a78:	0580310e 	bge	zero,r22,4021b40 <___vfprintf_internal_r+0x9e0>
 4021a7c:	07000404 	movi	fp,16
 4021a80:	d8801f17 	ldw	r2,124(sp)
 4021a84:	e584360e 	bge	fp,r22,4022b60 <___vfprintf_internal_r+0x1a00>
 4021a88:	014100f4 	movhi	r5,1027
 4021a8c:	29428184 	addi	r5,r5,2566
 4021a90:	dc402a15 	stw	r17,168(sp)
 4021a94:	d9402c15 	stw	r5,176(sp)
 4021a98:	b023883a 	mov	r17,r22
 4021a9c:	04c001c4 	movi	r19,7
 4021aa0:	a82d883a 	mov	r22,r21
 4021aa4:	902b883a 	mov	r21,r18
 4021aa8:	8025883a 	mov	r18,r16
 4021aac:	dc002d17 	ldw	r16,180(sp)
 4021ab0:	00000306 	br	4021ac0 <___vfprintf_internal_r+0x960>
 4021ab4:	8c7ffc04 	addi	r17,r17,-16
 4021ab8:	42000204 	addi	r8,r8,8
 4021abc:	e440110e 	bge	fp,r17,4021b04 <___vfprintf_internal_r+0x9a4>
 4021ac0:	18c00404 	addi	r3,r3,16
 4021ac4:	10800044 	addi	r2,r2,1
 4021ac8:	45000015 	stw	r20,0(r8)
 4021acc:	47000115 	stw	fp,4(r8)
 4021ad0:	d8c02015 	stw	r3,128(sp)
 4021ad4:	d8801f15 	stw	r2,124(sp)
 4021ad8:	98bff60e 	bge	r19,r2,4021ab4 <_gp+0xfffe7350>
 4021adc:	d9801e04 	addi	r6,sp,120
 4021ae0:	b80b883a 	mov	r5,r23
 4021ae4:	8009883a 	mov	r4,r16
 4021ae8:	40289600 	call	4028960 <__sprint_r>
 4021aec:	103ea01e 	bne	r2,zero,4021570 <_gp+0xfffe6e0c>
 4021af0:	8c7ffc04 	addi	r17,r17,-16
 4021af4:	d8c02017 	ldw	r3,128(sp)
 4021af8:	d8801f17 	ldw	r2,124(sp)
 4021afc:	da000404 	addi	r8,sp,16
 4021b00:	e47fef16 	blt	fp,r17,4021ac0 <_gp+0xfffe735c>
 4021b04:	9021883a 	mov	r16,r18
 4021b08:	a825883a 	mov	r18,r21
 4021b0c:	b02b883a 	mov	r21,r22
 4021b10:	882d883a 	mov	r22,r17
 4021b14:	dc402a17 	ldw	r17,168(sp)
 4021b18:	d9002c17 	ldw	r4,176(sp)
 4021b1c:	1d87883a 	add	r3,r3,r22
 4021b20:	10800044 	addi	r2,r2,1
 4021b24:	41000015 	stw	r4,0(r8)
 4021b28:	45800115 	stw	r22,4(r8)
 4021b2c:	d8c02015 	stw	r3,128(sp)
 4021b30:	d8801f15 	stw	r2,124(sp)
 4021b34:	010001c4 	movi	r4,7
 4021b38:	20821016 	blt	r4,r2,402237c <___vfprintf_internal_r+0x121c>
 4021b3c:	42000204 	addi	r8,r8,8
 4021b40:	9080400c 	andi	r2,r18,256
 4021b44:	10013a1e 	bne	r2,zero,4022030 <___vfprintf_internal_r+0xed0>
 4021b48:	d9402b17 	ldw	r5,172(sp)
 4021b4c:	d8801f17 	ldw	r2,124(sp)
 4021b50:	44000015 	stw	r16,0(r8)
 4021b54:	1947883a 	add	r3,r3,r5
 4021b58:	10800044 	addi	r2,r2,1
 4021b5c:	41400115 	stw	r5,4(r8)
 4021b60:	d8c02015 	stw	r3,128(sp)
 4021b64:	d8801f15 	stw	r2,124(sp)
 4021b68:	010001c4 	movi	r4,7
 4021b6c:	2081f516 	blt	r4,r2,4022344 <___vfprintf_internal_r+0x11e4>
 4021b70:	42000204 	addi	r8,r8,8
 4021b74:	9480010c 	andi	r18,r18,4
 4021b78:	90003226 	beq	r18,zero,4021c44 <___vfprintf_internal_r+0xae4>
 4021b7c:	d9403117 	ldw	r5,196(sp)
 4021b80:	d8802917 	ldw	r2,164(sp)
 4021b84:	28a1c83a 	sub	r16,r5,r2
 4021b88:	04002e0e 	bge	zero,r16,4021c44 <___vfprintf_internal_r+0xae4>
 4021b8c:	04400404 	movi	r17,16
 4021b90:	d8801f17 	ldw	r2,124(sp)
 4021b94:	8c04c40e 	bge	r17,r16,4022ea8 <___vfprintf_internal_r+0x1d48>
 4021b98:	014100f4 	movhi	r5,1027
 4021b9c:	29428584 	addi	r5,r5,2582
 4021ba0:	d9403515 	stw	r5,212(sp)
 4021ba4:	048001c4 	movi	r18,7
 4021ba8:	dcc02d17 	ldw	r19,180(sp)
 4021bac:	00000306 	br	4021bbc <___vfprintf_internal_r+0xa5c>
 4021bb0:	843ffc04 	addi	r16,r16,-16
 4021bb4:	42000204 	addi	r8,r8,8
 4021bb8:	8c00130e 	bge	r17,r16,4021c08 <___vfprintf_internal_r+0xaa8>
 4021bbc:	010100f4 	movhi	r4,1027
 4021bc0:	18c00404 	addi	r3,r3,16
 4021bc4:	10800044 	addi	r2,r2,1
 4021bc8:	21028584 	addi	r4,r4,2582
 4021bcc:	41000015 	stw	r4,0(r8)
 4021bd0:	44400115 	stw	r17,4(r8)
 4021bd4:	d8c02015 	stw	r3,128(sp)
 4021bd8:	d8801f15 	stw	r2,124(sp)
 4021bdc:	90bff40e 	bge	r18,r2,4021bb0 <_gp+0xfffe744c>
 4021be0:	d9801e04 	addi	r6,sp,120
 4021be4:	b80b883a 	mov	r5,r23
 4021be8:	9809883a 	mov	r4,r19
 4021bec:	40289600 	call	4028960 <__sprint_r>
 4021bf0:	103e5f1e 	bne	r2,zero,4021570 <_gp+0xfffe6e0c>
 4021bf4:	843ffc04 	addi	r16,r16,-16
 4021bf8:	d8c02017 	ldw	r3,128(sp)
 4021bfc:	d8801f17 	ldw	r2,124(sp)
 4021c00:	da000404 	addi	r8,sp,16
 4021c04:	8c3fed16 	blt	r17,r16,4021bbc <_gp+0xfffe7458>
 4021c08:	d9403517 	ldw	r5,212(sp)
 4021c0c:	1c07883a 	add	r3,r3,r16
 4021c10:	10800044 	addi	r2,r2,1
 4021c14:	41400015 	stw	r5,0(r8)
 4021c18:	44000115 	stw	r16,4(r8)
 4021c1c:	d8c02015 	stw	r3,128(sp)
 4021c20:	d8801f15 	stw	r2,124(sp)
 4021c24:	010001c4 	movi	r4,7
 4021c28:	2080060e 	bge	r4,r2,4021c44 <___vfprintf_internal_r+0xae4>
 4021c2c:	d9002d17 	ldw	r4,180(sp)
 4021c30:	d9801e04 	addi	r6,sp,120
 4021c34:	b80b883a 	mov	r5,r23
 4021c38:	40289600 	call	4028960 <__sprint_r>
 4021c3c:	103e4c1e 	bne	r2,zero,4021570 <_gp+0xfffe6e0c>
 4021c40:	d8c02017 	ldw	r3,128(sp)
 4021c44:	d8803117 	ldw	r2,196(sp)
 4021c48:	d9002917 	ldw	r4,164(sp)
 4021c4c:	1100010e 	bge	r2,r4,4021c54 <___vfprintf_internal_r+0xaf4>
 4021c50:	2005883a 	mov	r2,r4
 4021c54:	d9402f17 	ldw	r5,188(sp)
 4021c58:	288b883a 	add	r5,r5,r2
 4021c5c:	d9402f15 	stw	r5,188(sp)
 4021c60:	1801c01e 	bne	r3,zero,4022364 <___vfprintf_internal_r+0x1204>
 4021c64:	a8800007 	ldb	r2,0(r21)
 4021c68:	d8001f15 	stw	zero,124(sp)
 4021c6c:	da000404 	addi	r8,sp,16
 4021c70:	103d751e 	bne	r2,zero,4021248 <_gp+0xfffe6ae4>
 4021c74:	a823883a 	mov	r17,r21
 4021c78:	003d8b06 	br	40212a8 <_gp+0xfffe6b44>
 4021c7c:	8025883a 	mov	r18,r16
 4021c80:	dc002903 	ldbu	r16,164(sp)
 4021c84:	e011883a 	mov	r8,fp
 4021c88:	84003fcc 	andi	r16,r16,255
 4021c8c:	8005e51e 	bne	r16,zero,4023424 <___vfprintf_internal_r+0x22c4>
 4021c90:	94800414 	ori	r18,r18,16
 4021c94:	9080080c 	andi	r2,r18,32
 4021c98:	10022b26 	beq	r2,zero,4022548 <___vfprintf_internal_r+0x13e8>
 4021c9c:	d9002e17 	ldw	r4,184(sp)
 4021ca0:	d9402a17 	ldw	r5,168(sp)
 4021ca4:	d8002785 	stb	zero,158(sp)
 4021ca8:	20c00204 	addi	r3,r4,8
 4021cac:	24c00017 	ldw	r19,0(r4)
 4021cb0:	25800117 	ldw	r22,4(r4)
 4021cb4:	28042e16 	blt	r5,zero,4022d70 <___vfprintf_internal_r+0x1c10>
 4021cb8:	013fdfc4 	movi	r4,-129
 4021cbc:	9d84b03a 	or	r2,r19,r22
 4021cc0:	d8c02e15 	stw	r3,184(sp)
 4021cc4:	9124703a 	and	r18,r18,r4
 4021cc8:	0039883a 	mov	fp,zero
 4021ccc:	103e801e 	bne	r2,zero,40216d0 <_gp+0xfffe6f6c>
 4021cd0:	d9002a17 	ldw	r4,168(sp)
 4021cd4:	2002e01e 	bne	r4,zero,4022858 <___vfprintf_internal_r+0x16f8>
 4021cd8:	d8002a15 	stw	zero,168(sp)
 4021cdc:	d8002b15 	stw	zero,172(sp)
 4021ce0:	dc001e04 	addi	r16,sp,120
 4021ce4:	003ef506 	br	40218bc <_gp+0xfffe7158>
 4021ce8:	8025883a 	mov	r18,r16
 4021cec:	dc002903 	ldbu	r16,164(sp)
 4021cf0:	e011883a 	mov	r8,fp
 4021cf4:	84003fcc 	andi	r16,r16,255
 4021cf8:	8005ba1e 	bne	r16,zero,40233e4 <___vfprintf_internal_r+0x2284>
 4021cfc:	010100f4 	movhi	r4,1027
 4021d00:	21027504 	addi	r4,r4,2516
 4021d04:	d9003915 	stw	r4,228(sp)
 4021d08:	9080080c 	andi	r2,r18,32
 4021d0c:	10006126 	beq	r2,zero,4021e94 <___vfprintf_internal_r+0xd34>
 4021d10:	d9402e17 	ldw	r5,184(sp)
 4021d14:	2cc00017 	ldw	r19,0(r5)
 4021d18:	2d800117 	ldw	r22,4(r5)
 4021d1c:	29400204 	addi	r5,r5,8
 4021d20:	d9402e15 	stw	r5,184(sp)
 4021d24:	9080004c 	andi	r2,r18,1
 4021d28:	1001ac26 	beq	r2,zero,40223dc <___vfprintf_internal_r+0x127c>
 4021d2c:	9d84b03a 	or	r2,r19,r22
 4021d30:	10038526 	beq	r2,zero,4022b48 <___vfprintf_internal_r+0x19e8>
 4021d34:	d8c02a17 	ldw	r3,168(sp)
 4021d38:	00800c04 	movi	r2,48
 4021d3c:	d8802705 	stb	r2,156(sp)
 4021d40:	dc402745 	stb	r17,157(sp)
 4021d44:	d8002785 	stb	zero,158(sp)
 4021d48:	90800094 	ori	r2,r18,2
 4021d4c:	18047916 	blt	r3,zero,4022f34 <___vfprintf_internal_r+0x1dd4>
 4021d50:	00bfdfc4 	movi	r2,-129
 4021d54:	90a4703a 	and	r18,r18,r2
 4021d58:	94800094 	ori	r18,r18,2
 4021d5c:	0039883a 	mov	fp,zero
 4021d60:	d9003917 	ldw	r4,228(sp)
 4021d64:	dc001e04 	addi	r16,sp,120
 4021d68:	988003cc 	andi	r2,r19,15
 4021d6c:	b006973a 	slli	r3,r22,28
 4021d70:	2085883a 	add	r2,r4,r2
 4021d74:	9826d13a 	srli	r19,r19,4
 4021d78:	10800003 	ldbu	r2,0(r2)
 4021d7c:	b02cd13a 	srli	r22,r22,4
 4021d80:	843fffc4 	addi	r16,r16,-1
 4021d84:	1ce6b03a 	or	r19,r3,r19
 4021d88:	80800005 	stb	r2,0(r16)
 4021d8c:	9d84b03a 	or	r2,r19,r22
 4021d90:	103ff51e 	bne	r2,zero,4021d68 <_gp+0xfffe7604>
 4021d94:	d8c02817 	ldw	r3,160(sp)
 4021d98:	1c07c83a 	sub	r3,r3,r16
 4021d9c:	d8c02b15 	stw	r3,172(sp)
 4021da0:	003ec606 	br	40218bc <_gp+0xfffe7158>
 4021da4:	8025883a 	mov	r18,r16
 4021da8:	dc002903 	ldbu	r16,164(sp)
 4021dac:	e011883a 	mov	r8,fp
 4021db0:	84003fcc 	andi	r16,r16,255
 4021db4:	803e9626 	beq	r16,zero,4021810 <_gp+0xfffe70ac>
 4021db8:	d8c02b03 	ldbu	r3,172(sp)
 4021dbc:	d8c02785 	stb	r3,158(sp)
 4021dc0:	003e9306 	br	4021810 <_gp+0xfffe70ac>
 4021dc4:	00c00044 	movi	r3,1
 4021dc8:	d8c02905 	stb	r3,164(sp)
 4021dcc:	00c00ac4 	movi	r3,43
 4021dd0:	d8c02b05 	stb	r3,172(sp)
 4021dd4:	ac400007 	ldb	r17,0(r21)
 4021dd8:	003d4306 	br	40212e8 <_gp+0xfffe6b84>
 4021ddc:	84000814 	ori	r16,r16,32
 4021de0:	ac400007 	ldb	r17,0(r21)
 4021de4:	003d4006 	br	40212e8 <_gp+0xfffe6b84>
 4021de8:	d8802e17 	ldw	r2,184(sp)
 4021dec:	8025883a 	mov	r18,r16
 4021df0:	d8002785 	stb	zero,158(sp)
 4021df4:	14000017 	ldw	r16,0(r2)
 4021df8:	e011883a 	mov	r8,fp
 4021dfc:	14c00104 	addi	r19,r2,4
 4021e00:	80042d26 	beq	r16,zero,4022eb8 <___vfprintf_internal_r+0x1d58>
 4021e04:	d8c02a17 	ldw	r3,168(sp)
 4021e08:	1803e416 	blt	r3,zero,4022d9c <___vfprintf_internal_r+0x1c3c>
 4021e0c:	180d883a 	mov	r6,r3
 4021e10:	000b883a 	mov	r5,zero
 4021e14:	8009883a 	mov	r4,r16
 4021e18:	df003d15 	stw	fp,244(sp)
 4021e1c:	4026a980 	call	4026a98 <memchr>
 4021e20:	da003d17 	ldw	r8,244(sp)
 4021e24:	10046826 	beq	r2,zero,4022fc8 <___vfprintf_internal_r+0x1e68>
 4021e28:	1405c83a 	sub	r2,r2,r16
 4021e2c:	d8802b15 	stw	r2,172(sp)
 4021e30:	1003e016 	blt	r2,zero,4022db4 <___vfprintf_internal_r+0x1c54>
 4021e34:	df002783 	ldbu	fp,158(sp)
 4021e38:	d8802915 	stw	r2,164(sp)
 4021e3c:	dcc02e15 	stw	r19,184(sp)
 4021e40:	d8002a15 	stw	zero,168(sp)
 4021e44:	d8003215 	stw	zero,200(sp)
 4021e48:	003ea206 	br	40218d4 <_gp+0xfffe7170>
 4021e4c:	8025883a 	mov	r18,r16
 4021e50:	dc002903 	ldbu	r16,164(sp)
 4021e54:	e011883a 	mov	r8,fp
 4021e58:	84003fcc 	andi	r16,r16,255
 4021e5c:	803f8d26 	beq	r16,zero,4021c94 <_gp+0xfffe7530>
 4021e60:	d8c02b03 	ldbu	r3,172(sp)
 4021e64:	d8c02785 	stb	r3,158(sp)
 4021e68:	003f8a06 	br	4021c94 <_gp+0xfffe7530>
 4021e6c:	8025883a 	mov	r18,r16
 4021e70:	dc002903 	ldbu	r16,164(sp)
 4021e74:	e011883a 	mov	r8,fp
 4021e78:	84003fcc 	andi	r16,r16,255
 4021e7c:	8005661e 	bne	r16,zero,4023418 <___vfprintf_internal_r+0x22b8>
 4021e80:	010100f4 	movhi	r4,1027
 4021e84:	21027a04 	addi	r4,r4,2536
 4021e88:	d9003915 	stw	r4,228(sp)
 4021e8c:	9080080c 	andi	r2,r18,32
 4021e90:	103f9f1e 	bne	r2,zero,4021d10 <_gp+0xfffe75ac>
 4021e94:	9080040c 	andi	r2,r18,16
 4021e98:	1002eb26 	beq	r2,zero,4022a48 <___vfprintf_internal_r+0x18e8>
 4021e9c:	d8802e17 	ldw	r2,184(sp)
 4021ea0:	002d883a 	mov	r22,zero
 4021ea4:	14c00017 	ldw	r19,0(r2)
 4021ea8:	10800104 	addi	r2,r2,4
 4021eac:	d8802e15 	stw	r2,184(sp)
 4021eb0:	003f9c06 	br	4021d24 <_gp+0xfffe75c0>
 4021eb4:	d8802b07 	ldb	r2,172(sp)
 4021eb8:	1002e11e 	bne	r2,zero,4022a40 <___vfprintf_internal_r+0x18e0>
 4021ebc:	00c00044 	movi	r3,1
 4021ec0:	d8c02905 	stb	r3,164(sp)
 4021ec4:	00c00804 	movi	r3,32
 4021ec8:	d8c02b05 	stb	r3,172(sp)
 4021ecc:	ac400007 	ldb	r17,0(r21)
 4021ed0:	003d0506 	br	40212e8 <_gp+0xfffe6b84>
 4021ed4:	84000054 	ori	r16,r16,1
 4021ed8:	ac400007 	ldb	r17,0(r21)
 4021edc:	003d0206 	br	40212e8 <_gp+0xfffe6b84>
 4021ee0:	8025883a 	mov	r18,r16
 4021ee4:	dc002903 	ldbu	r16,164(sp)
 4021ee8:	e011883a 	mov	r8,fp
 4021eec:	84003fcc 	andi	r16,r16,255
 4021ef0:	803de726 	beq	r16,zero,4021690 <_gp+0xfffe6f2c>
 4021ef4:	d8c02b03 	ldbu	r3,172(sp)
 4021ef8:	d8c02785 	stb	r3,158(sp)
 4021efc:	003de406 	br	4021690 <_gp+0xfffe6f2c>
 4021f00:	84001014 	ori	r16,r16,64
 4021f04:	ac400007 	ldb	r17,0(r21)
 4021f08:	003cf706 	br	40212e8 <_gp+0xfffe6b84>
 4021f0c:	ac400007 	ldb	r17,0(r21)
 4021f10:	00801b04 	movi	r2,108
 4021f14:	88838f26 	beq	r17,r2,4022d54 <___vfprintf_internal_r+0x1bf4>
 4021f18:	84000414 	ori	r16,r16,16
 4021f1c:	003cf206 	br	40212e8 <_gp+0xfffe6b84>
 4021f20:	8025883a 	mov	r18,r16
 4021f24:	dc002903 	ldbu	r16,164(sp)
 4021f28:	e011883a 	mov	r8,fp
 4021f2c:	84003fcc 	andi	r16,r16,255
 4021f30:	80053f1e 	bne	r16,zero,4023430 <___vfprintf_internal_r+0x22d0>
 4021f34:	9080080c 	andi	r2,r18,32
 4021f38:	1002d226 	beq	r2,zero,4022a84 <___vfprintf_internal_r+0x1924>
 4021f3c:	d9002e17 	ldw	r4,184(sp)
 4021f40:	d9402f17 	ldw	r5,188(sp)
 4021f44:	20800017 	ldw	r2,0(r4)
 4021f48:	2807d7fa 	srai	r3,r5,31
 4021f4c:	21000104 	addi	r4,r4,4
 4021f50:	d9002e15 	stw	r4,184(sp)
 4021f54:	11400015 	stw	r5,0(r2)
 4021f58:	10c00115 	stw	r3,4(r2)
 4021f5c:	003cb806 	br	4021240 <_gp+0xfffe6adc>
 4021f60:	d8c02e17 	ldw	r3,184(sp)
 4021f64:	d9002e17 	ldw	r4,184(sp)
 4021f68:	8025883a 	mov	r18,r16
 4021f6c:	18800017 	ldw	r2,0(r3)
 4021f70:	21000104 	addi	r4,r4,4
 4021f74:	00c00044 	movi	r3,1
 4021f78:	e011883a 	mov	r8,fp
 4021f7c:	d8c02915 	stw	r3,164(sp)
 4021f80:	d8002785 	stb	zero,158(sp)
 4021f84:	d8801405 	stb	r2,80(sp)
 4021f88:	d9002e15 	stw	r4,184(sp)
 4021f8c:	d8c02b15 	stw	r3,172(sp)
 4021f90:	d8002a15 	stw	zero,168(sp)
 4021f94:	d8003215 	stw	zero,200(sp)
 4021f98:	dc001404 	addi	r16,sp,80
 4021f9c:	0039883a 	mov	fp,zero
 4021fa0:	003e5306 	br	40218f0 <_gp+0xfffe718c>
 4021fa4:	010100f4 	movhi	r4,1027
 4021fa8:	21027a04 	addi	r4,r4,2536
 4021fac:	0039883a 	mov	fp,zero
 4021fb0:	d9003915 	stw	r4,228(sp)
 4021fb4:	04401e04 	movi	r17,120
 4021fb8:	003f6906 	br	4021d60 <_gp+0xfffe75fc>
 4021fbc:	8025883a 	mov	r18,r16
 4021fc0:	dc002903 	ldbu	r16,164(sp)
 4021fc4:	e011883a 	mov	r8,fp
 4021fc8:	84003fcc 	andi	r16,r16,255
 4021fcc:	8005081e 	bne	r16,zero,40233f0 <___vfprintf_internal_r+0x2290>
 4021fd0:	883d6126 	beq	r17,zero,4021558 <_gp+0xfffe6df4>
 4021fd4:	00c00044 	movi	r3,1
 4021fd8:	d8c02915 	stw	r3,164(sp)
 4021fdc:	dc401405 	stb	r17,80(sp)
 4021fe0:	d8002785 	stb	zero,158(sp)
 4021fe4:	003fe906 	br	4021f8c <_gp+0xfffe7828>
 4021fe8:	014100f4 	movhi	r5,1027
 4021fec:	29427a04 	addi	r5,r5,2536
 4021ff0:	d9403915 	stw	r5,228(sp)
 4021ff4:	d8c02e15 	stw	r3,184(sp)
 4021ff8:	1025883a 	mov	r18,r2
 4021ffc:	04401e04 	movi	r17,120
 4022000:	9d84b03a 	or	r2,r19,r22
 4022004:	1000fc1e 	bne	r2,zero,40223f8 <___vfprintf_internal_r+0x1298>
 4022008:	0039883a 	mov	fp,zero
 402200c:	00800084 	movi	r2,2
 4022010:	10803fcc 	andi	r2,r2,255
 4022014:	00c00044 	movi	r3,1
 4022018:	10c20f26 	beq	r2,r3,4022858 <___vfprintf_internal_r+0x16f8>
 402201c:	00c00084 	movi	r3,2
 4022020:	10fd3326 	beq	r2,r3,40214f0 <_gp+0xfffe6d8c>
 4022024:	003e0b06 	br	4021854 <_gp+0xfffe70f0>
 4022028:	d8c02017 	ldw	r3,128(sp)
 402202c:	003e7106 	br	40219f4 <_gp+0xfffe7290>
 4022030:	00801944 	movi	r2,101
 4022034:	14407e0e 	bge	r2,r17,4022230 <___vfprintf_internal_r+0x10d0>
 4022038:	d9003617 	ldw	r4,216(sp)
 402203c:	d9403817 	ldw	r5,224(sp)
 4022040:	000d883a 	mov	r6,zero
 4022044:	000f883a 	mov	r7,zero
 4022048:	d8c03c15 	stw	r3,240(sp)
 402204c:	da003d15 	stw	r8,244(sp)
 4022050:	402c7f00 	call	402c7f0 <__eqdf2>
 4022054:	d8c03c17 	ldw	r3,240(sp)
 4022058:	da003d17 	ldw	r8,244(sp)
 402205c:	1000f71e 	bne	r2,zero,402243c <___vfprintf_internal_r+0x12dc>
 4022060:	d8801f17 	ldw	r2,124(sp)
 4022064:	010100f4 	movhi	r4,1027
 4022068:	21028104 	addi	r4,r4,2564
 402206c:	18c00044 	addi	r3,r3,1
 4022070:	10800044 	addi	r2,r2,1
 4022074:	41000015 	stw	r4,0(r8)
 4022078:	01000044 	movi	r4,1
 402207c:	41000115 	stw	r4,4(r8)
 4022080:	d8c02015 	stw	r3,128(sp)
 4022084:	d8801f15 	stw	r2,124(sp)
 4022088:	010001c4 	movi	r4,7
 402208c:	2082b816 	blt	r4,r2,4022b70 <___vfprintf_internal_r+0x1a10>
 4022090:	42000204 	addi	r8,r8,8
 4022094:	d8802617 	ldw	r2,152(sp)
 4022098:	d9403317 	ldw	r5,204(sp)
 402209c:	11400216 	blt	r2,r5,40220a8 <___vfprintf_internal_r+0xf48>
 40220a0:	9080004c 	andi	r2,r18,1
 40220a4:	103eb326 	beq	r2,zero,4021b74 <_gp+0xfffe7410>
 40220a8:	d8803717 	ldw	r2,220(sp)
 40220ac:	d9003417 	ldw	r4,208(sp)
 40220b0:	d9403717 	ldw	r5,220(sp)
 40220b4:	1887883a 	add	r3,r3,r2
 40220b8:	d8801f17 	ldw	r2,124(sp)
 40220bc:	41000015 	stw	r4,0(r8)
 40220c0:	41400115 	stw	r5,4(r8)
 40220c4:	10800044 	addi	r2,r2,1
 40220c8:	d8c02015 	stw	r3,128(sp)
 40220cc:	d8801f15 	stw	r2,124(sp)
 40220d0:	010001c4 	movi	r4,7
 40220d4:	20832916 	blt	r4,r2,4022d7c <___vfprintf_internal_r+0x1c1c>
 40220d8:	42000204 	addi	r8,r8,8
 40220dc:	d8803317 	ldw	r2,204(sp)
 40220e0:	143fffc4 	addi	r16,r2,-1
 40220e4:	043ea30e 	bge	zero,r16,4021b74 <_gp+0xfffe7410>
 40220e8:	04400404 	movi	r17,16
 40220ec:	d8801f17 	ldw	r2,124(sp)
 40220f0:	8c00880e 	bge	r17,r16,4022314 <___vfprintf_internal_r+0x11b4>
 40220f4:	014100f4 	movhi	r5,1027
 40220f8:	29428184 	addi	r5,r5,2566
 40220fc:	d9402c15 	stw	r5,176(sp)
 4022100:	058001c4 	movi	r22,7
 4022104:	dcc02d17 	ldw	r19,180(sp)
 4022108:	00000306 	br	4022118 <___vfprintf_internal_r+0xfb8>
 402210c:	42000204 	addi	r8,r8,8
 4022110:	843ffc04 	addi	r16,r16,-16
 4022114:	8c00820e 	bge	r17,r16,4022320 <___vfprintf_internal_r+0x11c0>
 4022118:	18c00404 	addi	r3,r3,16
 402211c:	10800044 	addi	r2,r2,1
 4022120:	45000015 	stw	r20,0(r8)
 4022124:	44400115 	stw	r17,4(r8)
 4022128:	d8c02015 	stw	r3,128(sp)
 402212c:	d8801f15 	stw	r2,124(sp)
 4022130:	b0bff60e 	bge	r22,r2,402210c <_gp+0xfffe79a8>
 4022134:	d9801e04 	addi	r6,sp,120
 4022138:	b80b883a 	mov	r5,r23
 402213c:	9809883a 	mov	r4,r19
 4022140:	40289600 	call	4028960 <__sprint_r>
 4022144:	103d0a1e 	bne	r2,zero,4021570 <_gp+0xfffe6e0c>
 4022148:	d8c02017 	ldw	r3,128(sp)
 402214c:	d8801f17 	ldw	r2,124(sp)
 4022150:	da000404 	addi	r8,sp,16
 4022154:	003fee06 	br	4022110 <_gp+0xfffe79ac>
 4022158:	d9403117 	ldw	r5,196(sp)
 402215c:	d8802917 	ldw	r2,164(sp)
 4022160:	28adc83a 	sub	r22,r5,r2
 4022164:	05be410e 	bge	zero,r22,4021a6c <_gp+0xfffe7308>
 4022168:	07000404 	movi	fp,16
 402216c:	d8801f17 	ldw	r2,124(sp)
 4022170:	e5838f0e 	bge	fp,r22,4022fb0 <___vfprintf_internal_r+0x1e50>
 4022174:	014100f4 	movhi	r5,1027
 4022178:	29428184 	addi	r5,r5,2566
 402217c:	dc403015 	stw	r17,192(sp)
 4022180:	d9402c15 	stw	r5,176(sp)
 4022184:	b023883a 	mov	r17,r22
 4022188:	04c001c4 	movi	r19,7
 402218c:	a82d883a 	mov	r22,r21
 4022190:	902b883a 	mov	r21,r18
 4022194:	8025883a 	mov	r18,r16
 4022198:	dc002d17 	ldw	r16,180(sp)
 402219c:	00000306 	br	40221ac <___vfprintf_internal_r+0x104c>
 40221a0:	8c7ffc04 	addi	r17,r17,-16
 40221a4:	42000204 	addi	r8,r8,8
 40221a8:	e440110e 	bge	fp,r17,40221f0 <___vfprintf_internal_r+0x1090>
 40221ac:	18c00404 	addi	r3,r3,16
 40221b0:	10800044 	addi	r2,r2,1
 40221b4:	45000015 	stw	r20,0(r8)
 40221b8:	47000115 	stw	fp,4(r8)
 40221bc:	d8c02015 	stw	r3,128(sp)
 40221c0:	d8801f15 	stw	r2,124(sp)
 40221c4:	98bff60e 	bge	r19,r2,40221a0 <_gp+0xfffe7a3c>
 40221c8:	d9801e04 	addi	r6,sp,120
 40221cc:	b80b883a 	mov	r5,r23
 40221d0:	8009883a 	mov	r4,r16
 40221d4:	40289600 	call	4028960 <__sprint_r>
 40221d8:	103ce51e 	bne	r2,zero,4021570 <_gp+0xfffe6e0c>
 40221dc:	8c7ffc04 	addi	r17,r17,-16
 40221e0:	d8c02017 	ldw	r3,128(sp)
 40221e4:	d8801f17 	ldw	r2,124(sp)
 40221e8:	da000404 	addi	r8,sp,16
 40221ec:	e47fef16 	blt	fp,r17,40221ac <_gp+0xfffe7a48>
 40221f0:	9021883a 	mov	r16,r18
 40221f4:	a825883a 	mov	r18,r21
 40221f8:	b02b883a 	mov	r21,r22
 40221fc:	882d883a 	mov	r22,r17
 4022200:	dc403017 	ldw	r17,192(sp)
 4022204:	d9002c17 	ldw	r4,176(sp)
 4022208:	1d87883a 	add	r3,r3,r22
 402220c:	10800044 	addi	r2,r2,1
 4022210:	41000015 	stw	r4,0(r8)
 4022214:	45800115 	stw	r22,4(r8)
 4022218:	d8c02015 	stw	r3,128(sp)
 402221c:	d8801f15 	stw	r2,124(sp)
 4022220:	010001c4 	movi	r4,7
 4022224:	20818e16 	blt	r4,r2,4022860 <___vfprintf_internal_r+0x1700>
 4022228:	42000204 	addi	r8,r8,8
 402222c:	003e0f06 	br	4021a6c <_gp+0xfffe7308>
 4022230:	d9403317 	ldw	r5,204(sp)
 4022234:	00800044 	movi	r2,1
 4022238:	18c00044 	addi	r3,r3,1
 402223c:	1141530e 	bge	r2,r5,402278c <___vfprintf_internal_r+0x162c>
 4022240:	dc401f17 	ldw	r17,124(sp)
 4022244:	00800044 	movi	r2,1
 4022248:	40800115 	stw	r2,4(r8)
 402224c:	8c400044 	addi	r17,r17,1
 4022250:	44000015 	stw	r16,0(r8)
 4022254:	d8c02015 	stw	r3,128(sp)
 4022258:	dc401f15 	stw	r17,124(sp)
 402225c:	008001c4 	movi	r2,7
 4022260:	14416b16 	blt	r2,r17,4022810 <___vfprintf_internal_r+0x16b0>
 4022264:	42000204 	addi	r8,r8,8
 4022268:	d8803717 	ldw	r2,220(sp)
 402226c:	d9003417 	ldw	r4,208(sp)
 4022270:	8c400044 	addi	r17,r17,1
 4022274:	10c7883a 	add	r3,r2,r3
 4022278:	40800115 	stw	r2,4(r8)
 402227c:	41000015 	stw	r4,0(r8)
 4022280:	d8c02015 	stw	r3,128(sp)
 4022284:	dc401f15 	stw	r17,124(sp)
 4022288:	008001c4 	movi	r2,7
 402228c:	14416916 	blt	r2,r17,4022834 <___vfprintf_internal_r+0x16d4>
 4022290:	45800204 	addi	r22,r8,8
 4022294:	d9003617 	ldw	r4,216(sp)
 4022298:	d9403817 	ldw	r5,224(sp)
 402229c:	000d883a 	mov	r6,zero
 40222a0:	000f883a 	mov	r7,zero
 40222a4:	d8c03c15 	stw	r3,240(sp)
 40222a8:	402c7f00 	call	402c7f0 <__eqdf2>
 40222ac:	d8c03c17 	ldw	r3,240(sp)
 40222b0:	1000bc26 	beq	r2,zero,40225a4 <___vfprintf_internal_r+0x1444>
 40222b4:	d9403317 	ldw	r5,204(sp)
 40222b8:	84000044 	addi	r16,r16,1
 40222bc:	8c400044 	addi	r17,r17,1
 40222c0:	28bfffc4 	addi	r2,r5,-1
 40222c4:	1887883a 	add	r3,r3,r2
 40222c8:	b0800115 	stw	r2,4(r22)
 40222cc:	b4000015 	stw	r16,0(r22)
 40222d0:	d8c02015 	stw	r3,128(sp)
 40222d4:	dc401f15 	stw	r17,124(sp)
 40222d8:	008001c4 	movi	r2,7
 40222dc:	14414316 	blt	r2,r17,40227ec <___vfprintf_internal_r+0x168c>
 40222e0:	b5800204 	addi	r22,r22,8
 40222e4:	d9003a17 	ldw	r4,232(sp)
 40222e8:	df0022c4 	addi	fp,sp,139
 40222ec:	8c400044 	addi	r17,r17,1
 40222f0:	20c7883a 	add	r3,r4,r3
 40222f4:	b7000015 	stw	fp,0(r22)
 40222f8:	b1000115 	stw	r4,4(r22)
 40222fc:	d8c02015 	stw	r3,128(sp)
 4022300:	dc401f15 	stw	r17,124(sp)
 4022304:	008001c4 	movi	r2,7
 4022308:	14400e16 	blt	r2,r17,4022344 <___vfprintf_internal_r+0x11e4>
 402230c:	b2000204 	addi	r8,r22,8
 4022310:	003e1806 	br	4021b74 <_gp+0xfffe7410>
 4022314:	010100f4 	movhi	r4,1027
 4022318:	21028184 	addi	r4,r4,2566
 402231c:	d9002c15 	stw	r4,176(sp)
 4022320:	d9002c17 	ldw	r4,176(sp)
 4022324:	1c07883a 	add	r3,r3,r16
 4022328:	44000115 	stw	r16,4(r8)
 402232c:	41000015 	stw	r4,0(r8)
 4022330:	10800044 	addi	r2,r2,1
 4022334:	d8c02015 	stw	r3,128(sp)
 4022338:	d8801f15 	stw	r2,124(sp)
 402233c:	010001c4 	movi	r4,7
 4022340:	20be0b0e 	bge	r4,r2,4021b70 <_gp+0xfffe740c>
 4022344:	d9002d17 	ldw	r4,180(sp)
 4022348:	d9801e04 	addi	r6,sp,120
 402234c:	b80b883a 	mov	r5,r23
 4022350:	40289600 	call	4028960 <__sprint_r>
 4022354:	103c861e 	bne	r2,zero,4021570 <_gp+0xfffe6e0c>
 4022358:	d8c02017 	ldw	r3,128(sp)
 402235c:	da000404 	addi	r8,sp,16
 4022360:	003e0406 	br	4021b74 <_gp+0xfffe7410>
 4022364:	d9002d17 	ldw	r4,180(sp)
 4022368:	d9801e04 	addi	r6,sp,120
 402236c:	b80b883a 	mov	r5,r23
 4022370:	40289600 	call	4028960 <__sprint_r>
 4022374:	103e3b26 	beq	r2,zero,4021c64 <_gp+0xfffe7500>
 4022378:	003c7d06 	br	4021570 <_gp+0xfffe6e0c>
 402237c:	d9002d17 	ldw	r4,180(sp)
 4022380:	d9801e04 	addi	r6,sp,120
 4022384:	b80b883a 	mov	r5,r23
 4022388:	40289600 	call	4028960 <__sprint_r>
 402238c:	103c781e 	bne	r2,zero,4021570 <_gp+0xfffe6e0c>
 4022390:	d8c02017 	ldw	r3,128(sp)
 4022394:	da000404 	addi	r8,sp,16
 4022398:	003de906 	br	4021b40 <_gp+0xfffe73dc>
 402239c:	d9002d17 	ldw	r4,180(sp)
 40223a0:	d9801e04 	addi	r6,sp,120
 40223a4:	b80b883a 	mov	r5,r23
 40223a8:	40289600 	call	4028960 <__sprint_r>
 40223ac:	103c701e 	bne	r2,zero,4021570 <_gp+0xfffe6e0c>
 40223b0:	d8c02017 	ldw	r3,128(sp)
 40223b4:	da000404 	addi	r8,sp,16
 40223b8:	003d9b06 	br	4021a28 <_gp+0xfffe72c4>
 40223bc:	d9002d17 	ldw	r4,180(sp)
 40223c0:	d9801e04 	addi	r6,sp,120
 40223c4:	b80b883a 	mov	r5,r23
 40223c8:	40289600 	call	4028960 <__sprint_r>
 40223cc:	103c681e 	bne	r2,zero,4021570 <_gp+0xfffe6e0c>
 40223d0:	d8c02017 	ldw	r3,128(sp)
 40223d4:	da000404 	addi	r8,sp,16
 40223d8:	003da106 	br	4021a60 <_gp+0xfffe72fc>
 40223dc:	d9402a17 	ldw	r5,168(sp)
 40223e0:	d8002785 	stb	zero,158(sp)
 40223e4:	283f0616 	blt	r5,zero,4022000 <_gp+0xfffe789c>
 40223e8:	00ffdfc4 	movi	r3,-129
 40223ec:	9d84b03a 	or	r2,r19,r22
 40223f0:	90e4703a 	and	r18,r18,r3
 40223f4:	103c3b26 	beq	r2,zero,40214e4 <_gp+0xfffe6d80>
 40223f8:	0039883a 	mov	fp,zero
 40223fc:	003e5806 	br	4021d60 <_gp+0xfffe75fc>
 4022400:	9080040c 	andi	r2,r18,16
 4022404:	1001b326 	beq	r2,zero,4022ad4 <___vfprintf_internal_r+0x1974>
 4022408:	d8c02e17 	ldw	r3,184(sp)
 402240c:	d9002a17 	ldw	r4,168(sp)
 4022410:	d8002785 	stb	zero,158(sp)
 4022414:	18800104 	addi	r2,r3,4
 4022418:	1cc00017 	ldw	r19,0(r3)
 402241c:	002d883a 	mov	r22,zero
 4022420:	2001b516 	blt	r4,zero,4022af8 <___vfprintf_internal_r+0x1998>
 4022424:	00ffdfc4 	movi	r3,-129
 4022428:	d8802e15 	stw	r2,184(sp)
 402242c:	90e4703a 	and	r18,r18,r3
 4022430:	983d0526 	beq	r19,zero,4021848 <_gp+0xfffe70e4>
 4022434:	0039883a 	mov	fp,zero
 4022438:	003d0806 	br	402185c <_gp+0xfffe70f8>
 402243c:	dc402617 	ldw	r17,152(sp)
 4022440:	0441d30e 	bge	zero,r17,4022b90 <___vfprintf_internal_r+0x1a30>
 4022444:	dc403217 	ldw	r17,200(sp)
 4022448:	d8803317 	ldw	r2,204(sp)
 402244c:	1440010e 	bge	r2,r17,4022454 <___vfprintf_internal_r+0x12f4>
 4022450:	1023883a 	mov	r17,r2
 4022454:	04400a0e 	bge	zero,r17,4022480 <___vfprintf_internal_r+0x1320>
 4022458:	d8801f17 	ldw	r2,124(sp)
 402245c:	1c47883a 	add	r3,r3,r17
 4022460:	44000015 	stw	r16,0(r8)
 4022464:	10800044 	addi	r2,r2,1
 4022468:	44400115 	stw	r17,4(r8)
 402246c:	d8c02015 	stw	r3,128(sp)
 4022470:	d8801f15 	stw	r2,124(sp)
 4022474:	010001c4 	movi	r4,7
 4022478:	20826516 	blt	r4,r2,4022e10 <___vfprintf_internal_r+0x1cb0>
 402247c:	42000204 	addi	r8,r8,8
 4022480:	88026116 	blt	r17,zero,4022e08 <___vfprintf_internal_r+0x1ca8>
 4022484:	d9003217 	ldw	r4,200(sp)
 4022488:	2463c83a 	sub	r17,r4,r17
 402248c:	04407b0e 	bge	zero,r17,402267c <___vfprintf_internal_r+0x151c>
 4022490:	05800404 	movi	r22,16
 4022494:	d8801f17 	ldw	r2,124(sp)
 4022498:	b4419d0e 	bge	r22,r17,4022b10 <___vfprintf_internal_r+0x19b0>
 402249c:	010100f4 	movhi	r4,1027
 40224a0:	21028184 	addi	r4,r4,2566
 40224a4:	d9002c15 	stw	r4,176(sp)
 40224a8:	070001c4 	movi	fp,7
 40224ac:	dcc02d17 	ldw	r19,180(sp)
 40224b0:	00000306 	br	40224c0 <___vfprintf_internal_r+0x1360>
 40224b4:	42000204 	addi	r8,r8,8
 40224b8:	8c7ffc04 	addi	r17,r17,-16
 40224bc:	b441970e 	bge	r22,r17,4022b1c <___vfprintf_internal_r+0x19bc>
 40224c0:	18c00404 	addi	r3,r3,16
 40224c4:	10800044 	addi	r2,r2,1
 40224c8:	45000015 	stw	r20,0(r8)
 40224cc:	45800115 	stw	r22,4(r8)
 40224d0:	d8c02015 	stw	r3,128(sp)
 40224d4:	d8801f15 	stw	r2,124(sp)
 40224d8:	e0bff60e 	bge	fp,r2,40224b4 <_gp+0xfffe7d50>
 40224dc:	d9801e04 	addi	r6,sp,120
 40224e0:	b80b883a 	mov	r5,r23
 40224e4:	9809883a 	mov	r4,r19
 40224e8:	40289600 	call	4028960 <__sprint_r>
 40224ec:	103c201e 	bne	r2,zero,4021570 <_gp+0xfffe6e0c>
 40224f0:	d8c02017 	ldw	r3,128(sp)
 40224f4:	d8801f17 	ldw	r2,124(sp)
 40224f8:	da000404 	addi	r8,sp,16
 40224fc:	003fee06 	br	40224b8 <_gp+0xfffe7d54>
 4022500:	d9002d17 	ldw	r4,180(sp)
 4022504:	d9801e04 	addi	r6,sp,120
 4022508:	b80b883a 	mov	r5,r23
 402250c:	40289600 	call	4028960 <__sprint_r>
 4022510:	103c171e 	bne	r2,zero,4021570 <_gp+0xfffe6e0c>
 4022514:	d8c02017 	ldw	r3,128(sp)
 4022518:	df002787 	ldb	fp,158(sp)
 402251c:	da000404 	addi	r8,sp,16
 4022520:	003d3406 	br	40219f4 <_gp+0xfffe7290>
 4022524:	9080040c 	andi	r2,r18,16
 4022528:	10016126 	beq	r2,zero,4022ab0 <___vfprintf_internal_r+0x1950>
 402252c:	d9402e17 	ldw	r5,184(sp)
 4022530:	2cc00017 	ldw	r19,0(r5)
 4022534:	29400104 	addi	r5,r5,4
 4022538:	d9402e15 	stw	r5,184(sp)
 402253c:	982dd7fa 	srai	r22,r19,31
 4022540:	b005883a 	mov	r2,r22
 4022544:	003c5a06 	br	40216b0 <_gp+0xfffe6f4c>
 4022548:	9080040c 	andi	r2,r18,16
 402254c:	10003526 	beq	r2,zero,4022624 <___vfprintf_internal_r+0x14c4>
 4022550:	d8c02e17 	ldw	r3,184(sp)
 4022554:	d9002a17 	ldw	r4,168(sp)
 4022558:	d8002785 	stb	zero,158(sp)
 402255c:	18800104 	addi	r2,r3,4
 4022560:	1cc00017 	ldw	r19,0(r3)
 4022564:	002d883a 	mov	r22,zero
 4022568:	20003716 	blt	r4,zero,4022648 <___vfprintf_internal_r+0x14e8>
 402256c:	00ffdfc4 	movi	r3,-129
 4022570:	d8802e15 	stw	r2,184(sp)
 4022574:	90e4703a 	and	r18,r18,r3
 4022578:	0039883a 	mov	fp,zero
 402257c:	983dd426 	beq	r19,zero,4021cd0 <_gp+0xfffe756c>
 4022580:	00800244 	movi	r2,9
 4022584:	14fc5336 	bltu	r2,r19,40216d4 <_gp+0xfffe6f70>
 4022588:	d8c02817 	ldw	r3,160(sp)
 402258c:	dc001dc4 	addi	r16,sp,119
 4022590:	9cc00c04 	addi	r19,r19,48
 4022594:	1c07c83a 	sub	r3,r3,r16
 4022598:	dcc01dc5 	stb	r19,119(sp)
 402259c:	d8c02b15 	stw	r3,172(sp)
 40225a0:	003cc606 	br	40218bc <_gp+0xfffe7158>
 40225a4:	d8803317 	ldw	r2,204(sp)
 40225a8:	143fffc4 	addi	r16,r2,-1
 40225ac:	043f4d0e 	bge	zero,r16,40222e4 <_gp+0xfffe7b80>
 40225b0:	07000404 	movi	fp,16
 40225b4:	e400810e 	bge	fp,r16,40227bc <___vfprintf_internal_r+0x165c>
 40225b8:	014100f4 	movhi	r5,1027
 40225bc:	29428184 	addi	r5,r5,2566
 40225c0:	d9402c15 	stw	r5,176(sp)
 40225c4:	01c001c4 	movi	r7,7
 40225c8:	dcc02d17 	ldw	r19,180(sp)
 40225cc:	00000306 	br	40225dc <___vfprintf_internal_r+0x147c>
 40225d0:	b5800204 	addi	r22,r22,8
 40225d4:	843ffc04 	addi	r16,r16,-16
 40225d8:	e4007b0e 	bge	fp,r16,40227c8 <___vfprintf_internal_r+0x1668>
 40225dc:	18c00404 	addi	r3,r3,16
 40225e0:	8c400044 	addi	r17,r17,1
 40225e4:	b5000015 	stw	r20,0(r22)
 40225e8:	b7000115 	stw	fp,4(r22)
 40225ec:	d8c02015 	stw	r3,128(sp)
 40225f0:	dc401f15 	stw	r17,124(sp)
 40225f4:	3c7ff60e 	bge	r7,r17,40225d0 <_gp+0xfffe7e6c>
 40225f8:	d9801e04 	addi	r6,sp,120
 40225fc:	b80b883a 	mov	r5,r23
 4022600:	9809883a 	mov	r4,r19
 4022604:	d9c03c15 	stw	r7,240(sp)
 4022608:	40289600 	call	4028960 <__sprint_r>
 402260c:	d9c03c17 	ldw	r7,240(sp)
 4022610:	103bd71e 	bne	r2,zero,4021570 <_gp+0xfffe6e0c>
 4022614:	d8c02017 	ldw	r3,128(sp)
 4022618:	dc401f17 	ldw	r17,124(sp)
 402261c:	dd800404 	addi	r22,sp,16
 4022620:	003fec06 	br	40225d4 <_gp+0xfffe7e70>
 4022624:	9080100c 	andi	r2,r18,64
 4022628:	d8002785 	stb	zero,158(sp)
 402262c:	10010e26 	beq	r2,zero,4022a68 <___vfprintf_internal_r+0x1908>
 4022630:	d9402e17 	ldw	r5,184(sp)
 4022634:	d8c02a17 	ldw	r3,168(sp)
 4022638:	002d883a 	mov	r22,zero
 402263c:	28800104 	addi	r2,r5,4
 4022640:	2cc0000b 	ldhu	r19,0(r5)
 4022644:	183fc90e 	bge	r3,zero,402256c <_gp+0xfffe7e08>
 4022648:	d8802e15 	stw	r2,184(sp)
 402264c:	0039883a 	mov	fp,zero
 4022650:	9d84b03a 	or	r2,r19,r22
 4022654:	103c1e1e 	bne	r2,zero,40216d0 <_gp+0xfffe6f6c>
 4022658:	00800044 	movi	r2,1
 402265c:	003e6c06 	br	4022010 <_gp+0xfffe78ac>
 4022660:	d9002d17 	ldw	r4,180(sp)
 4022664:	d9801e04 	addi	r6,sp,120
 4022668:	b80b883a 	mov	r5,r23
 402266c:	40289600 	call	4028960 <__sprint_r>
 4022670:	103bbf1e 	bne	r2,zero,4021570 <_gp+0xfffe6e0c>
 4022674:	d8c02017 	ldw	r3,128(sp)
 4022678:	da000404 	addi	r8,sp,16
 402267c:	d9003217 	ldw	r4,200(sp)
 4022680:	d8802617 	ldw	r2,152(sp)
 4022684:	d9403317 	ldw	r5,204(sp)
 4022688:	8123883a 	add	r17,r16,r4
 402268c:	11400216 	blt	r2,r5,4022698 <___vfprintf_internal_r+0x1538>
 4022690:	9100004c 	andi	r4,r18,1
 4022694:	20000d26 	beq	r4,zero,40226cc <___vfprintf_internal_r+0x156c>
 4022698:	d9003717 	ldw	r4,220(sp)
 402269c:	d9403417 	ldw	r5,208(sp)
 40226a0:	1907883a 	add	r3,r3,r4
 40226a4:	d9001f17 	ldw	r4,124(sp)
 40226a8:	41400015 	stw	r5,0(r8)
 40226ac:	d9403717 	ldw	r5,220(sp)
 40226b0:	21000044 	addi	r4,r4,1
 40226b4:	d8c02015 	stw	r3,128(sp)
 40226b8:	41400115 	stw	r5,4(r8)
 40226bc:	d9001f15 	stw	r4,124(sp)
 40226c0:	014001c4 	movi	r5,7
 40226c4:	2901e816 	blt	r5,r4,4022e68 <___vfprintf_internal_r+0x1d08>
 40226c8:	42000204 	addi	r8,r8,8
 40226cc:	d9003317 	ldw	r4,204(sp)
 40226d0:	8121883a 	add	r16,r16,r4
 40226d4:	2085c83a 	sub	r2,r4,r2
 40226d8:	8461c83a 	sub	r16,r16,r17
 40226dc:	1400010e 	bge	r2,r16,40226e4 <___vfprintf_internal_r+0x1584>
 40226e0:	1021883a 	mov	r16,r2
 40226e4:	04000a0e 	bge	zero,r16,4022710 <___vfprintf_internal_r+0x15b0>
 40226e8:	d9001f17 	ldw	r4,124(sp)
 40226ec:	1c07883a 	add	r3,r3,r16
 40226f0:	44400015 	stw	r17,0(r8)
 40226f4:	21000044 	addi	r4,r4,1
 40226f8:	44000115 	stw	r16,4(r8)
 40226fc:	d8c02015 	stw	r3,128(sp)
 4022700:	d9001f15 	stw	r4,124(sp)
 4022704:	014001c4 	movi	r5,7
 4022708:	2901fb16 	blt	r5,r4,4022ef8 <___vfprintf_internal_r+0x1d98>
 402270c:	42000204 	addi	r8,r8,8
 4022710:	8001f716 	blt	r16,zero,4022ef0 <___vfprintf_internal_r+0x1d90>
 4022714:	1421c83a 	sub	r16,r2,r16
 4022718:	043d160e 	bge	zero,r16,4021b74 <_gp+0xfffe7410>
 402271c:	04400404 	movi	r17,16
 4022720:	d8801f17 	ldw	r2,124(sp)
 4022724:	8c3efb0e 	bge	r17,r16,4022314 <_gp+0xfffe7bb0>
 4022728:	014100f4 	movhi	r5,1027
 402272c:	29428184 	addi	r5,r5,2566
 4022730:	d9402c15 	stw	r5,176(sp)
 4022734:	058001c4 	movi	r22,7
 4022738:	dcc02d17 	ldw	r19,180(sp)
 402273c:	00000306 	br	402274c <___vfprintf_internal_r+0x15ec>
 4022740:	42000204 	addi	r8,r8,8
 4022744:	843ffc04 	addi	r16,r16,-16
 4022748:	8c3ef50e 	bge	r17,r16,4022320 <_gp+0xfffe7bbc>
 402274c:	18c00404 	addi	r3,r3,16
 4022750:	10800044 	addi	r2,r2,1
 4022754:	45000015 	stw	r20,0(r8)
 4022758:	44400115 	stw	r17,4(r8)
 402275c:	d8c02015 	stw	r3,128(sp)
 4022760:	d8801f15 	stw	r2,124(sp)
 4022764:	b0bff60e 	bge	r22,r2,4022740 <_gp+0xfffe7fdc>
 4022768:	d9801e04 	addi	r6,sp,120
 402276c:	b80b883a 	mov	r5,r23
 4022770:	9809883a 	mov	r4,r19
 4022774:	40289600 	call	4028960 <__sprint_r>
 4022778:	103b7d1e 	bne	r2,zero,4021570 <_gp+0xfffe6e0c>
 402277c:	d8c02017 	ldw	r3,128(sp)
 4022780:	d8801f17 	ldw	r2,124(sp)
 4022784:	da000404 	addi	r8,sp,16
 4022788:	003fee06 	br	4022744 <_gp+0xfffe7fe0>
 402278c:	9088703a 	and	r4,r18,r2
 4022790:	203eab1e 	bne	r4,zero,4022240 <_gp+0xfffe7adc>
 4022794:	dc401f17 	ldw	r17,124(sp)
 4022798:	40800115 	stw	r2,4(r8)
 402279c:	44000015 	stw	r16,0(r8)
 40227a0:	8c400044 	addi	r17,r17,1
 40227a4:	d8c02015 	stw	r3,128(sp)
 40227a8:	dc401f15 	stw	r17,124(sp)
 40227ac:	008001c4 	movi	r2,7
 40227b0:	14400e16 	blt	r2,r17,40227ec <___vfprintf_internal_r+0x168c>
 40227b4:	45800204 	addi	r22,r8,8
 40227b8:	003eca06 	br	40222e4 <_gp+0xfffe7b80>
 40227bc:	010100f4 	movhi	r4,1027
 40227c0:	21028184 	addi	r4,r4,2566
 40227c4:	d9002c15 	stw	r4,176(sp)
 40227c8:	d8802c17 	ldw	r2,176(sp)
 40227cc:	1c07883a 	add	r3,r3,r16
 40227d0:	8c400044 	addi	r17,r17,1
 40227d4:	b0800015 	stw	r2,0(r22)
 40227d8:	b4000115 	stw	r16,4(r22)
 40227dc:	d8c02015 	stw	r3,128(sp)
 40227e0:	dc401f15 	stw	r17,124(sp)
 40227e4:	008001c4 	movi	r2,7
 40227e8:	147ebd0e 	bge	r2,r17,40222e0 <_gp+0xfffe7b7c>
 40227ec:	d9002d17 	ldw	r4,180(sp)
 40227f0:	d9801e04 	addi	r6,sp,120
 40227f4:	b80b883a 	mov	r5,r23
 40227f8:	40289600 	call	4028960 <__sprint_r>
 40227fc:	103b5c1e 	bne	r2,zero,4021570 <_gp+0xfffe6e0c>
 4022800:	d8c02017 	ldw	r3,128(sp)
 4022804:	dc401f17 	ldw	r17,124(sp)
 4022808:	dd800404 	addi	r22,sp,16
 402280c:	003eb506 	br	40222e4 <_gp+0xfffe7b80>
 4022810:	d9002d17 	ldw	r4,180(sp)
 4022814:	d9801e04 	addi	r6,sp,120
 4022818:	b80b883a 	mov	r5,r23
 402281c:	40289600 	call	4028960 <__sprint_r>
 4022820:	103b531e 	bne	r2,zero,4021570 <_gp+0xfffe6e0c>
 4022824:	d8c02017 	ldw	r3,128(sp)
 4022828:	dc401f17 	ldw	r17,124(sp)
 402282c:	da000404 	addi	r8,sp,16
 4022830:	003e8d06 	br	4022268 <_gp+0xfffe7b04>
 4022834:	d9002d17 	ldw	r4,180(sp)
 4022838:	d9801e04 	addi	r6,sp,120
 402283c:	b80b883a 	mov	r5,r23
 4022840:	40289600 	call	4028960 <__sprint_r>
 4022844:	103b4a1e 	bne	r2,zero,4021570 <_gp+0xfffe6e0c>
 4022848:	d8c02017 	ldw	r3,128(sp)
 402284c:	dc401f17 	ldw	r17,124(sp)
 4022850:	dd800404 	addi	r22,sp,16
 4022854:	003e8f06 	br	4022294 <_gp+0xfffe7b30>
 4022858:	0027883a 	mov	r19,zero
 402285c:	003f4a06 	br	4022588 <_gp+0xfffe7e24>
 4022860:	d9002d17 	ldw	r4,180(sp)
 4022864:	d9801e04 	addi	r6,sp,120
 4022868:	b80b883a 	mov	r5,r23
 402286c:	40289600 	call	4028960 <__sprint_r>
 4022870:	103b3f1e 	bne	r2,zero,4021570 <_gp+0xfffe6e0c>
 4022874:	d8c02017 	ldw	r3,128(sp)
 4022878:	da000404 	addi	r8,sp,16
 402287c:	003c7b06 	br	4021a6c <_gp+0xfffe7308>
 4022880:	d9402a17 	ldw	r5,168(sp)
 4022884:	04e7c83a 	sub	r19,zero,r19
 4022888:	07000b44 	movi	fp,45
 402288c:	9804c03a 	cmpne	r2,r19,zero
 4022890:	05adc83a 	sub	r22,zero,r22
 4022894:	df002785 	stb	fp,158(sp)
 4022898:	b0adc83a 	sub	r22,r22,r2
 402289c:	28017b16 	blt	r5,zero,4022e8c <___vfprintf_internal_r+0x1d2c>
 40228a0:	00bfdfc4 	movi	r2,-129
 40228a4:	90a4703a 	and	r18,r18,r2
 40228a8:	003b8906 	br	40216d0 <_gp+0xfffe6f6c>
 40228ac:	d9003617 	ldw	r4,216(sp)
 40228b0:	d9403817 	ldw	r5,224(sp)
 40228b4:	da003d15 	stw	r8,244(sp)
 40228b8:	40285840 	call	4028584 <__fpclassifyd>
 40228bc:	da003d17 	ldw	r8,244(sp)
 40228c0:	1000f026 	beq	r2,zero,4022c84 <___vfprintf_internal_r+0x1b24>
 40228c4:	d9002a17 	ldw	r4,168(sp)
 40228c8:	05bff7c4 	movi	r22,-33
 40228cc:	00bfffc4 	movi	r2,-1
 40228d0:	8dac703a 	and	r22,r17,r22
 40228d4:	20820026 	beq	r4,r2,40230d8 <___vfprintf_internal_r+0x1f78>
 40228d8:	008011c4 	movi	r2,71
 40228dc:	b081f726 	beq	r22,r2,40230bc <___vfprintf_internal_r+0x1f5c>
 40228e0:	d9003817 	ldw	r4,224(sp)
 40228e4:	90c04014 	ori	r3,r18,256
 40228e8:	d8c02c15 	stw	r3,176(sp)
 40228ec:	20021516 	blt	r4,zero,4023144 <___vfprintf_internal_r+0x1fe4>
 40228f0:	dcc03817 	ldw	r19,224(sp)
 40228f4:	d8002905 	stb	zero,164(sp)
 40228f8:	00801984 	movi	r2,102
 40228fc:	8881f926 	beq	r17,r2,40230e4 <___vfprintf_internal_r+0x1f84>
 4022900:	00801184 	movi	r2,70
 4022904:	88821c26 	beq	r17,r2,4023178 <___vfprintf_internal_r+0x2018>
 4022908:	00801144 	movi	r2,69
 402290c:	b081ef26 	beq	r22,r2,40230cc <___vfprintf_internal_r+0x1f6c>
 4022910:	d8c02a17 	ldw	r3,168(sp)
 4022914:	d8802104 	addi	r2,sp,132
 4022918:	d8800315 	stw	r2,12(sp)
 402291c:	d9403617 	ldw	r5,216(sp)
 4022920:	d8802504 	addi	r2,sp,148
 4022924:	d9002d17 	ldw	r4,180(sp)
 4022928:	d8800215 	stw	r2,8(sp)
 402292c:	d8802604 	addi	r2,sp,152
 4022930:	d8c00015 	stw	r3,0(sp)
 4022934:	d8800115 	stw	r2,4(sp)
 4022938:	01c00084 	movi	r7,2
 402293c:	980d883a 	mov	r6,r19
 4022940:	d8c03c15 	stw	r3,240(sp)
 4022944:	da003d15 	stw	r8,244(sp)
 4022948:	40238900 	call	4023890 <_dtoa_r>
 402294c:	1021883a 	mov	r16,r2
 4022950:	008019c4 	movi	r2,103
 4022954:	d8c03c17 	ldw	r3,240(sp)
 4022958:	da003d17 	ldw	r8,244(sp)
 402295c:	88817126 	beq	r17,r2,4022f24 <___vfprintf_internal_r+0x1dc4>
 4022960:	008011c4 	movi	r2,71
 4022964:	88829126 	beq	r17,r2,40233ac <___vfprintf_internal_r+0x224c>
 4022968:	80f9883a 	add	fp,r16,r3
 402296c:	d9003617 	ldw	r4,216(sp)
 4022970:	000d883a 	mov	r6,zero
 4022974:	000f883a 	mov	r7,zero
 4022978:	980b883a 	mov	r5,r19
 402297c:	da003d15 	stw	r8,244(sp)
 4022980:	402c7f00 	call	402c7f0 <__eqdf2>
 4022984:	da003d17 	ldw	r8,244(sp)
 4022988:	10018d26 	beq	r2,zero,4022fc0 <___vfprintf_internal_r+0x1e60>
 402298c:	d8802117 	ldw	r2,132(sp)
 4022990:	1700062e 	bgeu	r2,fp,40229ac <___vfprintf_internal_r+0x184c>
 4022994:	01000c04 	movi	r4,48
 4022998:	10c00044 	addi	r3,r2,1
 402299c:	d8c02115 	stw	r3,132(sp)
 40229a0:	11000005 	stb	r4,0(r2)
 40229a4:	d8802117 	ldw	r2,132(sp)
 40229a8:	173ffb36 	bltu	r2,fp,4022998 <_gp+0xfffe8234>
 40229ac:	1405c83a 	sub	r2,r2,r16
 40229b0:	d8803315 	stw	r2,204(sp)
 40229b4:	008011c4 	movi	r2,71
 40229b8:	b0817626 	beq	r22,r2,4022f94 <___vfprintf_internal_r+0x1e34>
 40229bc:	00801944 	movi	r2,101
 40229c0:	1442800e 	bge	r2,r17,40233c4 <___vfprintf_internal_r+0x2264>
 40229c4:	d8c02617 	ldw	r3,152(sp)
 40229c8:	00801984 	movi	r2,102
 40229cc:	d8c03215 	stw	r3,200(sp)
 40229d0:	8881fe26 	beq	r17,r2,40231cc <___vfprintf_internal_r+0x206c>
 40229d4:	d8c03217 	ldw	r3,200(sp)
 40229d8:	d9003317 	ldw	r4,204(sp)
 40229dc:	1901dd16 	blt	r3,r4,4023154 <___vfprintf_internal_r+0x1ff4>
 40229e0:	9480004c 	andi	r18,r18,1
 40229e4:	90022b1e 	bne	r18,zero,4023294 <___vfprintf_internal_r+0x2134>
 40229e8:	1805883a 	mov	r2,r3
 40229ec:	18028316 	blt	r3,zero,40233fc <___vfprintf_internal_r+0x229c>
 40229f0:	d8c03217 	ldw	r3,200(sp)
 40229f4:	044019c4 	movi	r17,103
 40229f8:	d8c02b15 	stw	r3,172(sp)
 40229fc:	df002907 	ldb	fp,164(sp)
 4022a00:	e001531e 	bne	fp,zero,4022f50 <___vfprintf_internal_r+0x1df0>
 4022a04:	df002783 	ldbu	fp,158(sp)
 4022a08:	d8802915 	stw	r2,164(sp)
 4022a0c:	dc802c17 	ldw	r18,176(sp)
 4022a10:	d8002a15 	stw	zero,168(sp)
 4022a14:	003baf06 	br	40218d4 <_gp+0xfffe7170>
 4022a18:	d8c02e17 	ldw	r3,184(sp)
 4022a1c:	d9002e17 	ldw	r4,184(sp)
 4022a20:	d9402e17 	ldw	r5,184(sp)
 4022a24:	18c00017 	ldw	r3,0(r3)
 4022a28:	21000117 	ldw	r4,4(r4)
 4022a2c:	29400204 	addi	r5,r5,8
 4022a30:	d8c03615 	stw	r3,216(sp)
 4022a34:	d9003815 	stw	r4,224(sp)
 4022a38:	d9402e15 	stw	r5,184(sp)
 4022a3c:	003b5006 	br	4021780 <_gp+0xfffe701c>
 4022a40:	ac400007 	ldb	r17,0(r21)
 4022a44:	003a2806 	br	40212e8 <_gp+0xfffe6b84>
 4022a48:	9080100c 	andi	r2,r18,64
 4022a4c:	1000a826 	beq	r2,zero,4022cf0 <___vfprintf_internal_r+0x1b90>
 4022a50:	d8c02e17 	ldw	r3,184(sp)
 4022a54:	002d883a 	mov	r22,zero
 4022a58:	1cc0000b 	ldhu	r19,0(r3)
 4022a5c:	18c00104 	addi	r3,r3,4
 4022a60:	d8c02e15 	stw	r3,184(sp)
 4022a64:	003caf06 	br	4021d24 <_gp+0xfffe75c0>
 4022a68:	d9002e17 	ldw	r4,184(sp)
 4022a6c:	d9402a17 	ldw	r5,168(sp)
 4022a70:	002d883a 	mov	r22,zero
 4022a74:	20800104 	addi	r2,r4,4
 4022a78:	24c00017 	ldw	r19,0(r4)
 4022a7c:	283ebb0e 	bge	r5,zero,402256c <_gp+0xfffe7e08>
 4022a80:	003ef106 	br	4022648 <_gp+0xfffe7ee4>
 4022a84:	9080040c 	andi	r2,r18,16
 4022a88:	1000921e 	bne	r2,zero,4022cd4 <___vfprintf_internal_r+0x1b74>
 4022a8c:	9480100c 	andi	r18,r18,64
 4022a90:	90013926 	beq	r18,zero,4022f78 <___vfprintf_internal_r+0x1e18>
 4022a94:	d9402e17 	ldw	r5,184(sp)
 4022a98:	d8c02f17 	ldw	r3,188(sp)
 4022a9c:	28800017 	ldw	r2,0(r5)
 4022aa0:	29400104 	addi	r5,r5,4
 4022aa4:	d9402e15 	stw	r5,184(sp)
 4022aa8:	10c0000d 	sth	r3,0(r2)
 4022aac:	0039e406 	br	4021240 <_gp+0xfffe6adc>
 4022ab0:	9080100c 	andi	r2,r18,64
 4022ab4:	10008026 	beq	r2,zero,4022cb8 <___vfprintf_internal_r+0x1b58>
 4022ab8:	d8802e17 	ldw	r2,184(sp)
 4022abc:	14c0000f 	ldh	r19,0(r2)
 4022ac0:	10800104 	addi	r2,r2,4
 4022ac4:	d8802e15 	stw	r2,184(sp)
 4022ac8:	982dd7fa 	srai	r22,r19,31
 4022acc:	b005883a 	mov	r2,r22
 4022ad0:	003af706 	br	40216b0 <_gp+0xfffe6f4c>
 4022ad4:	9080100c 	andi	r2,r18,64
 4022ad8:	d8002785 	stb	zero,158(sp)
 4022adc:	10008a1e 	bne	r2,zero,4022d08 <___vfprintf_internal_r+0x1ba8>
 4022ae0:	d9002e17 	ldw	r4,184(sp)
 4022ae4:	d9402a17 	ldw	r5,168(sp)
 4022ae8:	002d883a 	mov	r22,zero
 4022aec:	20800104 	addi	r2,r4,4
 4022af0:	24c00017 	ldw	r19,0(r4)
 4022af4:	283e4b0e 	bge	r5,zero,4022424 <_gp+0xfffe7cc0>
 4022af8:	9d86b03a 	or	r3,r19,r22
 4022afc:	d8802e15 	stw	r2,184(sp)
 4022b00:	183e4c1e 	bne	r3,zero,4022434 <_gp+0xfffe7cd0>
 4022b04:	0039883a 	mov	fp,zero
 4022b08:	0005883a 	mov	r2,zero
 4022b0c:	003d4006 	br	4022010 <_gp+0xfffe78ac>
 4022b10:	014100f4 	movhi	r5,1027
 4022b14:	29428184 	addi	r5,r5,2566
 4022b18:	d9402c15 	stw	r5,176(sp)
 4022b1c:	d9402c17 	ldw	r5,176(sp)
 4022b20:	1c47883a 	add	r3,r3,r17
 4022b24:	10800044 	addi	r2,r2,1
 4022b28:	41400015 	stw	r5,0(r8)
 4022b2c:	44400115 	stw	r17,4(r8)
 4022b30:	d8c02015 	stw	r3,128(sp)
 4022b34:	d8801f15 	stw	r2,124(sp)
 4022b38:	010001c4 	movi	r4,7
 4022b3c:	20bec816 	blt	r4,r2,4022660 <_gp+0xfffe7efc>
 4022b40:	42000204 	addi	r8,r8,8
 4022b44:	003ecd06 	br	402267c <_gp+0xfffe7f18>
 4022b48:	d9002a17 	ldw	r4,168(sp)
 4022b4c:	d8002785 	stb	zero,158(sp)
 4022b50:	203d2d16 	blt	r4,zero,4022008 <_gp+0xfffe78a4>
 4022b54:	00bfdfc4 	movi	r2,-129
 4022b58:	90a4703a 	and	r18,r18,r2
 4022b5c:	003a6106 	br	40214e4 <_gp+0xfffe6d80>
 4022b60:	010100f4 	movhi	r4,1027
 4022b64:	21028184 	addi	r4,r4,2566
 4022b68:	d9002c15 	stw	r4,176(sp)
 4022b6c:	003bea06 	br	4021b18 <_gp+0xfffe73b4>
 4022b70:	d9002d17 	ldw	r4,180(sp)
 4022b74:	d9801e04 	addi	r6,sp,120
 4022b78:	b80b883a 	mov	r5,r23
 4022b7c:	40289600 	call	4028960 <__sprint_r>
 4022b80:	103a7b1e 	bne	r2,zero,4021570 <_gp+0xfffe6e0c>
 4022b84:	d8c02017 	ldw	r3,128(sp)
 4022b88:	da000404 	addi	r8,sp,16
 4022b8c:	003d4106 	br	4022094 <_gp+0xfffe7930>
 4022b90:	d8801f17 	ldw	r2,124(sp)
 4022b94:	014100f4 	movhi	r5,1027
 4022b98:	01000044 	movi	r4,1
 4022b9c:	18c00044 	addi	r3,r3,1
 4022ba0:	10800044 	addi	r2,r2,1
 4022ba4:	29428104 	addi	r5,r5,2564
 4022ba8:	41000115 	stw	r4,4(r8)
 4022bac:	41400015 	stw	r5,0(r8)
 4022bb0:	d8c02015 	stw	r3,128(sp)
 4022bb4:	d8801f15 	stw	r2,124(sp)
 4022bb8:	010001c4 	movi	r4,7
 4022bbc:	20805c16 	blt	r4,r2,4022d30 <___vfprintf_internal_r+0x1bd0>
 4022bc0:	42000204 	addi	r8,r8,8
 4022bc4:	8800041e 	bne	r17,zero,4022bd8 <___vfprintf_internal_r+0x1a78>
 4022bc8:	d8803317 	ldw	r2,204(sp)
 4022bcc:	1000021e 	bne	r2,zero,4022bd8 <___vfprintf_internal_r+0x1a78>
 4022bd0:	9080004c 	andi	r2,r18,1
 4022bd4:	103be726 	beq	r2,zero,4021b74 <_gp+0xfffe7410>
 4022bd8:	d9003717 	ldw	r4,220(sp)
 4022bdc:	d8801f17 	ldw	r2,124(sp)
 4022be0:	d9403417 	ldw	r5,208(sp)
 4022be4:	20c7883a 	add	r3,r4,r3
 4022be8:	10800044 	addi	r2,r2,1
 4022bec:	41000115 	stw	r4,4(r8)
 4022bf0:	41400015 	stw	r5,0(r8)
 4022bf4:	d8c02015 	stw	r3,128(sp)
 4022bf8:	d8801f15 	stw	r2,124(sp)
 4022bfc:	010001c4 	movi	r4,7
 4022c00:	20812116 	blt	r4,r2,4023088 <___vfprintf_internal_r+0x1f28>
 4022c04:	42000204 	addi	r8,r8,8
 4022c08:	0463c83a 	sub	r17,zero,r17
 4022c0c:	0440730e 	bge	zero,r17,4022ddc <___vfprintf_internal_r+0x1c7c>
 4022c10:	05800404 	movi	r22,16
 4022c14:	b440860e 	bge	r22,r17,4022e30 <___vfprintf_internal_r+0x1cd0>
 4022c18:	014100f4 	movhi	r5,1027
 4022c1c:	29428184 	addi	r5,r5,2566
 4022c20:	d9402c15 	stw	r5,176(sp)
 4022c24:	070001c4 	movi	fp,7
 4022c28:	dcc02d17 	ldw	r19,180(sp)
 4022c2c:	00000306 	br	4022c3c <___vfprintf_internal_r+0x1adc>
 4022c30:	42000204 	addi	r8,r8,8
 4022c34:	8c7ffc04 	addi	r17,r17,-16
 4022c38:	b440800e 	bge	r22,r17,4022e3c <___vfprintf_internal_r+0x1cdc>
 4022c3c:	18c00404 	addi	r3,r3,16
 4022c40:	10800044 	addi	r2,r2,1
 4022c44:	45000015 	stw	r20,0(r8)
 4022c48:	45800115 	stw	r22,4(r8)
 4022c4c:	d8c02015 	stw	r3,128(sp)
 4022c50:	d8801f15 	stw	r2,124(sp)
 4022c54:	e0bff60e 	bge	fp,r2,4022c30 <_gp+0xfffe84cc>
 4022c58:	d9801e04 	addi	r6,sp,120
 4022c5c:	b80b883a 	mov	r5,r23
 4022c60:	9809883a 	mov	r4,r19
 4022c64:	40289600 	call	4028960 <__sprint_r>
 4022c68:	103a411e 	bne	r2,zero,4021570 <_gp+0xfffe6e0c>
 4022c6c:	d8c02017 	ldw	r3,128(sp)
 4022c70:	d8801f17 	ldw	r2,124(sp)
 4022c74:	da000404 	addi	r8,sp,16
 4022c78:	003fee06 	br	4022c34 <_gp+0xfffe84d0>
 4022c7c:	00bfffc4 	movi	r2,-1
 4022c80:	003a3f06 	br	4021580 <_gp+0xfffe6e1c>
 4022c84:	008011c4 	movi	r2,71
 4022c88:	1440b816 	blt	r2,r17,4022f6c <___vfprintf_internal_r+0x1e0c>
 4022c8c:	040100f4 	movhi	r16,1027
 4022c90:	84027304 	addi	r16,r16,2508
 4022c94:	00c000c4 	movi	r3,3
 4022c98:	00bfdfc4 	movi	r2,-129
 4022c9c:	d8c02915 	stw	r3,164(sp)
 4022ca0:	90a4703a 	and	r18,r18,r2
 4022ca4:	df002783 	ldbu	fp,158(sp)
 4022ca8:	d8c02b15 	stw	r3,172(sp)
 4022cac:	d8002a15 	stw	zero,168(sp)
 4022cb0:	d8003215 	stw	zero,200(sp)
 4022cb4:	003b0706 	br	40218d4 <_gp+0xfffe7170>
 4022cb8:	d8c02e17 	ldw	r3,184(sp)
 4022cbc:	1cc00017 	ldw	r19,0(r3)
 4022cc0:	18c00104 	addi	r3,r3,4
 4022cc4:	d8c02e15 	stw	r3,184(sp)
 4022cc8:	982dd7fa 	srai	r22,r19,31
 4022ccc:	b005883a 	mov	r2,r22
 4022cd0:	003a7706 	br	40216b0 <_gp+0xfffe6f4c>
 4022cd4:	d8c02e17 	ldw	r3,184(sp)
 4022cd8:	d9002f17 	ldw	r4,188(sp)
 4022cdc:	18800017 	ldw	r2,0(r3)
 4022ce0:	18c00104 	addi	r3,r3,4
 4022ce4:	d8c02e15 	stw	r3,184(sp)
 4022ce8:	11000015 	stw	r4,0(r2)
 4022cec:	00395406 	br	4021240 <_gp+0xfffe6adc>
 4022cf0:	d9002e17 	ldw	r4,184(sp)
 4022cf4:	002d883a 	mov	r22,zero
 4022cf8:	24c00017 	ldw	r19,0(r4)
 4022cfc:	21000104 	addi	r4,r4,4
 4022d00:	d9002e15 	stw	r4,184(sp)
 4022d04:	003c0706 	br	4021d24 <_gp+0xfffe75c0>
 4022d08:	d9402e17 	ldw	r5,184(sp)
 4022d0c:	d8c02a17 	ldw	r3,168(sp)
 4022d10:	002d883a 	mov	r22,zero
 4022d14:	28800104 	addi	r2,r5,4
 4022d18:	2cc0000b 	ldhu	r19,0(r5)
 4022d1c:	183dc10e 	bge	r3,zero,4022424 <_gp+0xfffe7cc0>
 4022d20:	003f7506 	br	4022af8 <_gp+0xfffe8394>
 4022d24:	040100f4 	movhi	r16,1027
 4022d28:	84027104 	addi	r16,r16,2500
 4022d2c:	003aa706 	br	40217cc <_gp+0xfffe7068>
 4022d30:	d9002d17 	ldw	r4,180(sp)
 4022d34:	d9801e04 	addi	r6,sp,120
 4022d38:	b80b883a 	mov	r5,r23
 4022d3c:	40289600 	call	4028960 <__sprint_r>
 4022d40:	103a0b1e 	bne	r2,zero,4021570 <_gp+0xfffe6e0c>
 4022d44:	dc402617 	ldw	r17,152(sp)
 4022d48:	d8c02017 	ldw	r3,128(sp)
 4022d4c:	da000404 	addi	r8,sp,16
 4022d50:	003f9c06 	br	4022bc4 <_gp+0xfffe8460>
 4022d54:	ac400043 	ldbu	r17,1(r21)
 4022d58:	84000814 	ori	r16,r16,32
 4022d5c:	ad400044 	addi	r21,r21,1
 4022d60:	8c403fcc 	andi	r17,r17,255
 4022d64:	8c40201c 	xori	r17,r17,128
 4022d68:	8c7fe004 	addi	r17,r17,-128
 4022d6c:	00395e06 	br	40212e8 <_gp+0xfffe6b84>
 4022d70:	d8c02e15 	stw	r3,184(sp)
 4022d74:	0039883a 	mov	fp,zero
 4022d78:	003e3506 	br	4022650 <_gp+0xfffe7eec>
 4022d7c:	d9002d17 	ldw	r4,180(sp)
 4022d80:	d9801e04 	addi	r6,sp,120
 4022d84:	b80b883a 	mov	r5,r23
 4022d88:	40289600 	call	4028960 <__sprint_r>
 4022d8c:	1039f81e 	bne	r2,zero,4021570 <_gp+0xfffe6e0c>
 4022d90:	d8c02017 	ldw	r3,128(sp)
 4022d94:	da000404 	addi	r8,sp,16
 4022d98:	003cd006 	br	40220dc <_gp+0xfffe7978>
 4022d9c:	8009883a 	mov	r4,r16
 4022da0:	df003d15 	stw	fp,244(sp)
 4022da4:	40210c80 	call	40210c8 <strlen>
 4022da8:	d8802b15 	stw	r2,172(sp)
 4022dac:	da003d17 	ldw	r8,244(sp)
 4022db0:	103c200e 	bge	r2,zero,4021e34 <_gp+0xfffe76d0>
 4022db4:	0005883a 	mov	r2,zero
 4022db8:	003c1e06 	br	4021e34 <_gp+0xfffe76d0>
 4022dbc:	d9002d17 	ldw	r4,180(sp)
 4022dc0:	d9801e04 	addi	r6,sp,120
 4022dc4:	b80b883a 	mov	r5,r23
 4022dc8:	40289600 	call	4028960 <__sprint_r>
 4022dcc:	1039e81e 	bne	r2,zero,4021570 <_gp+0xfffe6e0c>
 4022dd0:	d8c02017 	ldw	r3,128(sp)
 4022dd4:	d8801f17 	ldw	r2,124(sp)
 4022dd8:	da000404 	addi	r8,sp,16
 4022ddc:	d9403317 	ldw	r5,204(sp)
 4022de0:	10800044 	addi	r2,r2,1
 4022de4:	44000015 	stw	r16,0(r8)
 4022de8:	28c7883a 	add	r3,r5,r3
 4022dec:	003b5b06 	br	4021b5c <_gp+0xfffe73f8>
 4022df0:	010100f4 	movhi	r4,1027
 4022df4:	21028584 	addi	r4,r4,2582
 4022df8:	d9003515 	stw	r4,212(sp)
 4022dfc:	003af206 	br	40219c8 <_gp+0xfffe7264>
 4022e00:	013fffc4 	movi	r4,-1
 4022e04:	003a0806 	br	4021628 <_gp+0xfffe6ec4>
 4022e08:	0023883a 	mov	r17,zero
 4022e0c:	003d9d06 	br	4022484 <_gp+0xfffe7d20>
 4022e10:	d9002d17 	ldw	r4,180(sp)
 4022e14:	d9801e04 	addi	r6,sp,120
 4022e18:	b80b883a 	mov	r5,r23
 4022e1c:	40289600 	call	4028960 <__sprint_r>
 4022e20:	1039d31e 	bne	r2,zero,4021570 <_gp+0xfffe6e0c>
 4022e24:	d8c02017 	ldw	r3,128(sp)
 4022e28:	da000404 	addi	r8,sp,16
 4022e2c:	003d9406 	br	4022480 <_gp+0xfffe7d1c>
 4022e30:	010100f4 	movhi	r4,1027
 4022e34:	21028184 	addi	r4,r4,2566
 4022e38:	d9002c15 	stw	r4,176(sp)
 4022e3c:	d9002c17 	ldw	r4,176(sp)
 4022e40:	1c47883a 	add	r3,r3,r17
 4022e44:	10800044 	addi	r2,r2,1
 4022e48:	41000015 	stw	r4,0(r8)
 4022e4c:	44400115 	stw	r17,4(r8)
 4022e50:	d8c02015 	stw	r3,128(sp)
 4022e54:	d8801f15 	stw	r2,124(sp)
 4022e58:	010001c4 	movi	r4,7
 4022e5c:	20bfd716 	blt	r4,r2,4022dbc <_gp+0xfffe8658>
 4022e60:	42000204 	addi	r8,r8,8
 4022e64:	003fdd06 	br	4022ddc <_gp+0xfffe8678>
 4022e68:	d9002d17 	ldw	r4,180(sp)
 4022e6c:	d9801e04 	addi	r6,sp,120
 4022e70:	b80b883a 	mov	r5,r23
 4022e74:	40289600 	call	4028960 <__sprint_r>
 4022e78:	1039bd1e 	bne	r2,zero,4021570 <_gp+0xfffe6e0c>
 4022e7c:	d8802617 	ldw	r2,152(sp)
 4022e80:	d8c02017 	ldw	r3,128(sp)
 4022e84:	da000404 	addi	r8,sp,16
 4022e88:	003e1006 	br	40226cc <_gp+0xfffe7f68>
 4022e8c:	00800044 	movi	r2,1
 4022e90:	10803fcc 	andi	r2,r2,255
 4022e94:	00c00044 	movi	r3,1
 4022e98:	10fa0d26 	beq	r2,r3,40216d0 <_gp+0xfffe6f6c>
 4022e9c:	00c00084 	movi	r3,2
 4022ea0:	10fbaf26 	beq	r2,r3,4021d60 <_gp+0xfffe75fc>
 4022ea4:	003a6d06 	br	402185c <_gp+0xfffe70f8>
 4022ea8:	010100f4 	movhi	r4,1027
 4022eac:	21028584 	addi	r4,r4,2582
 4022eb0:	d9003515 	stw	r4,212(sp)
 4022eb4:	003b5406 	br	4021c08 <_gp+0xfffe74a4>
 4022eb8:	d8802a17 	ldw	r2,168(sp)
 4022ebc:	00c00184 	movi	r3,6
 4022ec0:	1880012e 	bgeu	r3,r2,4022ec8 <___vfprintf_internal_r+0x1d68>
 4022ec4:	1805883a 	mov	r2,r3
 4022ec8:	d8802b15 	stw	r2,172(sp)
 4022ecc:	1000ef16 	blt	r2,zero,402328c <___vfprintf_internal_r+0x212c>
 4022ed0:	040100f4 	movhi	r16,1027
 4022ed4:	d8802915 	stw	r2,164(sp)
 4022ed8:	dcc02e15 	stw	r19,184(sp)
 4022edc:	d8002a15 	stw	zero,168(sp)
 4022ee0:	d8003215 	stw	zero,200(sp)
 4022ee4:	84027f04 	addi	r16,r16,2556
 4022ee8:	0039883a 	mov	fp,zero
 4022eec:	003a8006 	br	40218f0 <_gp+0xfffe718c>
 4022ef0:	0021883a 	mov	r16,zero
 4022ef4:	003e0706 	br	4022714 <_gp+0xfffe7fb0>
 4022ef8:	d9002d17 	ldw	r4,180(sp)
 4022efc:	d9801e04 	addi	r6,sp,120
 4022f00:	b80b883a 	mov	r5,r23
 4022f04:	40289600 	call	4028960 <__sprint_r>
 4022f08:	1039991e 	bne	r2,zero,4021570 <_gp+0xfffe6e0c>
 4022f0c:	d8802617 	ldw	r2,152(sp)
 4022f10:	d9403317 	ldw	r5,204(sp)
 4022f14:	d8c02017 	ldw	r3,128(sp)
 4022f18:	da000404 	addi	r8,sp,16
 4022f1c:	2885c83a 	sub	r2,r5,r2
 4022f20:	003dfb06 	br	4022710 <_gp+0xfffe7fac>
 4022f24:	9080004c 	andi	r2,r18,1
 4022f28:	103e8f1e 	bne	r2,zero,4022968 <_gp+0xfffe8204>
 4022f2c:	d8802117 	ldw	r2,132(sp)
 4022f30:	003e9e06 	br	40229ac <_gp+0xfffe8248>
 4022f34:	1025883a 	mov	r18,r2
 4022f38:	0039883a 	mov	fp,zero
 4022f3c:	00800084 	movi	r2,2
 4022f40:	003fd306 	br	4022e90 <_gp+0xfffe872c>
 4022f44:	07000b44 	movi	fp,45
 4022f48:	df002785 	stb	fp,158(sp)
 4022f4c:	003a1b06 	br	40217bc <_gp+0xfffe7058>
 4022f50:	00c00b44 	movi	r3,45
 4022f54:	d8c02785 	stb	r3,158(sp)
 4022f58:	d8802915 	stw	r2,164(sp)
 4022f5c:	dc802c17 	ldw	r18,176(sp)
 4022f60:	d8002a15 	stw	zero,168(sp)
 4022f64:	07000b44 	movi	fp,45
 4022f68:	003a5e06 	br	40218e4 <_gp+0xfffe7180>
 4022f6c:	040100f4 	movhi	r16,1027
 4022f70:	84027404 	addi	r16,r16,2512
 4022f74:	003f4706 	br	4022c94 <_gp+0xfffe8530>
 4022f78:	d9002e17 	ldw	r4,184(sp)
 4022f7c:	d9402f17 	ldw	r5,188(sp)
 4022f80:	20800017 	ldw	r2,0(r4)
 4022f84:	21000104 	addi	r4,r4,4
 4022f88:	d9002e15 	stw	r4,184(sp)
 4022f8c:	11400015 	stw	r5,0(r2)
 4022f90:	0038ab06 	br	4021240 <_gp+0xfffe6adc>
 4022f94:	dd802617 	ldw	r22,152(sp)
 4022f98:	00bfff44 	movi	r2,-3
 4022f9c:	b0801c16 	blt	r22,r2,4023010 <___vfprintf_internal_r+0x1eb0>
 4022fa0:	d9402a17 	ldw	r5,168(sp)
 4022fa4:	2d801a16 	blt	r5,r22,4023010 <___vfprintf_internal_r+0x1eb0>
 4022fa8:	dd803215 	stw	r22,200(sp)
 4022fac:	003e8906 	br	40229d4 <_gp+0xfffe8270>
 4022fb0:	010100f4 	movhi	r4,1027
 4022fb4:	21028184 	addi	r4,r4,2566
 4022fb8:	d9002c15 	stw	r4,176(sp)
 4022fbc:	003c9106 	br	4022204 <_gp+0xfffe7aa0>
 4022fc0:	e005883a 	mov	r2,fp
 4022fc4:	003e7906 	br	40229ac <_gp+0xfffe8248>
 4022fc8:	d9002a17 	ldw	r4,168(sp)
 4022fcc:	df002783 	ldbu	fp,158(sp)
 4022fd0:	dcc02e15 	stw	r19,184(sp)
 4022fd4:	d9002915 	stw	r4,164(sp)
 4022fd8:	d9002b15 	stw	r4,172(sp)
 4022fdc:	d8002a15 	stw	zero,168(sp)
 4022fe0:	d8003215 	stw	zero,200(sp)
 4022fe4:	003a3b06 	br	40218d4 <_gp+0xfffe7170>
 4022fe8:	9080004c 	andi	r2,r18,1
 4022fec:	0039883a 	mov	fp,zero
 4022ff0:	10000426 	beq	r2,zero,4023004 <___vfprintf_internal_r+0x1ea4>
 4022ff4:	00800c04 	movi	r2,48
 4022ff8:	dc001dc4 	addi	r16,sp,119
 4022ffc:	d8801dc5 	stb	r2,119(sp)
 4023000:	003b6406 	br	4021d94 <_gp+0xfffe7630>
 4023004:	d8002b15 	stw	zero,172(sp)
 4023008:	dc001e04 	addi	r16,sp,120
 402300c:	003a2b06 	br	40218bc <_gp+0xfffe7158>
 4023010:	8c7fff84 	addi	r17,r17,-2
 4023014:	b5bfffc4 	addi	r22,r22,-1
 4023018:	dd802615 	stw	r22,152(sp)
 402301c:	dc4022c5 	stb	r17,139(sp)
 4023020:	b000bf16 	blt	r22,zero,4023320 <___vfprintf_internal_r+0x21c0>
 4023024:	00800ac4 	movi	r2,43
 4023028:	d8802305 	stb	r2,140(sp)
 402302c:	00800244 	movi	r2,9
 4023030:	15807016 	blt	r2,r22,40231f4 <___vfprintf_internal_r+0x2094>
 4023034:	00800c04 	movi	r2,48
 4023038:	b5800c04 	addi	r22,r22,48
 402303c:	d8802345 	stb	r2,141(sp)
 4023040:	dd802385 	stb	r22,142(sp)
 4023044:	d88023c4 	addi	r2,sp,143
 4023048:	df0022c4 	addi	fp,sp,139
 402304c:	d8c03317 	ldw	r3,204(sp)
 4023050:	1739c83a 	sub	fp,r2,fp
 4023054:	d9003317 	ldw	r4,204(sp)
 4023058:	e0c7883a 	add	r3,fp,r3
 402305c:	df003a15 	stw	fp,232(sp)
 4023060:	d8c02b15 	stw	r3,172(sp)
 4023064:	00800044 	movi	r2,1
 4023068:	1100b30e 	bge	r2,r4,4023338 <___vfprintf_internal_r+0x21d8>
 402306c:	d8c02b17 	ldw	r3,172(sp)
 4023070:	18c00044 	addi	r3,r3,1
 4023074:	d8c02b15 	stw	r3,172(sp)
 4023078:	1805883a 	mov	r2,r3
 402307c:	1800ac16 	blt	r3,zero,4023330 <___vfprintf_internal_r+0x21d0>
 4023080:	d8003215 	stw	zero,200(sp)
 4023084:	003e5d06 	br	40229fc <_gp+0xfffe8298>
 4023088:	d9002d17 	ldw	r4,180(sp)
 402308c:	d9801e04 	addi	r6,sp,120
 4023090:	b80b883a 	mov	r5,r23
 4023094:	40289600 	call	4028960 <__sprint_r>
 4023098:	1039351e 	bne	r2,zero,4021570 <_gp+0xfffe6e0c>
 402309c:	dc402617 	ldw	r17,152(sp)
 40230a0:	d8c02017 	ldw	r3,128(sp)
 40230a4:	d8801f17 	ldw	r2,124(sp)
 40230a8:	da000404 	addi	r8,sp,16
 40230ac:	003ed606 	br	4022c08 <_gp+0xfffe84a4>
 40230b0:	182b883a 	mov	r21,r3
 40230b4:	d8002a15 	stw	zero,168(sp)
 40230b8:	00388c06 	br	40212ec <_gp+0xfffe6b88>
 40230bc:	d8802a17 	ldw	r2,168(sp)
 40230c0:	103e071e 	bne	r2,zero,40228e0 <_gp+0xfffe817c>
 40230c4:	dc002a15 	stw	r16,168(sp)
 40230c8:	003e0506 	br	40228e0 <_gp+0xfffe817c>
 40230cc:	d9002a17 	ldw	r4,168(sp)
 40230d0:	20c00044 	addi	r3,r4,1
 40230d4:	003e0f06 	br	4022914 <_gp+0xfffe81b0>
 40230d8:	01400184 	movi	r5,6
 40230dc:	d9402a15 	stw	r5,168(sp)
 40230e0:	003dff06 	br	40228e0 <_gp+0xfffe817c>
 40230e4:	d8802104 	addi	r2,sp,132
 40230e8:	d8800315 	stw	r2,12(sp)
 40230ec:	d8802504 	addi	r2,sp,148
 40230f0:	d8800215 	stw	r2,8(sp)
 40230f4:	d8802604 	addi	r2,sp,152
 40230f8:	d8800115 	stw	r2,4(sp)
 40230fc:	d8802a17 	ldw	r2,168(sp)
 4023100:	d9403617 	ldw	r5,216(sp)
 4023104:	d9002d17 	ldw	r4,180(sp)
 4023108:	d8800015 	stw	r2,0(sp)
 402310c:	01c000c4 	movi	r7,3
 4023110:	980d883a 	mov	r6,r19
 4023114:	da003d15 	stw	r8,244(sp)
 4023118:	40238900 	call	4023890 <_dtoa_r>
 402311c:	d8c02a17 	ldw	r3,168(sp)
 4023120:	da003d17 	ldw	r8,244(sp)
 4023124:	1021883a 	mov	r16,r2
 4023128:	10f9883a 	add	fp,r2,r3
 402312c:	81000007 	ldb	r4,0(r16)
 4023130:	00800c04 	movi	r2,48
 4023134:	20805e26 	beq	r4,r2,40232b0 <___vfprintf_internal_r+0x2150>
 4023138:	d8c02617 	ldw	r3,152(sp)
 402313c:	e0f9883a 	add	fp,fp,r3
 4023140:	003e0a06 	br	402296c <_gp+0xfffe8208>
 4023144:	00c00b44 	movi	r3,45
 4023148:	24e0003c 	xorhi	r19,r4,32768
 402314c:	d8c02905 	stb	r3,164(sp)
 4023150:	003de906 	br	40228f8 <_gp+0xfffe8194>
 4023154:	d8c03217 	ldw	r3,200(sp)
 4023158:	00c07a0e 	bge	zero,r3,4023344 <___vfprintf_internal_r+0x21e4>
 402315c:	00800044 	movi	r2,1
 4023160:	d9003317 	ldw	r4,204(sp)
 4023164:	1105883a 	add	r2,r2,r4
 4023168:	d8802b15 	stw	r2,172(sp)
 402316c:	10004e16 	blt	r2,zero,40232a8 <___vfprintf_internal_r+0x2148>
 4023170:	044019c4 	movi	r17,103
 4023174:	003e2106 	br	40229fc <_gp+0xfffe8298>
 4023178:	d9002a17 	ldw	r4,168(sp)
 402317c:	d8802104 	addi	r2,sp,132
 4023180:	d8800315 	stw	r2,12(sp)
 4023184:	d9000015 	stw	r4,0(sp)
 4023188:	d8802504 	addi	r2,sp,148
 402318c:	d9403617 	ldw	r5,216(sp)
 4023190:	d9002d17 	ldw	r4,180(sp)
 4023194:	d8800215 	stw	r2,8(sp)
 4023198:	d8802604 	addi	r2,sp,152
 402319c:	d8800115 	stw	r2,4(sp)
 40231a0:	01c000c4 	movi	r7,3
 40231a4:	980d883a 	mov	r6,r19
 40231a8:	da003d15 	stw	r8,244(sp)
 40231ac:	40238900 	call	4023890 <_dtoa_r>
 40231b0:	d8c02a17 	ldw	r3,168(sp)
 40231b4:	da003d17 	ldw	r8,244(sp)
 40231b8:	1021883a 	mov	r16,r2
 40231bc:	00801184 	movi	r2,70
 40231c0:	80f9883a 	add	fp,r16,r3
 40231c4:	88bfd926 	beq	r17,r2,402312c <_gp+0xfffe89c8>
 40231c8:	003de806 	br	402296c <_gp+0xfffe8208>
 40231cc:	d9002a17 	ldw	r4,168(sp)
 40231d0:	00c04d0e 	bge	zero,r3,4023308 <___vfprintf_internal_r+0x21a8>
 40231d4:	2000441e 	bne	r4,zero,40232e8 <___vfprintf_internal_r+0x2188>
 40231d8:	9480004c 	andi	r18,r18,1
 40231dc:	9000421e 	bne	r18,zero,40232e8 <___vfprintf_internal_r+0x2188>
 40231e0:	1805883a 	mov	r2,r3
 40231e4:	18006f16 	blt	r3,zero,40233a4 <___vfprintf_internal_r+0x2244>
 40231e8:	d8c03217 	ldw	r3,200(sp)
 40231ec:	d8c02b15 	stw	r3,172(sp)
 40231f0:	003e0206 	br	40229fc <_gp+0xfffe8298>
 40231f4:	df0022c4 	addi	fp,sp,139
 40231f8:	dc002a15 	stw	r16,168(sp)
 40231fc:	4027883a 	mov	r19,r8
 4023200:	e021883a 	mov	r16,fp
 4023204:	b009883a 	mov	r4,r22
 4023208:	01400284 	movi	r5,10
 402320c:	4020c4c0 	call	4020c4c <__modsi3>
 4023210:	10800c04 	addi	r2,r2,48
 4023214:	843fffc4 	addi	r16,r16,-1
 4023218:	b009883a 	mov	r4,r22
 402321c:	01400284 	movi	r5,10
 4023220:	80800005 	stb	r2,0(r16)
 4023224:	4020bc80 	call	4020bc8 <__divsi3>
 4023228:	102d883a 	mov	r22,r2
 402322c:	00800244 	movi	r2,9
 4023230:	15bff416 	blt	r2,r22,4023204 <_gp+0xfffe8aa0>
 4023234:	9811883a 	mov	r8,r19
 4023238:	b0800c04 	addi	r2,r22,48
 402323c:	8027883a 	mov	r19,r16
 4023240:	997fffc4 	addi	r5,r19,-1
 4023244:	98bfffc5 	stb	r2,-1(r19)
 4023248:	dc002a17 	ldw	r16,168(sp)
 402324c:	2f006d2e 	bgeu	r5,fp,4023404 <___vfprintf_internal_r+0x22a4>
 4023250:	d9c02384 	addi	r7,sp,142
 4023254:	3ccfc83a 	sub	r7,r7,r19
 4023258:	d9002344 	addi	r4,sp,141
 402325c:	e1cf883a 	add	r7,fp,r7
 4023260:	00000106 	br	4023268 <___vfprintf_internal_r+0x2108>
 4023264:	28800003 	ldbu	r2,0(r5)
 4023268:	20800005 	stb	r2,0(r4)
 402326c:	21000044 	addi	r4,r4,1
 4023270:	29400044 	addi	r5,r5,1
 4023274:	393ffb1e 	bne	r7,r4,4023264 <_gp+0xfffe8b00>
 4023278:	d8802304 	addi	r2,sp,140
 402327c:	14c5c83a 	sub	r2,r2,r19
 4023280:	d8c02344 	addi	r3,sp,141
 4023284:	1885883a 	add	r2,r3,r2
 4023288:	003f7006 	br	402304c <_gp+0xfffe88e8>
 402328c:	0005883a 	mov	r2,zero
 4023290:	003f0f06 	br	4022ed0 <_gp+0xfffe876c>
 4023294:	d8c03217 	ldw	r3,200(sp)
 4023298:	18c00044 	addi	r3,r3,1
 402329c:	d8c02b15 	stw	r3,172(sp)
 40232a0:	1805883a 	mov	r2,r3
 40232a4:	183fb20e 	bge	r3,zero,4023170 <_gp+0xfffe8a0c>
 40232a8:	0005883a 	mov	r2,zero
 40232ac:	003fb006 	br	4023170 <_gp+0xfffe8a0c>
 40232b0:	d9003617 	ldw	r4,216(sp)
 40232b4:	000d883a 	mov	r6,zero
 40232b8:	000f883a 	mov	r7,zero
 40232bc:	980b883a 	mov	r5,r19
 40232c0:	d8c03c15 	stw	r3,240(sp)
 40232c4:	da003d15 	stw	r8,244(sp)
 40232c8:	402c7f00 	call	402c7f0 <__eqdf2>
 40232cc:	d8c03c17 	ldw	r3,240(sp)
 40232d0:	da003d17 	ldw	r8,244(sp)
 40232d4:	103f9826 	beq	r2,zero,4023138 <_gp+0xfffe89d4>
 40232d8:	00800044 	movi	r2,1
 40232dc:	10c7c83a 	sub	r3,r2,r3
 40232e0:	d8c02615 	stw	r3,152(sp)
 40232e4:	003f9506 	br	402313c <_gp+0xfffe89d8>
 40232e8:	d9002a17 	ldw	r4,168(sp)
 40232ec:	d8c03217 	ldw	r3,200(sp)
 40232f0:	20800044 	addi	r2,r4,1
 40232f4:	1885883a 	add	r2,r3,r2
 40232f8:	d8802b15 	stw	r2,172(sp)
 40232fc:	103dbf0e 	bge	r2,zero,40229fc <_gp+0xfffe8298>
 4023300:	0005883a 	mov	r2,zero
 4023304:	003dbd06 	br	40229fc <_gp+0xfffe8298>
 4023308:	2000201e 	bne	r4,zero,402338c <___vfprintf_internal_r+0x222c>
 402330c:	9480004c 	andi	r18,r18,1
 4023310:	90001e1e 	bne	r18,zero,402338c <___vfprintf_internal_r+0x222c>
 4023314:	00800044 	movi	r2,1
 4023318:	d8802b15 	stw	r2,172(sp)
 402331c:	003db706 	br	40229fc <_gp+0xfffe8298>
 4023320:	00800b44 	movi	r2,45
 4023324:	05adc83a 	sub	r22,zero,r22
 4023328:	d8802305 	stb	r2,140(sp)
 402332c:	003f3f06 	br	402302c <_gp+0xfffe88c8>
 4023330:	0005883a 	mov	r2,zero
 4023334:	003f5206 	br	4023080 <_gp+0xfffe891c>
 4023338:	90a4703a 	and	r18,r18,r2
 402333c:	903f4e26 	beq	r18,zero,4023078 <_gp+0xfffe8914>
 4023340:	003f4a06 	br	402306c <_gp+0xfffe8908>
 4023344:	00800084 	movi	r2,2
 4023348:	10c5c83a 	sub	r2,r2,r3
 402334c:	003f8406 	br	4023160 <_gp+0xfffe89fc>
 4023350:	d9402e17 	ldw	r5,184(sp)
 4023354:	d9002e17 	ldw	r4,184(sp)
 4023358:	ac400043 	ldbu	r17,1(r21)
 402335c:	29400017 	ldw	r5,0(r5)
 4023360:	20800104 	addi	r2,r4,4
 4023364:	d8802e15 	stw	r2,184(sp)
 4023368:	d9402a15 	stw	r5,168(sp)
 402336c:	182b883a 	mov	r21,r3
 4023370:	283e7b0e 	bge	r5,zero,4022d60 <_gp+0xfffe85fc>
 4023374:	8c403fcc 	andi	r17,r17,255
 4023378:	017fffc4 	movi	r5,-1
 402337c:	8c40201c 	xori	r17,r17,128
 4023380:	d9402a15 	stw	r5,168(sp)
 4023384:	8c7fe004 	addi	r17,r17,-128
 4023388:	0037d706 	br	40212e8 <_gp+0xfffe6b84>
 402338c:	d8c02a17 	ldw	r3,168(sp)
 4023390:	18c00084 	addi	r3,r3,2
 4023394:	d8c02b15 	stw	r3,172(sp)
 4023398:	1805883a 	mov	r2,r3
 402339c:	183d970e 	bge	r3,zero,40229fc <_gp+0xfffe8298>
 40233a0:	003fd706 	br	4023300 <_gp+0xfffe8b9c>
 40233a4:	0005883a 	mov	r2,zero
 40233a8:	003f8f06 	br	40231e8 <_gp+0xfffe8a84>
 40233ac:	9080004c 	andi	r2,r18,1
 40233b0:	103f821e 	bne	r2,zero,40231bc <_gp+0xfffe8a58>
 40233b4:	d8802117 	ldw	r2,132(sp)
 40233b8:	1405c83a 	sub	r2,r2,r16
 40233bc:	d8803315 	stw	r2,204(sp)
 40233c0:	b47ef426 	beq	r22,r17,4022f94 <_gp+0xfffe8830>
 40233c4:	dd802617 	ldw	r22,152(sp)
 40233c8:	003f1206 	br	4023014 <_gp+0xfffe88b0>
 40233cc:	d8c02b03 	ldbu	r3,172(sp)
 40233d0:	d8c02785 	stb	r3,158(sp)
 40233d4:	0038df06 	br	4021754 <_gp+0xfffe6ff0>
 40233d8:	d8c02b03 	ldbu	r3,172(sp)
 40233dc:	d8c02785 	stb	r3,158(sp)
 40233e0:	0038aa06 	br	402168c <_gp+0xfffe6f28>
 40233e4:	d8c02b03 	ldbu	r3,172(sp)
 40233e8:	d8c02785 	stb	r3,158(sp)
 40233ec:	003a4306 	br	4021cfc <_gp+0xfffe7598>
 40233f0:	d8c02b03 	ldbu	r3,172(sp)
 40233f4:	d8c02785 	stb	r3,158(sp)
 40233f8:	003af506 	br	4021fd0 <_gp+0xfffe786c>
 40233fc:	0005883a 	mov	r2,zero
 4023400:	003d7b06 	br	40229f0 <_gp+0xfffe828c>
 4023404:	d8802344 	addi	r2,sp,141
 4023408:	003f1006 	br	402304c <_gp+0xfffe88e8>
 402340c:	d8c02b03 	ldbu	r3,172(sp)
 4023410:	d8c02785 	stb	r3,158(sp)
 4023414:	0038fd06 	br	402180c <_gp+0xfffe70a8>
 4023418:	d8c02b03 	ldbu	r3,172(sp)
 402341c:	d8c02785 	stb	r3,158(sp)
 4023420:	003a9706 	br	4021e80 <_gp+0xfffe771c>
 4023424:	d8c02b03 	ldbu	r3,172(sp)
 4023428:	d8c02785 	stb	r3,158(sp)
 402342c:	003a1806 	br	4021c90 <_gp+0xfffe752c>
 4023430:	d8c02b03 	ldbu	r3,172(sp)
 4023434:	d8c02785 	stb	r3,158(sp)
 4023438:	003abe06 	br	4021f34 <_gp+0xfffe77d0>

0402343c <__vfprintf_internal>:
 402343c:	008100f4 	movhi	r2,1027
 4023440:	1089da04 	addi	r2,r2,10088
 4023444:	300f883a 	mov	r7,r6
 4023448:	280d883a 	mov	r6,r5
 402344c:	200b883a 	mov	r5,r4
 4023450:	11000017 	ldw	r4,0(r2)
 4023454:	40211601 	jmpi	4021160 <___vfprintf_internal_r>

04023458 <__sbprintf>:
 4023458:	2880030b 	ldhu	r2,12(r5)
 402345c:	2ac01917 	ldw	r11,100(r5)
 4023460:	2a80038b 	ldhu	r10,14(r5)
 4023464:	2a400717 	ldw	r9,28(r5)
 4023468:	2a000917 	ldw	r8,36(r5)
 402346c:	defee204 	addi	sp,sp,-1144
 4023470:	00c10004 	movi	r3,1024
 4023474:	dc011a15 	stw	r16,1128(sp)
 4023478:	10bfff4c 	andi	r2,r2,65533
 402347c:	2821883a 	mov	r16,r5
 4023480:	d8cb883a 	add	r5,sp,r3
 4023484:	dc811c15 	stw	r18,1136(sp)
 4023488:	dc411b15 	stw	r17,1132(sp)
 402348c:	dfc11d15 	stw	ra,1140(sp)
 4023490:	2025883a 	mov	r18,r4
 4023494:	d881030d 	sth	r2,1036(sp)
 4023498:	dac11915 	stw	r11,1124(sp)
 402349c:	da81038d 	sth	r10,1038(sp)
 40234a0:	da410715 	stw	r9,1052(sp)
 40234a4:	da010915 	stw	r8,1060(sp)
 40234a8:	dec10015 	stw	sp,1024(sp)
 40234ac:	dec10415 	stw	sp,1040(sp)
 40234b0:	d8c10215 	stw	r3,1032(sp)
 40234b4:	d8c10515 	stw	r3,1044(sp)
 40234b8:	d8010615 	stw	zero,1048(sp)
 40234bc:	40211600 	call	4021160 <___vfprintf_internal_r>
 40234c0:	1023883a 	mov	r17,r2
 40234c4:	10000416 	blt	r2,zero,40234d8 <__sbprintf+0x80>
 40234c8:	d9410004 	addi	r5,sp,1024
 40234cc:	9009883a 	mov	r4,r18
 40234d0:	40251340 	call	4025134 <_fflush_r>
 40234d4:	10000d1e 	bne	r2,zero,402350c <__sbprintf+0xb4>
 40234d8:	d881030b 	ldhu	r2,1036(sp)
 40234dc:	1080100c 	andi	r2,r2,64
 40234e0:	10000326 	beq	r2,zero,40234f0 <__sbprintf+0x98>
 40234e4:	8080030b 	ldhu	r2,12(r16)
 40234e8:	10801014 	ori	r2,r2,64
 40234ec:	8080030d 	sth	r2,12(r16)
 40234f0:	8805883a 	mov	r2,r17
 40234f4:	dfc11d17 	ldw	ra,1140(sp)
 40234f8:	dc811c17 	ldw	r18,1136(sp)
 40234fc:	dc411b17 	ldw	r17,1132(sp)
 4023500:	dc011a17 	ldw	r16,1128(sp)
 4023504:	dec11e04 	addi	sp,sp,1144
 4023508:	f800283a 	ret
 402350c:	047fffc4 	movi	r17,-1
 4023510:	003ff106 	br	40234d8 <_gp+0xfffe8d74>

04023514 <__swsetup_r>:
 4023514:	008100f4 	movhi	r2,1027
 4023518:	defffd04 	addi	sp,sp,-12
 402351c:	1089da04 	addi	r2,r2,10088
 4023520:	dc400115 	stw	r17,4(sp)
 4023524:	2023883a 	mov	r17,r4
 4023528:	11000017 	ldw	r4,0(r2)
 402352c:	dc000015 	stw	r16,0(sp)
 4023530:	dfc00215 	stw	ra,8(sp)
 4023534:	2821883a 	mov	r16,r5
 4023538:	20000226 	beq	r4,zero,4023544 <__swsetup_r+0x30>
 402353c:	20800e17 	ldw	r2,56(r4)
 4023540:	10003126 	beq	r2,zero,4023608 <__swsetup_r+0xf4>
 4023544:	8080030b 	ldhu	r2,12(r16)
 4023548:	10c0020c 	andi	r3,r2,8
 402354c:	1009883a 	mov	r4,r2
 4023550:	18000f26 	beq	r3,zero,4023590 <__swsetup_r+0x7c>
 4023554:	80c00417 	ldw	r3,16(r16)
 4023558:	18001526 	beq	r3,zero,40235b0 <__swsetup_r+0x9c>
 402355c:	1100004c 	andi	r4,r2,1
 4023560:	20001c1e 	bne	r4,zero,40235d4 <__swsetup_r+0xc0>
 4023564:	1080008c 	andi	r2,r2,2
 4023568:	1000291e 	bne	r2,zero,4023610 <__swsetup_r+0xfc>
 402356c:	80800517 	ldw	r2,20(r16)
 4023570:	80800215 	stw	r2,8(r16)
 4023574:	18001c26 	beq	r3,zero,40235e8 <__swsetup_r+0xd4>
 4023578:	0005883a 	mov	r2,zero
 402357c:	dfc00217 	ldw	ra,8(sp)
 4023580:	dc400117 	ldw	r17,4(sp)
 4023584:	dc000017 	ldw	r16,0(sp)
 4023588:	dec00304 	addi	sp,sp,12
 402358c:	f800283a 	ret
 4023590:	2080040c 	andi	r2,r4,16
 4023594:	10002e26 	beq	r2,zero,4023650 <__swsetup_r+0x13c>
 4023598:	2080010c 	andi	r2,r4,4
 402359c:	10001e1e 	bne	r2,zero,4023618 <__swsetup_r+0x104>
 40235a0:	80c00417 	ldw	r3,16(r16)
 40235a4:	20800214 	ori	r2,r4,8
 40235a8:	8080030d 	sth	r2,12(r16)
 40235ac:	183feb1e 	bne	r3,zero,402355c <_gp+0xfffe8df8>
 40235b0:	1100a00c 	andi	r4,r2,640
 40235b4:	01408004 	movi	r5,512
 40235b8:	217fe826 	beq	r4,r5,402355c <_gp+0xfffe8df8>
 40235bc:	800b883a 	mov	r5,r16
 40235c0:	8809883a 	mov	r4,r17
 40235c4:	40260d00 	call	40260d0 <__smakebuf_r>
 40235c8:	8080030b 	ldhu	r2,12(r16)
 40235cc:	80c00417 	ldw	r3,16(r16)
 40235d0:	003fe206 	br	402355c <_gp+0xfffe8df8>
 40235d4:	80800517 	ldw	r2,20(r16)
 40235d8:	80000215 	stw	zero,8(r16)
 40235dc:	0085c83a 	sub	r2,zero,r2
 40235e0:	80800615 	stw	r2,24(r16)
 40235e4:	183fe41e 	bne	r3,zero,4023578 <_gp+0xfffe8e14>
 40235e8:	80c0030b 	ldhu	r3,12(r16)
 40235ec:	0005883a 	mov	r2,zero
 40235f0:	1900200c 	andi	r4,r3,128
 40235f4:	203fe126 	beq	r4,zero,402357c <_gp+0xfffe8e18>
 40235f8:	18c01014 	ori	r3,r3,64
 40235fc:	80c0030d 	sth	r3,12(r16)
 4023600:	00bfffc4 	movi	r2,-1
 4023604:	003fdd06 	br	402357c <_gp+0xfffe8e18>
 4023608:	40255200 	call	4025520 <__sinit>
 402360c:	003fcd06 	br	4023544 <_gp+0xfffe8de0>
 4023610:	0005883a 	mov	r2,zero
 4023614:	003fd606 	br	4023570 <_gp+0xfffe8e0c>
 4023618:	81400c17 	ldw	r5,48(r16)
 402361c:	28000626 	beq	r5,zero,4023638 <__swsetup_r+0x124>
 4023620:	80801004 	addi	r2,r16,64
 4023624:	28800326 	beq	r5,r2,4023634 <__swsetup_r+0x120>
 4023628:	8809883a 	mov	r4,r17
 402362c:	40256940 	call	4025694 <_free_r>
 4023630:	8100030b 	ldhu	r4,12(r16)
 4023634:	80000c15 	stw	zero,48(r16)
 4023638:	80c00417 	ldw	r3,16(r16)
 402363c:	00bff6c4 	movi	r2,-37
 4023640:	1108703a 	and	r4,r2,r4
 4023644:	80000115 	stw	zero,4(r16)
 4023648:	80c00015 	stw	r3,0(r16)
 402364c:	003fd506 	br	40235a4 <_gp+0xfffe8e40>
 4023650:	00800244 	movi	r2,9
 4023654:	88800015 	stw	r2,0(r17)
 4023658:	20801014 	ori	r2,r4,64
 402365c:	8080030d 	sth	r2,12(r16)
 4023660:	00bfffc4 	movi	r2,-1
 4023664:	003fc506 	br	402357c <_gp+0xfffe8e18>

04023668 <quorem>:
 4023668:	defff204 	addi	sp,sp,-56
 402366c:	ddc00b15 	stw	r23,44(sp)
 4023670:	20800417 	ldw	r2,16(r4)
 4023674:	2dc00417 	ldw	r23,16(r5)
 4023678:	dfc00d15 	stw	ra,52(sp)
 402367c:	df000c15 	stw	fp,48(sp)
 4023680:	dd800a15 	stw	r22,40(sp)
 4023684:	dd400915 	stw	r21,36(sp)
 4023688:	dd000815 	stw	r20,32(sp)
 402368c:	dcc00715 	stw	r19,28(sp)
 4023690:	dc800615 	stw	r18,24(sp)
 4023694:	dc400515 	stw	r17,20(sp)
 4023698:	dc000415 	stw	r16,16(sp)
 402369c:	15c07a16 	blt	r2,r23,4023888 <quorem+0x220>
 40236a0:	bdffffc4 	addi	r23,r23,-1
 40236a4:	bde9883a 	add	r20,r23,r23
 40236a8:	28c00504 	addi	r3,r5,20
 40236ac:	a529883a 	add	r20,r20,r20
 40236b0:	1d39883a 	add	fp,r3,r20
 40236b4:	24c00504 	addi	r19,r4,20
 40236b8:	d9400215 	stw	r5,8(sp)
 40236bc:	9d29883a 	add	r20,r19,r20
 40236c0:	e1400017 	ldw	r5,0(fp)
 40236c4:	d9000015 	stw	r4,0(sp)
 40236c8:	a1000017 	ldw	r4,0(r20)
 40236cc:	29400044 	addi	r5,r5,1
 40236d0:	d8c00115 	stw	r3,4(sp)
 40236d4:	dd000315 	stw	r20,12(sp)
 40236d8:	4020cc00 	call	4020cc0 <__udivsi3>
 40236dc:	1025883a 	mov	r18,r2
 40236e0:	10003026 	beq	r2,zero,40237a4 <quorem+0x13c>
 40236e4:	dc400117 	ldw	r17,4(sp)
 40236e8:	9829883a 	mov	r20,r19
 40236ec:	002d883a 	mov	r22,zero
 40236f0:	0021883a 	mov	r16,zero
 40236f4:	8d400017 	ldw	r21,0(r17)
 40236f8:	900b883a 	mov	r5,r18
 40236fc:	8c400104 	addi	r17,r17,4
 4023700:	a93fffcc 	andi	r4,r21,65535
 4023704:	4020d7c0 	call	4020d7c <__mulsi3>
 4023708:	a808d43a 	srli	r4,r21,16
 402370c:	900b883a 	mov	r5,r18
 4023710:	15ad883a 	add	r22,r2,r22
 4023714:	4020d7c0 	call	4020d7c <__mulsi3>
 4023718:	a1000017 	ldw	r4,0(r20)
 402371c:	b00cd43a 	srli	r6,r22,16
 4023720:	b0ffffcc 	andi	r3,r22,65535
 4023724:	217fffcc 	andi	r5,r4,65535
 4023728:	2c21883a 	add	r16,r5,r16
 402372c:	80c7c83a 	sub	r3,r16,r3
 4023730:	2008d43a 	srli	r4,r4,16
 4023734:	1185883a 	add	r2,r2,r6
 4023738:	1821d43a 	srai	r16,r3,16
 402373c:	117fffcc 	andi	r5,r2,65535
 4023740:	2149c83a 	sub	r4,r4,r5
 4023744:	2421883a 	add	r16,r4,r16
 4023748:	8008943a 	slli	r4,r16,16
 402374c:	18ffffcc 	andi	r3,r3,65535
 4023750:	102cd43a 	srli	r22,r2,16
 4023754:	20c8b03a 	or	r4,r4,r3
 4023758:	a1000015 	stw	r4,0(r20)
 402375c:	8021d43a 	srai	r16,r16,16
 4023760:	a5000104 	addi	r20,r20,4
 4023764:	e47fe32e 	bgeu	fp,r17,40236f4 <_gp+0xfffe8f90>
 4023768:	d8c00317 	ldw	r3,12(sp)
 402376c:	18800017 	ldw	r2,0(r3)
 4023770:	10000c1e 	bne	r2,zero,40237a4 <quorem+0x13c>
 4023774:	18bfff04 	addi	r2,r3,-4
 4023778:	9880082e 	bgeu	r19,r2,402379c <quorem+0x134>
 402377c:	18ffff17 	ldw	r3,-4(r3)
 4023780:	18000326 	beq	r3,zero,4023790 <quorem+0x128>
 4023784:	00000506 	br	402379c <quorem+0x134>
 4023788:	10c00017 	ldw	r3,0(r2)
 402378c:	1800031e 	bne	r3,zero,402379c <quorem+0x134>
 4023790:	10bfff04 	addi	r2,r2,-4
 4023794:	bdffffc4 	addi	r23,r23,-1
 4023798:	98bffb36 	bltu	r19,r2,4023788 <_gp+0xfffe9024>
 402379c:	d8c00017 	ldw	r3,0(sp)
 40237a0:	1dc00415 	stw	r23,16(r3)
 40237a4:	d9400217 	ldw	r5,8(sp)
 40237a8:	d9000017 	ldw	r4,0(sp)
 40237ac:	40277840 	call	4027784 <__mcmp>
 40237b0:	10002816 	blt	r2,zero,4023854 <quorem+0x1ec>
 40237b4:	dc400117 	ldw	r17,4(sp)
 40237b8:	94800044 	addi	r18,r18,1
 40237bc:	980d883a 	mov	r6,r19
 40237c0:	0007883a 	mov	r3,zero
 40237c4:	31000017 	ldw	r4,0(r6)
 40237c8:	89400017 	ldw	r5,0(r17)
 40237cc:	31800104 	addi	r6,r6,4
 40237d0:	20bfffcc 	andi	r2,r4,65535
 40237d4:	10c7883a 	add	r3,r2,r3
 40237d8:	28bfffcc 	andi	r2,r5,65535
 40237dc:	1885c83a 	sub	r2,r3,r2
 40237e0:	280ad43a 	srli	r5,r5,16
 40237e4:	2008d43a 	srli	r4,r4,16
 40237e8:	1007d43a 	srai	r3,r2,16
 40237ec:	10bfffcc 	andi	r2,r2,65535
 40237f0:	2149c83a 	sub	r4,r4,r5
 40237f4:	20c9883a 	add	r4,r4,r3
 40237f8:	200a943a 	slli	r5,r4,16
 40237fc:	8c400104 	addi	r17,r17,4
 4023800:	2007d43a 	srai	r3,r4,16
 4023804:	2884b03a 	or	r2,r5,r2
 4023808:	30bfff15 	stw	r2,-4(r6)
 402380c:	e47fed2e 	bgeu	fp,r17,40237c4 <_gp+0xfffe9060>
 4023810:	bdc5883a 	add	r2,r23,r23
 4023814:	1085883a 	add	r2,r2,r2
 4023818:	9887883a 	add	r3,r19,r2
 402381c:	18800017 	ldw	r2,0(r3)
 4023820:	10000c1e 	bne	r2,zero,4023854 <quorem+0x1ec>
 4023824:	18bfff04 	addi	r2,r3,-4
 4023828:	9880082e 	bgeu	r19,r2,402384c <quorem+0x1e4>
 402382c:	18ffff17 	ldw	r3,-4(r3)
 4023830:	18000326 	beq	r3,zero,4023840 <quorem+0x1d8>
 4023834:	00000506 	br	402384c <quorem+0x1e4>
 4023838:	10c00017 	ldw	r3,0(r2)
 402383c:	1800031e 	bne	r3,zero,402384c <quorem+0x1e4>
 4023840:	10bfff04 	addi	r2,r2,-4
 4023844:	bdffffc4 	addi	r23,r23,-1
 4023848:	98bffb36 	bltu	r19,r2,4023838 <_gp+0xfffe90d4>
 402384c:	d8c00017 	ldw	r3,0(sp)
 4023850:	1dc00415 	stw	r23,16(r3)
 4023854:	9005883a 	mov	r2,r18
 4023858:	dfc00d17 	ldw	ra,52(sp)
 402385c:	df000c17 	ldw	fp,48(sp)
 4023860:	ddc00b17 	ldw	r23,44(sp)
 4023864:	dd800a17 	ldw	r22,40(sp)
 4023868:	dd400917 	ldw	r21,36(sp)
 402386c:	dd000817 	ldw	r20,32(sp)
 4023870:	dcc00717 	ldw	r19,28(sp)
 4023874:	dc800617 	ldw	r18,24(sp)
 4023878:	dc400517 	ldw	r17,20(sp)
 402387c:	dc000417 	ldw	r16,16(sp)
 4023880:	dec00e04 	addi	sp,sp,56
 4023884:	f800283a 	ret
 4023888:	0005883a 	mov	r2,zero
 402388c:	003ff206 	br	4023858 <_gp+0xfffe90f4>

04023890 <_dtoa_r>:
 4023890:	20801017 	ldw	r2,64(r4)
 4023894:	deffde04 	addi	sp,sp,-136
 4023898:	df002015 	stw	fp,128(sp)
 402389c:	dcc01b15 	stw	r19,108(sp)
 40238a0:	dc801a15 	stw	r18,104(sp)
 40238a4:	dc401915 	stw	r17,100(sp)
 40238a8:	dc001815 	stw	r16,96(sp)
 40238ac:	dfc02115 	stw	ra,132(sp)
 40238b0:	ddc01f15 	stw	r23,124(sp)
 40238b4:	dd801e15 	stw	r22,120(sp)
 40238b8:	dd401d15 	stw	r21,116(sp)
 40238bc:	dd001c15 	stw	r20,112(sp)
 40238c0:	d9c00315 	stw	r7,12(sp)
 40238c4:	2039883a 	mov	fp,r4
 40238c8:	3023883a 	mov	r17,r6
 40238cc:	2825883a 	mov	r18,r5
 40238d0:	dc002417 	ldw	r16,144(sp)
 40238d4:	3027883a 	mov	r19,r6
 40238d8:	10000826 	beq	r2,zero,40238fc <_dtoa_r+0x6c>
 40238dc:	21801117 	ldw	r6,68(r4)
 40238e0:	00c00044 	movi	r3,1
 40238e4:	100b883a 	mov	r5,r2
 40238e8:	1986983a 	sll	r3,r3,r6
 40238ec:	11800115 	stw	r6,4(r2)
 40238f0:	10c00215 	stw	r3,8(r2)
 40238f4:	4026ea80 	call	4026ea8 <_Bfree>
 40238f8:	e0001015 	stw	zero,64(fp)
 40238fc:	88002e16 	blt	r17,zero,40239b8 <_dtoa_r+0x128>
 4023900:	80000015 	stw	zero,0(r16)
 4023904:	889ffc2c 	andhi	r2,r17,32752
 4023908:	00dffc34 	movhi	r3,32752
 402390c:	10c01c26 	beq	r2,r3,4023980 <_dtoa_r+0xf0>
 4023910:	000d883a 	mov	r6,zero
 4023914:	000f883a 	mov	r7,zero
 4023918:	9009883a 	mov	r4,r18
 402391c:	980b883a 	mov	r5,r19
 4023920:	402c7f00 	call	402c7f0 <__eqdf2>
 4023924:	10002b1e 	bne	r2,zero,40239d4 <_dtoa_r+0x144>
 4023928:	d9c02317 	ldw	r7,140(sp)
 402392c:	00800044 	movi	r2,1
 4023930:	38800015 	stw	r2,0(r7)
 4023934:	d8802517 	ldw	r2,148(sp)
 4023938:	10019e26 	beq	r2,zero,4023fb4 <_dtoa_r+0x724>
 402393c:	d8c02517 	ldw	r3,148(sp)
 4023940:	008100f4 	movhi	r2,1027
 4023944:	10828144 	addi	r2,r2,2565
 4023948:	18800015 	stw	r2,0(r3)
 402394c:	10bfffc4 	addi	r2,r2,-1
 4023950:	dfc02117 	ldw	ra,132(sp)
 4023954:	df002017 	ldw	fp,128(sp)
 4023958:	ddc01f17 	ldw	r23,124(sp)
 402395c:	dd801e17 	ldw	r22,120(sp)
 4023960:	dd401d17 	ldw	r21,116(sp)
 4023964:	dd001c17 	ldw	r20,112(sp)
 4023968:	dcc01b17 	ldw	r19,108(sp)
 402396c:	dc801a17 	ldw	r18,104(sp)
 4023970:	dc401917 	ldw	r17,100(sp)
 4023974:	dc001817 	ldw	r16,96(sp)
 4023978:	dec02204 	addi	sp,sp,136
 402397c:	f800283a 	ret
 4023980:	d8c02317 	ldw	r3,140(sp)
 4023984:	0089c3c4 	movi	r2,9999
 4023988:	18800015 	stw	r2,0(r3)
 402398c:	90017726 	beq	r18,zero,4023f6c <_dtoa_r+0x6dc>
 4023990:	008100f4 	movhi	r2,1027
 4023994:	10828d04 	addi	r2,r2,2612
 4023998:	d9002517 	ldw	r4,148(sp)
 402399c:	203fec26 	beq	r4,zero,4023950 <_gp+0xfffe91ec>
 40239a0:	10c000c7 	ldb	r3,3(r2)
 40239a4:	1801781e 	bne	r3,zero,4023f88 <_dtoa_r+0x6f8>
 40239a8:	10c000c4 	addi	r3,r2,3
 40239ac:	d9802517 	ldw	r6,148(sp)
 40239b0:	30c00015 	stw	r3,0(r6)
 40239b4:	003fe606 	br	4023950 <_gp+0xfffe91ec>
 40239b8:	04e00034 	movhi	r19,32768
 40239bc:	9cffffc4 	addi	r19,r19,-1
 40239c0:	00800044 	movi	r2,1
 40239c4:	8ce6703a 	and	r19,r17,r19
 40239c8:	80800015 	stw	r2,0(r16)
 40239cc:	9823883a 	mov	r17,r19
 40239d0:	003fcc06 	br	4023904 <_gp+0xfffe91a0>
 40239d4:	d8800204 	addi	r2,sp,8
 40239d8:	d8800015 	stw	r2,0(sp)
 40239dc:	d9c00104 	addi	r7,sp,4
 40239e0:	900b883a 	mov	r5,r18
 40239e4:	980d883a 	mov	r6,r19
 40239e8:	e009883a 	mov	r4,fp
 40239ec:	8820d53a 	srli	r16,r17,20
 40239f0:	4027b500 	call	4027b50 <__d2b>
 40239f4:	d8800915 	stw	r2,36(sp)
 40239f8:	8001651e 	bne	r16,zero,4023f90 <_dtoa_r+0x700>
 40239fc:	dd800217 	ldw	r22,8(sp)
 4023a00:	dc000117 	ldw	r16,4(sp)
 4023a04:	00800804 	movi	r2,32
 4023a08:	b421883a 	add	r16,r22,r16
 4023a0c:	80c10c84 	addi	r3,r16,1074
 4023a10:	10c2d10e 	bge	r2,r3,4024558 <_dtoa_r+0xcc8>
 4023a14:	00801004 	movi	r2,64
 4023a18:	81010484 	addi	r4,r16,1042
 4023a1c:	10c7c83a 	sub	r3,r2,r3
 4023a20:	9108d83a 	srl	r4,r18,r4
 4023a24:	88e2983a 	sll	r17,r17,r3
 4023a28:	2448b03a 	or	r4,r4,r17
 4023a2c:	402dd0c0 	call	402dd0c <__floatunsidf>
 4023a30:	017f8434 	movhi	r5,65040
 4023a34:	01800044 	movi	r6,1
 4023a38:	1009883a 	mov	r4,r2
 4023a3c:	194b883a 	add	r5,r3,r5
 4023a40:	843fffc4 	addi	r16,r16,-1
 4023a44:	d9801115 	stw	r6,68(sp)
 4023a48:	000d883a 	mov	r6,zero
 4023a4c:	01cffe34 	movhi	r7,16376
 4023a50:	402d2b40 	call	402d2b4 <__subdf3>
 4023a54:	0198dbf4 	movhi	r6,25455
 4023a58:	01cff4f4 	movhi	r7,16339
 4023a5c:	3190d844 	addi	r6,r6,17249
 4023a60:	39e1e9c4 	addi	r7,r7,-30809
 4023a64:	1009883a 	mov	r4,r2
 4023a68:	180b883a 	mov	r5,r3
 4023a6c:	402ca480 	call	402ca48 <__muldf3>
 4023a70:	01a2d874 	movhi	r6,35681
 4023a74:	01cff1f4 	movhi	r7,16327
 4023a78:	31b22cc4 	addi	r6,r6,-14157
 4023a7c:	39e28a04 	addi	r7,r7,-30168
 4023a80:	180b883a 	mov	r5,r3
 4023a84:	1009883a 	mov	r4,r2
 4023a88:	402b5740 	call	402b574 <__adddf3>
 4023a8c:	8009883a 	mov	r4,r16
 4023a90:	1029883a 	mov	r20,r2
 4023a94:	1823883a 	mov	r17,r3
 4023a98:	402dc300 	call	402dc30 <__floatsidf>
 4023a9c:	019427f4 	movhi	r6,20639
 4023aa0:	01cff4f4 	movhi	r7,16339
 4023aa4:	319e7ec4 	addi	r6,r6,31227
 4023aa8:	39d104c4 	addi	r7,r7,17427
 4023aac:	1009883a 	mov	r4,r2
 4023ab0:	180b883a 	mov	r5,r3
 4023ab4:	402ca480 	call	402ca48 <__muldf3>
 4023ab8:	100d883a 	mov	r6,r2
 4023abc:	180f883a 	mov	r7,r3
 4023ac0:	a009883a 	mov	r4,r20
 4023ac4:	880b883a 	mov	r5,r17
 4023ac8:	402b5740 	call	402b574 <__adddf3>
 4023acc:	1009883a 	mov	r4,r2
 4023ad0:	180b883a 	mov	r5,r3
 4023ad4:	1029883a 	mov	r20,r2
 4023ad8:	1823883a 	mov	r17,r3
 4023adc:	402dbb00 	call	402dbb0 <__fixdfsi>
 4023ae0:	000d883a 	mov	r6,zero
 4023ae4:	000f883a 	mov	r7,zero
 4023ae8:	a009883a 	mov	r4,r20
 4023aec:	880b883a 	mov	r5,r17
 4023af0:	d8800515 	stw	r2,20(sp)
 4023af4:	402c9540 	call	402c954 <__ledf2>
 4023af8:	10028716 	blt	r2,zero,4024518 <_dtoa_r+0xc88>
 4023afc:	d8c00517 	ldw	r3,20(sp)
 4023b00:	00800584 	movi	r2,22
 4023b04:	10c27536 	bltu	r2,r3,40244dc <_dtoa_r+0xc4c>
 4023b08:	180490fa 	slli	r2,r3,3
 4023b0c:	00c100f4 	movhi	r3,1027
 4023b10:	18c2a904 	addi	r3,r3,2724
 4023b14:	1885883a 	add	r2,r3,r2
 4023b18:	11000017 	ldw	r4,0(r2)
 4023b1c:	11400117 	ldw	r5,4(r2)
 4023b20:	900d883a 	mov	r6,r18
 4023b24:	980f883a 	mov	r7,r19
 4023b28:	402c8780 	call	402c878 <__gedf2>
 4023b2c:	00828d0e 	bge	zero,r2,4024564 <_dtoa_r+0xcd4>
 4023b30:	d9000517 	ldw	r4,20(sp)
 4023b34:	d8000e15 	stw	zero,56(sp)
 4023b38:	213fffc4 	addi	r4,r4,-1
 4023b3c:	d9000515 	stw	r4,20(sp)
 4023b40:	b42dc83a 	sub	r22,r22,r16
 4023b44:	b5bfffc4 	addi	r22,r22,-1
 4023b48:	b0026f16 	blt	r22,zero,4024508 <_dtoa_r+0xc78>
 4023b4c:	d8000815 	stw	zero,32(sp)
 4023b50:	d9c00517 	ldw	r7,20(sp)
 4023b54:	38026416 	blt	r7,zero,40244e8 <_dtoa_r+0xc58>
 4023b58:	b1ed883a 	add	r22,r22,r7
 4023b5c:	d9c00d15 	stw	r7,52(sp)
 4023b60:	d8000a15 	stw	zero,40(sp)
 4023b64:	d9800317 	ldw	r6,12(sp)
 4023b68:	00800244 	movi	r2,9
 4023b6c:	11811436 	bltu	r2,r6,4023fc0 <_dtoa_r+0x730>
 4023b70:	00800144 	movi	r2,5
 4023b74:	1184e10e 	bge	r2,r6,4024efc <_dtoa_r+0x166c>
 4023b78:	31bfff04 	addi	r6,r6,-4
 4023b7c:	d9800315 	stw	r6,12(sp)
 4023b80:	0023883a 	mov	r17,zero
 4023b84:	d9800317 	ldw	r6,12(sp)
 4023b88:	008000c4 	movi	r2,3
 4023b8c:	30836726 	beq	r6,r2,402492c <_dtoa_r+0x109c>
 4023b90:	1183410e 	bge	r2,r6,4024898 <_dtoa_r+0x1008>
 4023b94:	d9c00317 	ldw	r7,12(sp)
 4023b98:	00800104 	movi	r2,4
 4023b9c:	38827c26 	beq	r7,r2,4024590 <_dtoa_r+0xd00>
 4023ba0:	00800144 	movi	r2,5
 4023ba4:	3884c41e 	bne	r7,r2,4024eb8 <_dtoa_r+0x1628>
 4023ba8:	00800044 	movi	r2,1
 4023bac:	d8800b15 	stw	r2,44(sp)
 4023bb0:	d8c00517 	ldw	r3,20(sp)
 4023bb4:	d9002217 	ldw	r4,136(sp)
 4023bb8:	1907883a 	add	r3,r3,r4
 4023bbc:	19800044 	addi	r6,r3,1
 4023bc0:	d8c00c15 	stw	r3,48(sp)
 4023bc4:	d9800615 	stw	r6,24(sp)
 4023bc8:	0183a40e 	bge	zero,r6,4024a5c <_dtoa_r+0x11cc>
 4023bcc:	d9800617 	ldw	r6,24(sp)
 4023bd0:	3021883a 	mov	r16,r6
 4023bd4:	e0001115 	stw	zero,68(fp)
 4023bd8:	008005c4 	movi	r2,23
 4023bdc:	1184c92e 	bgeu	r2,r6,4024f04 <_dtoa_r+0x1674>
 4023be0:	00c00044 	movi	r3,1
 4023be4:	00800104 	movi	r2,4
 4023be8:	1085883a 	add	r2,r2,r2
 4023bec:	11000504 	addi	r4,r2,20
 4023bf0:	180b883a 	mov	r5,r3
 4023bf4:	18c00044 	addi	r3,r3,1
 4023bf8:	313ffb2e 	bgeu	r6,r4,4023be8 <_gp+0xfffe9484>
 4023bfc:	e1401115 	stw	r5,68(fp)
 4023c00:	e009883a 	mov	r4,fp
 4023c04:	4026e000 	call	4026e00 <_Balloc>
 4023c08:	d8800715 	stw	r2,28(sp)
 4023c0c:	e0801015 	stw	r2,64(fp)
 4023c10:	00800384 	movi	r2,14
 4023c14:	1400f736 	bltu	r2,r16,4023ff4 <_dtoa_r+0x764>
 4023c18:	8800f626 	beq	r17,zero,4023ff4 <_dtoa_r+0x764>
 4023c1c:	d9c00517 	ldw	r7,20(sp)
 4023c20:	01c39a0e 	bge	zero,r7,4024a8c <_dtoa_r+0x11fc>
 4023c24:	388003cc 	andi	r2,r7,15
 4023c28:	100490fa 	slli	r2,r2,3
 4023c2c:	382bd13a 	srai	r21,r7,4
 4023c30:	00c100f4 	movhi	r3,1027
 4023c34:	18c2a904 	addi	r3,r3,2724
 4023c38:	1885883a 	add	r2,r3,r2
 4023c3c:	a8c0040c 	andi	r3,r21,16
 4023c40:	12400017 	ldw	r9,0(r2)
 4023c44:	12000117 	ldw	r8,4(r2)
 4023c48:	18037926 	beq	r3,zero,4024a30 <_dtoa_r+0x11a0>
 4023c4c:	008100f4 	movhi	r2,1027
 4023c50:	10829f04 	addi	r2,r2,2684
 4023c54:	11800817 	ldw	r6,32(r2)
 4023c58:	11c00917 	ldw	r7,36(r2)
 4023c5c:	9009883a 	mov	r4,r18
 4023c60:	980b883a 	mov	r5,r19
 4023c64:	da001715 	stw	r8,92(sp)
 4023c68:	da401615 	stw	r9,88(sp)
 4023c6c:	402be200 	call	402be20 <__divdf3>
 4023c70:	da001717 	ldw	r8,92(sp)
 4023c74:	da401617 	ldw	r9,88(sp)
 4023c78:	ad4003cc 	andi	r21,r21,15
 4023c7c:	040000c4 	movi	r16,3
 4023c80:	1023883a 	mov	r17,r2
 4023c84:	1829883a 	mov	r20,r3
 4023c88:	a8001126 	beq	r21,zero,4023cd0 <_dtoa_r+0x440>
 4023c8c:	05c100f4 	movhi	r23,1027
 4023c90:	bdc29f04 	addi	r23,r23,2684
 4023c94:	4805883a 	mov	r2,r9
 4023c98:	4007883a 	mov	r3,r8
 4023c9c:	a980004c 	andi	r6,r21,1
 4023ca0:	1009883a 	mov	r4,r2
 4023ca4:	a82bd07a 	srai	r21,r21,1
 4023ca8:	180b883a 	mov	r5,r3
 4023cac:	30000426 	beq	r6,zero,4023cc0 <_dtoa_r+0x430>
 4023cb0:	b9800017 	ldw	r6,0(r23)
 4023cb4:	b9c00117 	ldw	r7,4(r23)
 4023cb8:	84000044 	addi	r16,r16,1
 4023cbc:	402ca480 	call	402ca48 <__muldf3>
 4023cc0:	bdc00204 	addi	r23,r23,8
 4023cc4:	a83ff51e 	bne	r21,zero,4023c9c <_gp+0xfffe9538>
 4023cc8:	1013883a 	mov	r9,r2
 4023ccc:	1811883a 	mov	r8,r3
 4023cd0:	480d883a 	mov	r6,r9
 4023cd4:	400f883a 	mov	r7,r8
 4023cd8:	8809883a 	mov	r4,r17
 4023cdc:	a00b883a 	mov	r5,r20
 4023ce0:	402be200 	call	402be20 <__divdf3>
 4023ce4:	d8800f15 	stw	r2,60(sp)
 4023ce8:	d8c01015 	stw	r3,64(sp)
 4023cec:	d8c00e17 	ldw	r3,56(sp)
 4023cf0:	18000626 	beq	r3,zero,4023d0c <_dtoa_r+0x47c>
 4023cf4:	d9000f17 	ldw	r4,60(sp)
 4023cf8:	d9401017 	ldw	r5,64(sp)
 4023cfc:	000d883a 	mov	r6,zero
 4023d00:	01cffc34 	movhi	r7,16368
 4023d04:	402c9540 	call	402c954 <__ledf2>
 4023d08:	10040b16 	blt	r2,zero,4024d38 <_dtoa_r+0x14a8>
 4023d0c:	8009883a 	mov	r4,r16
 4023d10:	402dc300 	call	402dc30 <__floatsidf>
 4023d14:	d9800f17 	ldw	r6,60(sp)
 4023d18:	d9c01017 	ldw	r7,64(sp)
 4023d1c:	1009883a 	mov	r4,r2
 4023d20:	180b883a 	mov	r5,r3
 4023d24:	402ca480 	call	402ca48 <__muldf3>
 4023d28:	000d883a 	mov	r6,zero
 4023d2c:	01d00734 	movhi	r7,16412
 4023d30:	1009883a 	mov	r4,r2
 4023d34:	180b883a 	mov	r5,r3
 4023d38:	402b5740 	call	402b574 <__adddf3>
 4023d3c:	1021883a 	mov	r16,r2
 4023d40:	d8800617 	ldw	r2,24(sp)
 4023d44:	047f3034 	movhi	r17,64704
 4023d48:	1c63883a 	add	r17,r3,r17
 4023d4c:	10031826 	beq	r2,zero,40249b0 <_dtoa_r+0x1120>
 4023d50:	d8c00517 	ldw	r3,20(sp)
 4023d54:	db000617 	ldw	r12,24(sp)
 4023d58:	d8c01315 	stw	r3,76(sp)
 4023d5c:	d9000b17 	ldw	r4,44(sp)
 4023d60:	20038f26 	beq	r4,zero,4024ba0 <_dtoa_r+0x1310>
 4023d64:	60bfffc4 	addi	r2,r12,-1
 4023d68:	100490fa 	slli	r2,r2,3
 4023d6c:	00c100f4 	movhi	r3,1027
 4023d70:	18c2a904 	addi	r3,r3,2724
 4023d74:	1885883a 	add	r2,r3,r2
 4023d78:	11800017 	ldw	r6,0(r2)
 4023d7c:	11c00117 	ldw	r7,4(r2)
 4023d80:	d8800717 	ldw	r2,28(sp)
 4023d84:	0009883a 	mov	r4,zero
 4023d88:	014ff834 	movhi	r5,16352
 4023d8c:	db001615 	stw	r12,88(sp)
 4023d90:	15c00044 	addi	r23,r2,1
 4023d94:	402be200 	call	402be20 <__divdf3>
 4023d98:	800d883a 	mov	r6,r16
 4023d9c:	880f883a 	mov	r7,r17
 4023da0:	1009883a 	mov	r4,r2
 4023da4:	180b883a 	mov	r5,r3
 4023da8:	402d2b40 	call	402d2b4 <__subdf3>
 4023dac:	d9401017 	ldw	r5,64(sp)
 4023db0:	d9000f17 	ldw	r4,60(sp)
 4023db4:	102b883a 	mov	r21,r2
 4023db8:	d8c01215 	stw	r3,72(sp)
 4023dbc:	402dbb00 	call	402dbb0 <__fixdfsi>
 4023dc0:	1009883a 	mov	r4,r2
 4023dc4:	1029883a 	mov	r20,r2
 4023dc8:	402dc300 	call	402dc30 <__floatsidf>
 4023dcc:	d9000f17 	ldw	r4,60(sp)
 4023dd0:	d9401017 	ldw	r5,64(sp)
 4023dd4:	100d883a 	mov	r6,r2
 4023dd8:	180f883a 	mov	r7,r3
 4023ddc:	402d2b40 	call	402d2b4 <__subdf3>
 4023de0:	1823883a 	mov	r17,r3
 4023de4:	d8c00717 	ldw	r3,28(sp)
 4023de8:	d9401217 	ldw	r5,72(sp)
 4023dec:	a2000c04 	addi	r8,r20,48
 4023df0:	1021883a 	mov	r16,r2
 4023df4:	1a000005 	stb	r8,0(r3)
 4023df8:	800d883a 	mov	r6,r16
 4023dfc:	880f883a 	mov	r7,r17
 4023e00:	a809883a 	mov	r4,r21
 4023e04:	4029883a 	mov	r20,r8
 4023e08:	402c8780 	call	402c878 <__gedf2>
 4023e0c:	00841d16 	blt	zero,r2,4024e84 <_dtoa_r+0x15f4>
 4023e10:	800d883a 	mov	r6,r16
 4023e14:	880f883a 	mov	r7,r17
 4023e18:	0009883a 	mov	r4,zero
 4023e1c:	014ffc34 	movhi	r5,16368
 4023e20:	402d2b40 	call	402d2b4 <__subdf3>
 4023e24:	d9401217 	ldw	r5,72(sp)
 4023e28:	100d883a 	mov	r6,r2
 4023e2c:	180f883a 	mov	r7,r3
 4023e30:	a809883a 	mov	r4,r21
 4023e34:	402c8780 	call	402c878 <__gedf2>
 4023e38:	db001617 	ldw	r12,88(sp)
 4023e3c:	00840e16 	blt	zero,r2,4024e78 <_dtoa_r+0x15e8>
 4023e40:	00800044 	movi	r2,1
 4023e44:	13006b0e 	bge	r2,r12,4023ff4 <_dtoa_r+0x764>
 4023e48:	d9000717 	ldw	r4,28(sp)
 4023e4c:	dd800f15 	stw	r22,60(sp)
 4023e50:	dcc01015 	stw	r19,64(sp)
 4023e54:	2319883a 	add	r12,r4,r12
 4023e58:	dcc01217 	ldw	r19,72(sp)
 4023e5c:	602d883a 	mov	r22,r12
 4023e60:	dc801215 	stw	r18,72(sp)
 4023e64:	b825883a 	mov	r18,r23
 4023e68:	00000906 	br	4023e90 <_dtoa_r+0x600>
 4023e6c:	402d2b40 	call	402d2b4 <__subdf3>
 4023e70:	a80d883a 	mov	r6,r21
 4023e74:	980f883a 	mov	r7,r19
 4023e78:	1009883a 	mov	r4,r2
 4023e7c:	180b883a 	mov	r5,r3
 4023e80:	402c9540 	call	402c954 <__ledf2>
 4023e84:	1003e816 	blt	r2,zero,4024e28 <_dtoa_r+0x1598>
 4023e88:	b825883a 	mov	r18,r23
 4023e8c:	bd83e926 	beq	r23,r22,4024e34 <_dtoa_r+0x15a4>
 4023e90:	a809883a 	mov	r4,r21
 4023e94:	980b883a 	mov	r5,r19
 4023e98:	000d883a 	mov	r6,zero
 4023e9c:	01d00934 	movhi	r7,16420
 4023ea0:	402ca480 	call	402ca48 <__muldf3>
 4023ea4:	000d883a 	mov	r6,zero
 4023ea8:	01d00934 	movhi	r7,16420
 4023eac:	8009883a 	mov	r4,r16
 4023eb0:	880b883a 	mov	r5,r17
 4023eb4:	102b883a 	mov	r21,r2
 4023eb8:	1827883a 	mov	r19,r3
 4023ebc:	402ca480 	call	402ca48 <__muldf3>
 4023ec0:	180b883a 	mov	r5,r3
 4023ec4:	1009883a 	mov	r4,r2
 4023ec8:	1821883a 	mov	r16,r3
 4023ecc:	1023883a 	mov	r17,r2
 4023ed0:	402dbb00 	call	402dbb0 <__fixdfsi>
 4023ed4:	1009883a 	mov	r4,r2
 4023ed8:	1029883a 	mov	r20,r2
 4023edc:	402dc300 	call	402dc30 <__floatsidf>
 4023ee0:	8809883a 	mov	r4,r17
 4023ee4:	800b883a 	mov	r5,r16
 4023ee8:	100d883a 	mov	r6,r2
 4023eec:	180f883a 	mov	r7,r3
 4023ef0:	402d2b40 	call	402d2b4 <__subdf3>
 4023ef4:	a5000c04 	addi	r20,r20,48
 4023ef8:	a80d883a 	mov	r6,r21
 4023efc:	980f883a 	mov	r7,r19
 4023f00:	1009883a 	mov	r4,r2
 4023f04:	180b883a 	mov	r5,r3
 4023f08:	95000005 	stb	r20,0(r18)
 4023f0c:	1021883a 	mov	r16,r2
 4023f10:	1823883a 	mov	r17,r3
 4023f14:	402c9540 	call	402c954 <__ledf2>
 4023f18:	bdc00044 	addi	r23,r23,1
 4023f1c:	800d883a 	mov	r6,r16
 4023f20:	880f883a 	mov	r7,r17
 4023f24:	0009883a 	mov	r4,zero
 4023f28:	014ffc34 	movhi	r5,16368
 4023f2c:	103fcf0e 	bge	r2,zero,4023e6c <_gp+0xfffe9708>
 4023f30:	d8c01317 	ldw	r3,76(sp)
 4023f34:	d8c00515 	stw	r3,20(sp)
 4023f38:	d9400917 	ldw	r5,36(sp)
 4023f3c:	e009883a 	mov	r4,fp
 4023f40:	4026ea80 	call	4026ea8 <_Bfree>
 4023f44:	d9000517 	ldw	r4,20(sp)
 4023f48:	d9802317 	ldw	r6,140(sp)
 4023f4c:	d9c02517 	ldw	r7,148(sp)
 4023f50:	b8000005 	stb	zero,0(r23)
 4023f54:	20800044 	addi	r2,r4,1
 4023f58:	30800015 	stw	r2,0(r6)
 4023f5c:	3802aa26 	beq	r7,zero,4024a08 <_dtoa_r+0x1178>
 4023f60:	3dc00015 	stw	r23,0(r7)
 4023f64:	d8800717 	ldw	r2,28(sp)
 4023f68:	003e7906 	br	4023950 <_gp+0xfffe91ec>
 4023f6c:	00800434 	movhi	r2,16
 4023f70:	10bfffc4 	addi	r2,r2,-1
 4023f74:	88a2703a 	and	r17,r17,r2
 4023f78:	883e851e 	bne	r17,zero,4023990 <_gp+0xfffe922c>
 4023f7c:	008100f4 	movhi	r2,1027
 4023f80:	10828a04 	addi	r2,r2,2600
 4023f84:	003e8406 	br	4023998 <_gp+0xfffe9234>
 4023f88:	10c00204 	addi	r3,r2,8
 4023f8c:	003e8706 	br	40239ac <_gp+0xfffe9248>
 4023f90:	01400434 	movhi	r5,16
 4023f94:	297fffc4 	addi	r5,r5,-1
 4023f98:	994a703a 	and	r5,r19,r5
 4023f9c:	9009883a 	mov	r4,r18
 4023fa0:	843f0044 	addi	r16,r16,-1023
 4023fa4:	294ffc34 	orhi	r5,r5,16368
 4023fa8:	dd800217 	ldw	r22,8(sp)
 4023fac:	d8001115 	stw	zero,68(sp)
 4023fb0:	003ea506 	br	4023a48 <_gp+0xfffe92e4>
 4023fb4:	008100f4 	movhi	r2,1027
 4023fb8:	10828104 	addi	r2,r2,2564
 4023fbc:	003e6406 	br	4023950 <_gp+0xfffe91ec>
 4023fc0:	e0001115 	stw	zero,68(fp)
 4023fc4:	000b883a 	mov	r5,zero
 4023fc8:	e009883a 	mov	r4,fp
 4023fcc:	4026e000 	call	4026e00 <_Balloc>
 4023fd0:	01bfffc4 	movi	r6,-1
 4023fd4:	01c00044 	movi	r7,1
 4023fd8:	d8800715 	stw	r2,28(sp)
 4023fdc:	d9800c15 	stw	r6,48(sp)
 4023fe0:	e0801015 	stw	r2,64(fp)
 4023fe4:	d8000315 	stw	zero,12(sp)
 4023fe8:	d9c00b15 	stw	r7,44(sp)
 4023fec:	d9800615 	stw	r6,24(sp)
 4023ff0:	d8002215 	stw	zero,136(sp)
 4023ff4:	d8800117 	ldw	r2,4(sp)
 4023ff8:	10008916 	blt	r2,zero,4024220 <_dtoa_r+0x990>
 4023ffc:	d9000517 	ldw	r4,20(sp)
 4024000:	00c00384 	movi	r3,14
 4024004:	19008616 	blt	r3,r4,4024220 <_dtoa_r+0x990>
 4024008:	200490fa 	slli	r2,r4,3
 402400c:	00c100f4 	movhi	r3,1027
 4024010:	d9802217 	ldw	r6,136(sp)
 4024014:	18c2a904 	addi	r3,r3,2724
 4024018:	1885883a 	add	r2,r3,r2
 402401c:	14000017 	ldw	r16,0(r2)
 4024020:	14400117 	ldw	r17,4(r2)
 4024024:	30016316 	blt	r6,zero,40245b4 <_dtoa_r+0xd24>
 4024028:	800d883a 	mov	r6,r16
 402402c:	880f883a 	mov	r7,r17
 4024030:	9009883a 	mov	r4,r18
 4024034:	980b883a 	mov	r5,r19
 4024038:	402be200 	call	402be20 <__divdf3>
 402403c:	180b883a 	mov	r5,r3
 4024040:	1009883a 	mov	r4,r2
 4024044:	402dbb00 	call	402dbb0 <__fixdfsi>
 4024048:	1009883a 	mov	r4,r2
 402404c:	102b883a 	mov	r21,r2
 4024050:	402dc300 	call	402dc30 <__floatsidf>
 4024054:	800d883a 	mov	r6,r16
 4024058:	880f883a 	mov	r7,r17
 402405c:	1009883a 	mov	r4,r2
 4024060:	180b883a 	mov	r5,r3
 4024064:	402ca480 	call	402ca48 <__muldf3>
 4024068:	100d883a 	mov	r6,r2
 402406c:	180f883a 	mov	r7,r3
 4024070:	9009883a 	mov	r4,r18
 4024074:	980b883a 	mov	r5,r19
 4024078:	402d2b40 	call	402d2b4 <__subdf3>
 402407c:	d9c00717 	ldw	r7,28(sp)
 4024080:	1009883a 	mov	r4,r2
 4024084:	a8800c04 	addi	r2,r21,48
 4024088:	38800005 	stb	r2,0(r7)
 402408c:	3dc00044 	addi	r23,r7,1
 4024090:	d9c00617 	ldw	r7,24(sp)
 4024094:	01800044 	movi	r6,1
 4024098:	180b883a 	mov	r5,r3
 402409c:	2005883a 	mov	r2,r4
 40240a0:	39803826 	beq	r7,r6,4024184 <_dtoa_r+0x8f4>
 40240a4:	000d883a 	mov	r6,zero
 40240a8:	01d00934 	movhi	r7,16420
 40240ac:	402ca480 	call	402ca48 <__muldf3>
 40240b0:	000d883a 	mov	r6,zero
 40240b4:	000f883a 	mov	r7,zero
 40240b8:	1009883a 	mov	r4,r2
 40240bc:	180b883a 	mov	r5,r3
 40240c0:	1025883a 	mov	r18,r2
 40240c4:	1827883a 	mov	r19,r3
 40240c8:	402c7f00 	call	402c7f0 <__eqdf2>
 40240cc:	103f9a26 	beq	r2,zero,4023f38 <_gp+0xfffe97d4>
 40240d0:	d9c00617 	ldw	r7,24(sp)
 40240d4:	d8c00717 	ldw	r3,28(sp)
 40240d8:	b829883a 	mov	r20,r23
 40240dc:	38bfffc4 	addi	r2,r7,-1
 40240e0:	18ad883a 	add	r22,r3,r2
 40240e4:	00000a06 	br	4024110 <_dtoa_r+0x880>
 40240e8:	402ca480 	call	402ca48 <__muldf3>
 40240ec:	000d883a 	mov	r6,zero
 40240f0:	000f883a 	mov	r7,zero
 40240f4:	1009883a 	mov	r4,r2
 40240f8:	180b883a 	mov	r5,r3
 40240fc:	1025883a 	mov	r18,r2
 4024100:	1827883a 	mov	r19,r3
 4024104:	b829883a 	mov	r20,r23
 4024108:	402c7f00 	call	402c7f0 <__eqdf2>
 402410c:	103f8a26 	beq	r2,zero,4023f38 <_gp+0xfffe97d4>
 4024110:	800d883a 	mov	r6,r16
 4024114:	880f883a 	mov	r7,r17
 4024118:	9009883a 	mov	r4,r18
 402411c:	980b883a 	mov	r5,r19
 4024120:	402be200 	call	402be20 <__divdf3>
 4024124:	180b883a 	mov	r5,r3
 4024128:	1009883a 	mov	r4,r2
 402412c:	402dbb00 	call	402dbb0 <__fixdfsi>
 4024130:	1009883a 	mov	r4,r2
 4024134:	102b883a 	mov	r21,r2
 4024138:	402dc300 	call	402dc30 <__floatsidf>
 402413c:	800d883a 	mov	r6,r16
 4024140:	880f883a 	mov	r7,r17
 4024144:	1009883a 	mov	r4,r2
 4024148:	180b883a 	mov	r5,r3
 402414c:	402ca480 	call	402ca48 <__muldf3>
 4024150:	100d883a 	mov	r6,r2
 4024154:	180f883a 	mov	r7,r3
 4024158:	9009883a 	mov	r4,r18
 402415c:	980b883a 	mov	r5,r19
 4024160:	402d2b40 	call	402d2b4 <__subdf3>
 4024164:	aa000c04 	addi	r8,r21,48
 4024168:	a2000005 	stb	r8,0(r20)
 402416c:	000d883a 	mov	r6,zero
 4024170:	01d00934 	movhi	r7,16420
 4024174:	1009883a 	mov	r4,r2
 4024178:	180b883a 	mov	r5,r3
 402417c:	a5c00044 	addi	r23,r20,1
 4024180:	b53fd91e 	bne	r22,r20,40240e8 <_gp+0xfffe9984>
 4024184:	100d883a 	mov	r6,r2
 4024188:	180f883a 	mov	r7,r3
 402418c:	1009883a 	mov	r4,r2
 4024190:	180b883a 	mov	r5,r3
 4024194:	402b5740 	call	402b574 <__adddf3>
 4024198:	100d883a 	mov	r6,r2
 402419c:	180f883a 	mov	r7,r3
 40241a0:	8009883a 	mov	r4,r16
 40241a4:	880b883a 	mov	r5,r17
 40241a8:	1027883a 	mov	r19,r2
 40241ac:	1825883a 	mov	r18,r3
 40241b0:	402c9540 	call	402c954 <__ledf2>
 40241b4:	10000816 	blt	r2,zero,40241d8 <_dtoa_r+0x948>
 40241b8:	980d883a 	mov	r6,r19
 40241bc:	900f883a 	mov	r7,r18
 40241c0:	8009883a 	mov	r4,r16
 40241c4:	880b883a 	mov	r5,r17
 40241c8:	402c7f00 	call	402c7f0 <__eqdf2>
 40241cc:	103f5a1e 	bne	r2,zero,4023f38 <_gp+0xfffe97d4>
 40241d0:	ad40004c 	andi	r21,r21,1
 40241d4:	a83f5826 	beq	r21,zero,4023f38 <_gp+0xfffe97d4>
 40241d8:	bd3fffc3 	ldbu	r20,-1(r23)
 40241dc:	b8bfffc4 	addi	r2,r23,-1
 40241e0:	1007883a 	mov	r3,r2
 40241e4:	01400e44 	movi	r5,57
 40241e8:	d9800717 	ldw	r6,28(sp)
 40241ec:	00000506 	br	4024204 <_dtoa_r+0x974>
 40241f0:	18ffffc4 	addi	r3,r3,-1
 40241f4:	11824726 	beq	r2,r6,4024b14 <_dtoa_r+0x1284>
 40241f8:	1d000003 	ldbu	r20,0(r3)
 40241fc:	102f883a 	mov	r23,r2
 4024200:	10bfffc4 	addi	r2,r2,-1
 4024204:	a1003fcc 	andi	r4,r20,255
 4024208:	2100201c 	xori	r4,r4,128
 402420c:	213fe004 	addi	r4,r4,-128
 4024210:	217ff726 	beq	r4,r5,40241f0 <_gp+0xfffe9a8c>
 4024214:	a2000044 	addi	r8,r20,1
 4024218:	12000005 	stb	r8,0(r2)
 402421c:	003f4606 	br	4023f38 <_gp+0xfffe97d4>
 4024220:	d9000b17 	ldw	r4,44(sp)
 4024224:	2000c826 	beq	r4,zero,4024548 <_dtoa_r+0xcb8>
 4024228:	d9800317 	ldw	r6,12(sp)
 402422c:	00c00044 	movi	r3,1
 4024230:	1980f90e 	bge	r3,r6,4024618 <_dtoa_r+0xd88>
 4024234:	d8800617 	ldw	r2,24(sp)
 4024238:	d8c00a17 	ldw	r3,40(sp)
 402423c:	157fffc4 	addi	r21,r2,-1
 4024240:	1d41f316 	blt	r3,r21,4024a10 <_dtoa_r+0x1180>
 4024244:	1d6bc83a 	sub	r21,r3,r21
 4024248:	d9c00617 	ldw	r7,24(sp)
 402424c:	3802aa16 	blt	r7,zero,4024cf8 <_dtoa_r+0x1468>
 4024250:	dd000817 	ldw	r20,32(sp)
 4024254:	d8800617 	ldw	r2,24(sp)
 4024258:	d8c00817 	ldw	r3,32(sp)
 402425c:	01400044 	movi	r5,1
 4024260:	e009883a 	mov	r4,fp
 4024264:	1887883a 	add	r3,r3,r2
 4024268:	d8c00815 	stw	r3,32(sp)
 402426c:	b0ad883a 	add	r22,r22,r2
 4024270:	40272340 	call	4027234 <__i2b>
 4024274:	1023883a 	mov	r17,r2
 4024278:	a0000826 	beq	r20,zero,402429c <_dtoa_r+0xa0c>
 402427c:	0580070e 	bge	zero,r22,402429c <_dtoa_r+0xa0c>
 4024280:	a005883a 	mov	r2,r20
 4024284:	b500b916 	blt	r22,r20,402456c <_dtoa_r+0xcdc>
 4024288:	d9000817 	ldw	r4,32(sp)
 402428c:	a0a9c83a 	sub	r20,r20,r2
 4024290:	b0adc83a 	sub	r22,r22,r2
 4024294:	2089c83a 	sub	r4,r4,r2
 4024298:	d9000815 	stw	r4,32(sp)
 402429c:	d9800a17 	ldw	r6,40(sp)
 40242a0:	0181810e 	bge	zero,r6,40248a8 <_dtoa_r+0x1018>
 40242a4:	d9c00b17 	ldw	r7,44(sp)
 40242a8:	3800b326 	beq	r7,zero,4024578 <_dtoa_r+0xce8>
 40242ac:	a800b226 	beq	r21,zero,4024578 <_dtoa_r+0xce8>
 40242b0:	880b883a 	mov	r5,r17
 40242b4:	a80d883a 	mov	r6,r21
 40242b8:	e009883a 	mov	r4,fp
 40242bc:	40274fc0 	call	40274fc <__pow5mult>
 40242c0:	d9800917 	ldw	r6,36(sp)
 40242c4:	100b883a 	mov	r5,r2
 40242c8:	e009883a 	mov	r4,fp
 40242cc:	1023883a 	mov	r17,r2
 40242d0:	40272700 	call	4027270 <__multiply>
 40242d4:	1021883a 	mov	r16,r2
 40242d8:	d8800a17 	ldw	r2,40(sp)
 40242dc:	d9400917 	ldw	r5,36(sp)
 40242e0:	e009883a 	mov	r4,fp
 40242e4:	1545c83a 	sub	r2,r2,r21
 40242e8:	d8800a15 	stw	r2,40(sp)
 40242ec:	4026ea80 	call	4026ea8 <_Bfree>
 40242f0:	d8c00a17 	ldw	r3,40(sp)
 40242f4:	18009f1e 	bne	r3,zero,4024574 <_dtoa_r+0xce4>
 40242f8:	05c00044 	movi	r23,1
 40242fc:	e009883a 	mov	r4,fp
 4024300:	b80b883a 	mov	r5,r23
 4024304:	40272340 	call	4027234 <__i2b>
 4024308:	d9000d17 	ldw	r4,52(sp)
 402430c:	102b883a 	mov	r21,r2
 4024310:	2000ce26 	beq	r4,zero,402464c <_dtoa_r+0xdbc>
 4024314:	200d883a 	mov	r6,r4
 4024318:	100b883a 	mov	r5,r2
 402431c:	e009883a 	mov	r4,fp
 4024320:	40274fc0 	call	40274fc <__pow5mult>
 4024324:	d9800317 	ldw	r6,12(sp)
 4024328:	102b883a 	mov	r21,r2
 402432c:	b981810e 	bge	r23,r6,4024934 <_dtoa_r+0x10a4>
 4024330:	0027883a 	mov	r19,zero
 4024334:	a8800417 	ldw	r2,16(r21)
 4024338:	05c00804 	movi	r23,32
 402433c:	10800104 	addi	r2,r2,4
 4024340:	1085883a 	add	r2,r2,r2
 4024344:	1085883a 	add	r2,r2,r2
 4024348:	a885883a 	add	r2,r21,r2
 402434c:	11000017 	ldw	r4,0(r2)
 4024350:	402711c0 	call	402711c <__hi0bits>
 4024354:	b885c83a 	sub	r2,r23,r2
 4024358:	1585883a 	add	r2,r2,r22
 402435c:	108007cc 	andi	r2,r2,31
 4024360:	1000b326 	beq	r2,zero,4024630 <_dtoa_r+0xda0>
 4024364:	00c00804 	movi	r3,32
 4024368:	1887c83a 	sub	r3,r3,r2
 402436c:	01000104 	movi	r4,4
 4024370:	20c2cd0e 	bge	r4,r3,4024ea8 <_dtoa_r+0x1618>
 4024374:	00c00704 	movi	r3,28
 4024378:	1885c83a 	sub	r2,r3,r2
 402437c:	d8c00817 	ldw	r3,32(sp)
 4024380:	a0a9883a 	add	r20,r20,r2
 4024384:	b0ad883a 	add	r22,r22,r2
 4024388:	1887883a 	add	r3,r3,r2
 402438c:	d8c00815 	stw	r3,32(sp)
 4024390:	d9800817 	ldw	r6,32(sp)
 4024394:	0180040e 	bge	zero,r6,40243a8 <_dtoa_r+0xb18>
 4024398:	800b883a 	mov	r5,r16
 402439c:	e009883a 	mov	r4,fp
 40243a0:	402763c0 	call	402763c <__lshift>
 40243a4:	1021883a 	mov	r16,r2
 40243a8:	0580050e 	bge	zero,r22,40243c0 <_dtoa_r+0xb30>
 40243ac:	a80b883a 	mov	r5,r21
 40243b0:	b00d883a 	mov	r6,r22
 40243b4:	e009883a 	mov	r4,fp
 40243b8:	402763c0 	call	402763c <__lshift>
 40243bc:	102b883a 	mov	r21,r2
 40243c0:	d9c00e17 	ldw	r7,56(sp)
 40243c4:	3801211e 	bne	r7,zero,402484c <_dtoa_r+0xfbc>
 40243c8:	d9800617 	ldw	r6,24(sp)
 40243cc:	0181380e 	bge	zero,r6,40248b0 <_dtoa_r+0x1020>
 40243d0:	d8c00b17 	ldw	r3,44(sp)
 40243d4:	1800ab1e 	bne	r3,zero,4024684 <_dtoa_r+0xdf4>
 40243d8:	dc800717 	ldw	r18,28(sp)
 40243dc:	dcc00617 	ldw	r19,24(sp)
 40243e0:	9029883a 	mov	r20,r18
 40243e4:	00000206 	br	40243f0 <_dtoa_r+0xb60>
 40243e8:	4026ed00 	call	4026ed0 <__multadd>
 40243ec:	1021883a 	mov	r16,r2
 40243f0:	a80b883a 	mov	r5,r21
 40243f4:	8009883a 	mov	r4,r16
 40243f8:	40236680 	call	4023668 <quorem>
 40243fc:	10800c04 	addi	r2,r2,48
 4024400:	90800005 	stb	r2,0(r18)
 4024404:	94800044 	addi	r18,r18,1
 4024408:	9507c83a 	sub	r3,r18,r20
 402440c:	000f883a 	mov	r7,zero
 4024410:	01800284 	movi	r6,10
 4024414:	800b883a 	mov	r5,r16
 4024418:	e009883a 	mov	r4,fp
 402441c:	1cfff216 	blt	r3,r19,40243e8 <_gp+0xfffe9c84>
 4024420:	1011883a 	mov	r8,r2
 4024424:	d8800617 	ldw	r2,24(sp)
 4024428:	0082370e 	bge	zero,r2,4024d08 <_dtoa_r+0x1478>
 402442c:	d9000717 	ldw	r4,28(sp)
 4024430:	0025883a 	mov	r18,zero
 4024434:	20af883a 	add	r23,r4,r2
 4024438:	01800044 	movi	r6,1
 402443c:	800b883a 	mov	r5,r16
 4024440:	e009883a 	mov	r4,fp
 4024444:	da001715 	stw	r8,92(sp)
 4024448:	402763c0 	call	402763c <__lshift>
 402444c:	a80b883a 	mov	r5,r21
 4024450:	1009883a 	mov	r4,r2
 4024454:	d8800915 	stw	r2,36(sp)
 4024458:	40277840 	call	4027784 <__mcmp>
 402445c:	da001717 	ldw	r8,92(sp)
 4024460:	0081800e 	bge	zero,r2,4024a64 <_dtoa_r+0x11d4>
 4024464:	b93fffc3 	ldbu	r4,-1(r23)
 4024468:	b8bfffc4 	addi	r2,r23,-1
 402446c:	1007883a 	mov	r3,r2
 4024470:	01800e44 	movi	r6,57
 4024474:	d9c00717 	ldw	r7,28(sp)
 4024478:	00000506 	br	4024490 <_dtoa_r+0xc00>
 402447c:	18ffffc4 	addi	r3,r3,-1
 4024480:	11c12326 	beq	r2,r7,4024910 <_dtoa_r+0x1080>
 4024484:	19000003 	ldbu	r4,0(r3)
 4024488:	102f883a 	mov	r23,r2
 402448c:	10bfffc4 	addi	r2,r2,-1
 4024490:	21403fcc 	andi	r5,r4,255
 4024494:	2940201c 	xori	r5,r5,128
 4024498:	297fe004 	addi	r5,r5,-128
 402449c:	29bff726 	beq	r5,r6,402447c <_gp+0xfffe9d18>
 40244a0:	21000044 	addi	r4,r4,1
 40244a4:	11000005 	stb	r4,0(r2)
 40244a8:	a80b883a 	mov	r5,r21
 40244ac:	e009883a 	mov	r4,fp
 40244b0:	4026ea80 	call	4026ea8 <_Bfree>
 40244b4:	883ea026 	beq	r17,zero,4023f38 <_gp+0xfffe97d4>
 40244b8:	90000426 	beq	r18,zero,40244cc <_dtoa_r+0xc3c>
 40244bc:	94400326 	beq	r18,r17,40244cc <_dtoa_r+0xc3c>
 40244c0:	900b883a 	mov	r5,r18
 40244c4:	e009883a 	mov	r4,fp
 40244c8:	4026ea80 	call	4026ea8 <_Bfree>
 40244cc:	880b883a 	mov	r5,r17
 40244d0:	e009883a 	mov	r4,fp
 40244d4:	4026ea80 	call	4026ea8 <_Bfree>
 40244d8:	003e9706 	br	4023f38 <_gp+0xfffe97d4>
 40244dc:	01800044 	movi	r6,1
 40244e0:	d9800e15 	stw	r6,56(sp)
 40244e4:	003d9606 	br	4023b40 <_gp+0xfffe93dc>
 40244e8:	d8800817 	ldw	r2,32(sp)
 40244ec:	d8c00517 	ldw	r3,20(sp)
 40244f0:	d8000d15 	stw	zero,52(sp)
 40244f4:	10c5c83a 	sub	r2,r2,r3
 40244f8:	00c9c83a 	sub	r4,zero,r3
 40244fc:	d8800815 	stw	r2,32(sp)
 4024500:	d9000a15 	stw	r4,40(sp)
 4024504:	003d9706 	br	4023b64 <_gp+0xfffe9400>
 4024508:	05adc83a 	sub	r22,zero,r22
 402450c:	dd800815 	stw	r22,32(sp)
 4024510:	002d883a 	mov	r22,zero
 4024514:	003d8e06 	br	4023b50 <_gp+0xfffe93ec>
 4024518:	d9000517 	ldw	r4,20(sp)
 402451c:	402dc300 	call	402dc30 <__floatsidf>
 4024520:	100d883a 	mov	r6,r2
 4024524:	180f883a 	mov	r7,r3
 4024528:	a009883a 	mov	r4,r20
 402452c:	880b883a 	mov	r5,r17
 4024530:	402c7f00 	call	402c7f0 <__eqdf2>
 4024534:	103d7126 	beq	r2,zero,4023afc <_gp+0xfffe9398>
 4024538:	d9c00517 	ldw	r7,20(sp)
 402453c:	39ffffc4 	addi	r7,r7,-1
 4024540:	d9c00515 	stw	r7,20(sp)
 4024544:	003d6d06 	br	4023afc <_gp+0xfffe9398>
 4024548:	dd400a17 	ldw	r21,40(sp)
 402454c:	dd000817 	ldw	r20,32(sp)
 4024550:	0023883a 	mov	r17,zero
 4024554:	003f4806 	br	4024278 <_gp+0xfffe9b14>
 4024558:	10e3c83a 	sub	r17,r2,r3
 402455c:	9448983a 	sll	r4,r18,r17
 4024560:	003d3206 	br	4023a2c <_gp+0xfffe92c8>
 4024564:	d8000e15 	stw	zero,56(sp)
 4024568:	003d7506 	br	4023b40 <_gp+0xfffe93dc>
 402456c:	b005883a 	mov	r2,r22
 4024570:	003f4506 	br	4024288 <_gp+0xfffe9b24>
 4024574:	dc000915 	stw	r16,36(sp)
 4024578:	d9800a17 	ldw	r6,40(sp)
 402457c:	d9400917 	ldw	r5,36(sp)
 4024580:	e009883a 	mov	r4,fp
 4024584:	40274fc0 	call	40274fc <__pow5mult>
 4024588:	1021883a 	mov	r16,r2
 402458c:	003f5a06 	br	40242f8 <_gp+0xfffe9b94>
 4024590:	01c00044 	movi	r7,1
 4024594:	d9c00b15 	stw	r7,44(sp)
 4024598:	d8802217 	ldw	r2,136(sp)
 402459c:	0081280e 	bge	zero,r2,4024a40 <_dtoa_r+0x11b0>
 40245a0:	100d883a 	mov	r6,r2
 40245a4:	1021883a 	mov	r16,r2
 40245a8:	d8800c15 	stw	r2,48(sp)
 40245ac:	d8800615 	stw	r2,24(sp)
 40245b0:	003d8806 	br	4023bd4 <_gp+0xfffe9470>
 40245b4:	d8800617 	ldw	r2,24(sp)
 40245b8:	00be9b16 	blt	zero,r2,4024028 <_gp+0xfffe98c4>
 40245bc:	10010f1e 	bne	r2,zero,40249fc <_dtoa_r+0x116c>
 40245c0:	880b883a 	mov	r5,r17
 40245c4:	000d883a 	mov	r6,zero
 40245c8:	01d00534 	movhi	r7,16404
 40245cc:	8009883a 	mov	r4,r16
 40245d0:	402ca480 	call	402ca48 <__muldf3>
 40245d4:	900d883a 	mov	r6,r18
 40245d8:	980f883a 	mov	r7,r19
 40245dc:	1009883a 	mov	r4,r2
 40245e0:	180b883a 	mov	r5,r3
 40245e4:	402c8780 	call	402c878 <__gedf2>
 40245e8:	002b883a 	mov	r21,zero
 40245ec:	0023883a 	mov	r17,zero
 40245f0:	1000bf16 	blt	r2,zero,40248f0 <_dtoa_r+0x1060>
 40245f4:	d9802217 	ldw	r6,136(sp)
 40245f8:	ddc00717 	ldw	r23,28(sp)
 40245fc:	018c303a 	nor	r6,zero,r6
 4024600:	d9800515 	stw	r6,20(sp)
 4024604:	a80b883a 	mov	r5,r21
 4024608:	e009883a 	mov	r4,fp
 402460c:	4026ea80 	call	4026ea8 <_Bfree>
 4024610:	883e4926 	beq	r17,zero,4023f38 <_gp+0xfffe97d4>
 4024614:	003fad06 	br	40244cc <_gp+0xfffe9d68>
 4024618:	d9c01117 	ldw	r7,68(sp)
 402461c:	3801bc26 	beq	r7,zero,4024d10 <_dtoa_r+0x1480>
 4024620:	10810cc4 	addi	r2,r2,1075
 4024624:	dd400a17 	ldw	r21,40(sp)
 4024628:	dd000817 	ldw	r20,32(sp)
 402462c:	003f0a06 	br	4024258 <_gp+0xfffe9af4>
 4024630:	00800704 	movi	r2,28
 4024634:	d9000817 	ldw	r4,32(sp)
 4024638:	a0a9883a 	add	r20,r20,r2
 402463c:	b0ad883a 	add	r22,r22,r2
 4024640:	2089883a 	add	r4,r4,r2
 4024644:	d9000815 	stw	r4,32(sp)
 4024648:	003f5106 	br	4024390 <_gp+0xfffe9c2c>
 402464c:	d8c00317 	ldw	r3,12(sp)
 4024650:	b8c1fc0e 	bge	r23,r3,4024e44 <_dtoa_r+0x15b4>
 4024654:	0027883a 	mov	r19,zero
 4024658:	b805883a 	mov	r2,r23
 402465c:	003f3e06 	br	4024358 <_gp+0xfffe9bf4>
 4024660:	880b883a 	mov	r5,r17
 4024664:	e009883a 	mov	r4,fp
 4024668:	000f883a 	mov	r7,zero
 402466c:	01800284 	movi	r6,10
 4024670:	4026ed00 	call	4026ed0 <__multadd>
 4024674:	d9000c17 	ldw	r4,48(sp)
 4024678:	1023883a 	mov	r17,r2
 402467c:	0102040e 	bge	zero,r4,4024e90 <_dtoa_r+0x1600>
 4024680:	d9000615 	stw	r4,24(sp)
 4024684:	0500050e 	bge	zero,r20,402469c <_dtoa_r+0xe0c>
 4024688:	880b883a 	mov	r5,r17
 402468c:	a00d883a 	mov	r6,r20
 4024690:	e009883a 	mov	r4,fp
 4024694:	402763c0 	call	402763c <__lshift>
 4024698:	1023883a 	mov	r17,r2
 402469c:	9801241e 	bne	r19,zero,4024b30 <_dtoa_r+0x12a0>
 40246a0:	8829883a 	mov	r20,r17
 40246a4:	d9000617 	ldw	r4,24(sp)
 40246a8:	dcc00717 	ldw	r19,28(sp)
 40246ac:	9480004c 	andi	r18,r18,1
 40246b0:	20bfffc4 	addi	r2,r4,-1
 40246b4:	9885883a 	add	r2,r19,r2
 40246b8:	d8800415 	stw	r2,16(sp)
 40246bc:	dc800615 	stw	r18,24(sp)
 40246c0:	a80b883a 	mov	r5,r21
 40246c4:	8009883a 	mov	r4,r16
 40246c8:	40236680 	call	4023668 <quorem>
 40246cc:	880b883a 	mov	r5,r17
 40246d0:	8009883a 	mov	r4,r16
 40246d4:	102f883a 	mov	r23,r2
 40246d8:	40277840 	call	4027784 <__mcmp>
 40246dc:	a80b883a 	mov	r5,r21
 40246e0:	a00d883a 	mov	r6,r20
 40246e4:	e009883a 	mov	r4,fp
 40246e8:	102d883a 	mov	r22,r2
 40246ec:	40277e40 	call	40277e4 <__mdiff>
 40246f0:	1007883a 	mov	r3,r2
 40246f4:	10800317 	ldw	r2,12(r2)
 40246f8:	bc800c04 	addi	r18,r23,48
 40246fc:	180b883a 	mov	r5,r3
 4024700:	10004e1e 	bne	r2,zero,402483c <_dtoa_r+0xfac>
 4024704:	8009883a 	mov	r4,r16
 4024708:	d8c01615 	stw	r3,88(sp)
 402470c:	40277840 	call	4027784 <__mcmp>
 4024710:	d8c01617 	ldw	r3,88(sp)
 4024714:	e009883a 	mov	r4,fp
 4024718:	d8801615 	stw	r2,88(sp)
 402471c:	180b883a 	mov	r5,r3
 4024720:	4026ea80 	call	4026ea8 <_Bfree>
 4024724:	d8801617 	ldw	r2,88(sp)
 4024728:	1000041e 	bne	r2,zero,402473c <_dtoa_r+0xeac>
 402472c:	d9800317 	ldw	r6,12(sp)
 4024730:	3000021e 	bne	r6,zero,402473c <_dtoa_r+0xeac>
 4024734:	d8c00617 	ldw	r3,24(sp)
 4024738:	18003726 	beq	r3,zero,4024818 <_dtoa_r+0xf88>
 402473c:	b0002016 	blt	r22,zero,40247c0 <_dtoa_r+0xf30>
 4024740:	b000041e 	bne	r22,zero,4024754 <_dtoa_r+0xec4>
 4024744:	d9000317 	ldw	r4,12(sp)
 4024748:	2000021e 	bne	r4,zero,4024754 <_dtoa_r+0xec4>
 402474c:	d8c00617 	ldw	r3,24(sp)
 4024750:	18001b26 	beq	r3,zero,40247c0 <_dtoa_r+0xf30>
 4024754:	00810716 	blt	zero,r2,4024b74 <_dtoa_r+0x12e4>
 4024758:	d8c00417 	ldw	r3,16(sp)
 402475c:	9d800044 	addi	r22,r19,1
 4024760:	9c800005 	stb	r18,0(r19)
 4024764:	b02f883a 	mov	r23,r22
 4024768:	98c10626 	beq	r19,r3,4024b84 <_dtoa_r+0x12f4>
 402476c:	800b883a 	mov	r5,r16
 4024770:	000f883a 	mov	r7,zero
 4024774:	01800284 	movi	r6,10
 4024778:	e009883a 	mov	r4,fp
 402477c:	4026ed00 	call	4026ed0 <__multadd>
 4024780:	1021883a 	mov	r16,r2
 4024784:	000f883a 	mov	r7,zero
 4024788:	01800284 	movi	r6,10
 402478c:	880b883a 	mov	r5,r17
 4024790:	e009883a 	mov	r4,fp
 4024794:	8d002526 	beq	r17,r20,402482c <_dtoa_r+0xf9c>
 4024798:	4026ed00 	call	4026ed0 <__multadd>
 402479c:	a00b883a 	mov	r5,r20
 40247a0:	000f883a 	mov	r7,zero
 40247a4:	01800284 	movi	r6,10
 40247a8:	e009883a 	mov	r4,fp
 40247ac:	1023883a 	mov	r17,r2
 40247b0:	4026ed00 	call	4026ed0 <__multadd>
 40247b4:	1029883a 	mov	r20,r2
 40247b8:	b027883a 	mov	r19,r22
 40247bc:	003fc006 	br	40246c0 <_gp+0xfffe9f5c>
 40247c0:	9011883a 	mov	r8,r18
 40247c4:	00800e0e 	bge	zero,r2,4024800 <_dtoa_r+0xf70>
 40247c8:	800b883a 	mov	r5,r16
 40247cc:	01800044 	movi	r6,1
 40247d0:	e009883a 	mov	r4,fp
 40247d4:	da001715 	stw	r8,92(sp)
 40247d8:	402763c0 	call	402763c <__lshift>
 40247dc:	a80b883a 	mov	r5,r21
 40247e0:	1009883a 	mov	r4,r2
 40247e4:	1021883a 	mov	r16,r2
 40247e8:	40277840 	call	4027784 <__mcmp>
 40247ec:	da001717 	ldw	r8,92(sp)
 40247f0:	0081960e 	bge	zero,r2,4024e4c <_dtoa_r+0x15bc>
 40247f4:	00800e44 	movi	r2,57
 40247f8:	40817026 	beq	r8,r2,4024dbc <_dtoa_r+0x152c>
 40247fc:	ba000c44 	addi	r8,r23,49
 4024800:	8825883a 	mov	r18,r17
 4024804:	9dc00044 	addi	r23,r19,1
 4024808:	9a000005 	stb	r8,0(r19)
 402480c:	a023883a 	mov	r17,r20
 4024810:	dc000915 	stw	r16,36(sp)
 4024814:	003f2406 	br	40244a8 <_gp+0xfffe9d44>
 4024818:	00800e44 	movi	r2,57
 402481c:	9011883a 	mov	r8,r18
 4024820:	90816626 	beq	r18,r2,4024dbc <_dtoa_r+0x152c>
 4024824:	05bff516 	blt	zero,r22,40247fc <_gp+0xfffea098>
 4024828:	003ff506 	br	4024800 <_gp+0xfffea09c>
 402482c:	4026ed00 	call	4026ed0 <__multadd>
 4024830:	1023883a 	mov	r17,r2
 4024834:	1029883a 	mov	r20,r2
 4024838:	003fdf06 	br	40247b8 <_gp+0xfffea054>
 402483c:	e009883a 	mov	r4,fp
 4024840:	4026ea80 	call	4026ea8 <_Bfree>
 4024844:	00800044 	movi	r2,1
 4024848:	003fbc06 	br	402473c <_gp+0xfffe9fd8>
 402484c:	a80b883a 	mov	r5,r21
 4024850:	8009883a 	mov	r4,r16
 4024854:	40277840 	call	4027784 <__mcmp>
 4024858:	103edb0e 	bge	r2,zero,40243c8 <_gp+0xfffe9c64>
 402485c:	800b883a 	mov	r5,r16
 4024860:	000f883a 	mov	r7,zero
 4024864:	01800284 	movi	r6,10
 4024868:	e009883a 	mov	r4,fp
 402486c:	4026ed00 	call	4026ed0 <__multadd>
 4024870:	1021883a 	mov	r16,r2
 4024874:	d8800517 	ldw	r2,20(sp)
 4024878:	d8c00b17 	ldw	r3,44(sp)
 402487c:	10bfffc4 	addi	r2,r2,-1
 4024880:	d8800515 	stw	r2,20(sp)
 4024884:	183f761e 	bne	r3,zero,4024660 <_gp+0xfffe9efc>
 4024888:	d9000c17 	ldw	r4,48(sp)
 402488c:	0101730e 	bge	zero,r4,4024e5c <_dtoa_r+0x15cc>
 4024890:	d9000615 	stw	r4,24(sp)
 4024894:	003ed006 	br	40243d8 <_gp+0xfffe9c74>
 4024898:	00800084 	movi	r2,2
 402489c:	3081861e 	bne	r6,r2,4024eb8 <_dtoa_r+0x1628>
 40248a0:	d8000b15 	stw	zero,44(sp)
 40248a4:	003f3c06 	br	4024598 <_gp+0xfffe9e34>
 40248a8:	dc000917 	ldw	r16,36(sp)
 40248ac:	003e9206 	br	40242f8 <_gp+0xfffe9b94>
 40248b0:	d9c00317 	ldw	r7,12(sp)
 40248b4:	00800084 	movi	r2,2
 40248b8:	11fec50e 	bge	r2,r7,40243d0 <_gp+0xfffe9c6c>
 40248bc:	d9000617 	ldw	r4,24(sp)
 40248c0:	20013c1e 	bne	r4,zero,4024db4 <_dtoa_r+0x1524>
 40248c4:	a80b883a 	mov	r5,r21
 40248c8:	000f883a 	mov	r7,zero
 40248cc:	01800144 	movi	r6,5
 40248d0:	e009883a 	mov	r4,fp
 40248d4:	4026ed00 	call	4026ed0 <__multadd>
 40248d8:	100b883a 	mov	r5,r2
 40248dc:	8009883a 	mov	r4,r16
 40248e0:	102b883a 	mov	r21,r2
 40248e4:	40277840 	call	4027784 <__mcmp>
 40248e8:	dc000915 	stw	r16,36(sp)
 40248ec:	00bf410e 	bge	zero,r2,40245f4 <_gp+0xfffe9e90>
 40248f0:	d9c00717 	ldw	r7,28(sp)
 40248f4:	00800c44 	movi	r2,49
 40248f8:	38800005 	stb	r2,0(r7)
 40248fc:	d8800517 	ldw	r2,20(sp)
 4024900:	3dc00044 	addi	r23,r7,1
 4024904:	10800044 	addi	r2,r2,1
 4024908:	d8800515 	stw	r2,20(sp)
 402490c:	003f3d06 	br	4024604 <_gp+0xfffe9ea0>
 4024910:	d9800517 	ldw	r6,20(sp)
 4024914:	d9c00717 	ldw	r7,28(sp)
 4024918:	00800c44 	movi	r2,49
 402491c:	31800044 	addi	r6,r6,1
 4024920:	d9800515 	stw	r6,20(sp)
 4024924:	38800005 	stb	r2,0(r7)
 4024928:	003edf06 	br	40244a8 <_gp+0xfffe9d44>
 402492c:	d8000b15 	stw	zero,44(sp)
 4024930:	003c9f06 	br	4023bb0 <_gp+0xfffe944c>
 4024934:	903e7e1e 	bne	r18,zero,4024330 <_gp+0xfffe9bcc>
 4024938:	00800434 	movhi	r2,16
 402493c:	10bfffc4 	addi	r2,r2,-1
 4024940:	9884703a 	and	r2,r19,r2
 4024944:	1000ea1e 	bne	r2,zero,4024cf0 <_dtoa_r+0x1460>
 4024948:	9cdffc2c 	andhi	r19,r19,32752
 402494c:	9800e826 	beq	r19,zero,4024cf0 <_dtoa_r+0x1460>
 4024950:	d9c00817 	ldw	r7,32(sp)
 4024954:	b5800044 	addi	r22,r22,1
 4024958:	04c00044 	movi	r19,1
 402495c:	39c00044 	addi	r7,r7,1
 4024960:	d9c00815 	stw	r7,32(sp)
 4024964:	d8800d17 	ldw	r2,52(sp)
 4024968:	103e721e 	bne	r2,zero,4024334 <_gp+0xfffe9bd0>
 402496c:	00800044 	movi	r2,1
 4024970:	003e7906 	br	4024358 <_gp+0xfffe9bf4>
 4024974:	8009883a 	mov	r4,r16
 4024978:	402dc300 	call	402dc30 <__floatsidf>
 402497c:	d9800f17 	ldw	r6,60(sp)
 4024980:	d9c01017 	ldw	r7,64(sp)
 4024984:	1009883a 	mov	r4,r2
 4024988:	180b883a 	mov	r5,r3
 402498c:	402ca480 	call	402ca48 <__muldf3>
 4024990:	000d883a 	mov	r6,zero
 4024994:	01d00734 	movhi	r7,16412
 4024998:	1009883a 	mov	r4,r2
 402499c:	180b883a 	mov	r5,r3
 40249a0:	402b5740 	call	402b574 <__adddf3>
 40249a4:	047f3034 	movhi	r17,64704
 40249a8:	1021883a 	mov	r16,r2
 40249ac:	1c63883a 	add	r17,r3,r17
 40249b0:	d9000f17 	ldw	r4,60(sp)
 40249b4:	d9401017 	ldw	r5,64(sp)
 40249b8:	000d883a 	mov	r6,zero
 40249bc:	01d00534 	movhi	r7,16404
 40249c0:	402d2b40 	call	402d2b4 <__subdf3>
 40249c4:	800d883a 	mov	r6,r16
 40249c8:	880f883a 	mov	r7,r17
 40249cc:	1009883a 	mov	r4,r2
 40249d0:	180b883a 	mov	r5,r3
 40249d4:	102b883a 	mov	r21,r2
 40249d8:	1829883a 	mov	r20,r3
 40249dc:	402c8780 	call	402c878 <__gedf2>
 40249e0:	00806c16 	blt	zero,r2,4024b94 <_dtoa_r+0x1304>
 40249e4:	89e0003c 	xorhi	r7,r17,32768
 40249e8:	800d883a 	mov	r6,r16
 40249ec:	a809883a 	mov	r4,r21
 40249f0:	a00b883a 	mov	r5,r20
 40249f4:	402c9540 	call	402c954 <__ledf2>
 40249f8:	103d7e0e 	bge	r2,zero,4023ff4 <_gp+0xfffe9890>
 40249fc:	002b883a 	mov	r21,zero
 4024a00:	0023883a 	mov	r17,zero
 4024a04:	003efb06 	br	40245f4 <_gp+0xfffe9e90>
 4024a08:	d8800717 	ldw	r2,28(sp)
 4024a0c:	003bd006 	br	4023950 <_gp+0xfffe91ec>
 4024a10:	d9000a17 	ldw	r4,40(sp)
 4024a14:	d9800d17 	ldw	r6,52(sp)
 4024a18:	dd400a15 	stw	r21,40(sp)
 4024a1c:	a905c83a 	sub	r2,r21,r4
 4024a20:	308d883a 	add	r6,r6,r2
 4024a24:	d9800d15 	stw	r6,52(sp)
 4024a28:	002b883a 	mov	r21,zero
 4024a2c:	003e0606 	br	4024248 <_gp+0xfffe9ae4>
 4024a30:	9023883a 	mov	r17,r18
 4024a34:	9829883a 	mov	r20,r19
 4024a38:	04000084 	movi	r16,2
 4024a3c:	003c9206 	br	4023c88 <_gp+0xfffe9524>
 4024a40:	04000044 	movi	r16,1
 4024a44:	dc000c15 	stw	r16,48(sp)
 4024a48:	dc000615 	stw	r16,24(sp)
 4024a4c:	dc002215 	stw	r16,136(sp)
 4024a50:	e0001115 	stw	zero,68(fp)
 4024a54:	000b883a 	mov	r5,zero
 4024a58:	003c6906 	br	4023c00 <_gp+0xfffe949c>
 4024a5c:	3021883a 	mov	r16,r6
 4024a60:	003ffb06 	br	4024a50 <_gp+0xfffea2ec>
 4024a64:	1000021e 	bne	r2,zero,4024a70 <_dtoa_r+0x11e0>
 4024a68:	4200004c 	andi	r8,r8,1
 4024a6c:	403e7d1e 	bne	r8,zero,4024464 <_gp+0xfffe9d00>
 4024a70:	01000c04 	movi	r4,48
 4024a74:	00000106 	br	4024a7c <_dtoa_r+0x11ec>
 4024a78:	102f883a 	mov	r23,r2
 4024a7c:	b8bfffc4 	addi	r2,r23,-1
 4024a80:	10c00007 	ldb	r3,0(r2)
 4024a84:	193ffc26 	beq	r3,r4,4024a78 <_gp+0xfffea314>
 4024a88:	003e8706 	br	40244a8 <_gp+0xfffe9d44>
 4024a8c:	d8800517 	ldw	r2,20(sp)
 4024a90:	00a3c83a 	sub	r17,zero,r2
 4024a94:	8800a426 	beq	r17,zero,4024d28 <_dtoa_r+0x1498>
 4024a98:	888003cc 	andi	r2,r17,15
 4024a9c:	100490fa 	slli	r2,r2,3
 4024aa0:	00c100f4 	movhi	r3,1027
 4024aa4:	18c2a904 	addi	r3,r3,2724
 4024aa8:	1885883a 	add	r2,r3,r2
 4024aac:	11800017 	ldw	r6,0(r2)
 4024ab0:	11c00117 	ldw	r7,4(r2)
 4024ab4:	9009883a 	mov	r4,r18
 4024ab8:	980b883a 	mov	r5,r19
 4024abc:	8823d13a 	srai	r17,r17,4
 4024ac0:	402ca480 	call	402ca48 <__muldf3>
 4024ac4:	d8800f15 	stw	r2,60(sp)
 4024ac8:	d8c01015 	stw	r3,64(sp)
 4024acc:	8800e826 	beq	r17,zero,4024e70 <_dtoa_r+0x15e0>
 4024ad0:	050100f4 	movhi	r20,1027
 4024ad4:	a5029f04 	addi	r20,r20,2684
 4024ad8:	04000084 	movi	r16,2
 4024adc:	8980004c 	andi	r6,r17,1
 4024ae0:	1009883a 	mov	r4,r2
 4024ae4:	8823d07a 	srai	r17,r17,1
 4024ae8:	180b883a 	mov	r5,r3
 4024aec:	30000426 	beq	r6,zero,4024b00 <_dtoa_r+0x1270>
 4024af0:	a1800017 	ldw	r6,0(r20)
 4024af4:	a1c00117 	ldw	r7,4(r20)
 4024af8:	84000044 	addi	r16,r16,1
 4024afc:	402ca480 	call	402ca48 <__muldf3>
 4024b00:	a5000204 	addi	r20,r20,8
 4024b04:	883ff51e 	bne	r17,zero,4024adc <_gp+0xfffea378>
 4024b08:	d8800f15 	stw	r2,60(sp)
 4024b0c:	d8c01015 	stw	r3,64(sp)
 4024b10:	003c7606 	br	4023cec <_gp+0xfffe9588>
 4024b14:	00c00c04 	movi	r3,48
 4024b18:	10c00005 	stb	r3,0(r2)
 4024b1c:	d8c00517 	ldw	r3,20(sp)
 4024b20:	bd3fffc3 	ldbu	r20,-1(r23)
 4024b24:	18c00044 	addi	r3,r3,1
 4024b28:	d8c00515 	stw	r3,20(sp)
 4024b2c:	003db906 	br	4024214 <_gp+0xfffe9ab0>
 4024b30:	89400117 	ldw	r5,4(r17)
 4024b34:	e009883a 	mov	r4,fp
 4024b38:	4026e000 	call	4026e00 <_Balloc>
 4024b3c:	89800417 	ldw	r6,16(r17)
 4024b40:	89400304 	addi	r5,r17,12
 4024b44:	11000304 	addi	r4,r2,12
 4024b48:	31800084 	addi	r6,r6,2
 4024b4c:	318d883a 	add	r6,r6,r6
 4024b50:	318d883a 	add	r6,r6,r6
 4024b54:	1027883a 	mov	r19,r2
 4024b58:	4020da40 	call	4020da4 <memcpy>
 4024b5c:	01800044 	movi	r6,1
 4024b60:	980b883a 	mov	r5,r19
 4024b64:	e009883a 	mov	r4,fp
 4024b68:	402763c0 	call	402763c <__lshift>
 4024b6c:	1029883a 	mov	r20,r2
 4024b70:	003ecc06 	br	40246a4 <_gp+0xfffe9f40>
 4024b74:	00800e44 	movi	r2,57
 4024b78:	90809026 	beq	r18,r2,4024dbc <_dtoa_r+0x152c>
 4024b7c:	92000044 	addi	r8,r18,1
 4024b80:	003f1f06 	br	4024800 <_gp+0xfffea09c>
 4024b84:	9011883a 	mov	r8,r18
 4024b88:	8825883a 	mov	r18,r17
 4024b8c:	a023883a 	mov	r17,r20
 4024b90:	003e2906 	br	4024438 <_gp+0xfffe9cd4>
 4024b94:	002b883a 	mov	r21,zero
 4024b98:	0023883a 	mov	r17,zero
 4024b9c:	003f5406 	br	40248f0 <_gp+0xfffea18c>
 4024ba0:	61bfffc4 	addi	r6,r12,-1
 4024ba4:	300490fa 	slli	r2,r6,3
 4024ba8:	00c100f4 	movhi	r3,1027
 4024bac:	18c2a904 	addi	r3,r3,2724
 4024bb0:	1885883a 	add	r2,r3,r2
 4024bb4:	11000017 	ldw	r4,0(r2)
 4024bb8:	11400117 	ldw	r5,4(r2)
 4024bbc:	d8800717 	ldw	r2,28(sp)
 4024bc0:	880f883a 	mov	r7,r17
 4024bc4:	d9801215 	stw	r6,72(sp)
 4024bc8:	800d883a 	mov	r6,r16
 4024bcc:	db001615 	stw	r12,88(sp)
 4024bd0:	15c00044 	addi	r23,r2,1
 4024bd4:	402ca480 	call	402ca48 <__muldf3>
 4024bd8:	d9401017 	ldw	r5,64(sp)
 4024bdc:	d9000f17 	ldw	r4,60(sp)
 4024be0:	d8c01515 	stw	r3,84(sp)
 4024be4:	d8801415 	stw	r2,80(sp)
 4024be8:	402dbb00 	call	402dbb0 <__fixdfsi>
 4024bec:	1009883a 	mov	r4,r2
 4024bf0:	1021883a 	mov	r16,r2
 4024bf4:	402dc300 	call	402dc30 <__floatsidf>
 4024bf8:	d9000f17 	ldw	r4,60(sp)
 4024bfc:	d9401017 	ldw	r5,64(sp)
 4024c00:	100d883a 	mov	r6,r2
 4024c04:	180f883a 	mov	r7,r3
 4024c08:	402d2b40 	call	402d2b4 <__subdf3>
 4024c0c:	1829883a 	mov	r20,r3
 4024c10:	d8c00717 	ldw	r3,28(sp)
 4024c14:	84000c04 	addi	r16,r16,48
 4024c18:	1023883a 	mov	r17,r2
 4024c1c:	1c000005 	stb	r16,0(r3)
 4024c20:	db001617 	ldw	r12,88(sp)
 4024c24:	00800044 	movi	r2,1
 4024c28:	60802226 	beq	r12,r2,4024cb4 <_dtoa_r+0x1424>
 4024c2c:	d9c00717 	ldw	r7,28(sp)
 4024c30:	8805883a 	mov	r2,r17
 4024c34:	b82b883a 	mov	r21,r23
 4024c38:	3b19883a 	add	r12,r7,r12
 4024c3c:	6023883a 	mov	r17,r12
 4024c40:	a007883a 	mov	r3,r20
 4024c44:	dc800f15 	stw	r18,60(sp)
 4024c48:	000d883a 	mov	r6,zero
 4024c4c:	01d00934 	movhi	r7,16420
 4024c50:	1009883a 	mov	r4,r2
 4024c54:	180b883a 	mov	r5,r3
 4024c58:	402ca480 	call	402ca48 <__muldf3>
 4024c5c:	180b883a 	mov	r5,r3
 4024c60:	1009883a 	mov	r4,r2
 4024c64:	1829883a 	mov	r20,r3
 4024c68:	1025883a 	mov	r18,r2
 4024c6c:	402dbb00 	call	402dbb0 <__fixdfsi>
 4024c70:	1009883a 	mov	r4,r2
 4024c74:	1021883a 	mov	r16,r2
 4024c78:	402dc300 	call	402dc30 <__floatsidf>
 4024c7c:	100d883a 	mov	r6,r2
 4024c80:	180f883a 	mov	r7,r3
 4024c84:	9009883a 	mov	r4,r18
 4024c88:	a00b883a 	mov	r5,r20
 4024c8c:	84000c04 	addi	r16,r16,48
 4024c90:	402d2b40 	call	402d2b4 <__subdf3>
 4024c94:	ad400044 	addi	r21,r21,1
 4024c98:	ac3fffc5 	stb	r16,-1(r21)
 4024c9c:	ac7fea1e 	bne	r21,r17,4024c48 <_gp+0xfffea4e4>
 4024ca0:	1023883a 	mov	r17,r2
 4024ca4:	d8801217 	ldw	r2,72(sp)
 4024ca8:	dc800f17 	ldw	r18,60(sp)
 4024cac:	1829883a 	mov	r20,r3
 4024cb0:	b8af883a 	add	r23,r23,r2
 4024cb4:	d9001417 	ldw	r4,80(sp)
 4024cb8:	d9401517 	ldw	r5,84(sp)
 4024cbc:	000d883a 	mov	r6,zero
 4024cc0:	01cff834 	movhi	r7,16352
 4024cc4:	402b5740 	call	402b574 <__adddf3>
 4024cc8:	880d883a 	mov	r6,r17
 4024ccc:	a00f883a 	mov	r7,r20
 4024cd0:	1009883a 	mov	r4,r2
 4024cd4:	180b883a 	mov	r5,r3
 4024cd8:	402c9540 	call	402c954 <__ledf2>
 4024cdc:	10003e0e 	bge	r2,zero,4024dd8 <_dtoa_r+0x1548>
 4024ce0:	d9001317 	ldw	r4,76(sp)
 4024ce4:	bd3fffc3 	ldbu	r20,-1(r23)
 4024ce8:	d9000515 	stw	r4,20(sp)
 4024cec:	003d3b06 	br	40241dc <_gp+0xfffe9a78>
 4024cf0:	0027883a 	mov	r19,zero
 4024cf4:	003f1b06 	br	4024964 <_gp+0xfffea200>
 4024cf8:	d8800817 	ldw	r2,32(sp)
 4024cfc:	11e9c83a 	sub	r20,r2,r7
 4024d00:	0005883a 	mov	r2,zero
 4024d04:	003d5406 	br	4024258 <_gp+0xfffe9af4>
 4024d08:	00800044 	movi	r2,1
 4024d0c:	003dc706 	br	402442c <_gp+0xfffe9cc8>
 4024d10:	d8c00217 	ldw	r3,8(sp)
 4024d14:	00800d84 	movi	r2,54
 4024d18:	dd400a17 	ldw	r21,40(sp)
 4024d1c:	10c5c83a 	sub	r2,r2,r3
 4024d20:	dd000817 	ldw	r20,32(sp)
 4024d24:	003d4c06 	br	4024258 <_gp+0xfffe9af4>
 4024d28:	dc800f15 	stw	r18,60(sp)
 4024d2c:	dcc01015 	stw	r19,64(sp)
 4024d30:	04000084 	movi	r16,2
 4024d34:	003bed06 	br	4023cec <_gp+0xfffe9588>
 4024d38:	d9000617 	ldw	r4,24(sp)
 4024d3c:	203f0d26 	beq	r4,zero,4024974 <_gp+0xfffea210>
 4024d40:	d9800c17 	ldw	r6,48(sp)
 4024d44:	01bcab0e 	bge	zero,r6,4023ff4 <_gp+0xfffe9890>
 4024d48:	d9401017 	ldw	r5,64(sp)
 4024d4c:	d9000f17 	ldw	r4,60(sp)
 4024d50:	000d883a 	mov	r6,zero
 4024d54:	01d00934 	movhi	r7,16420
 4024d58:	402ca480 	call	402ca48 <__muldf3>
 4024d5c:	81000044 	addi	r4,r16,1
 4024d60:	d8800f15 	stw	r2,60(sp)
 4024d64:	d8c01015 	stw	r3,64(sp)
 4024d68:	402dc300 	call	402dc30 <__floatsidf>
 4024d6c:	d9800f17 	ldw	r6,60(sp)
 4024d70:	d9c01017 	ldw	r7,64(sp)
 4024d74:	1009883a 	mov	r4,r2
 4024d78:	180b883a 	mov	r5,r3
 4024d7c:	402ca480 	call	402ca48 <__muldf3>
 4024d80:	01d00734 	movhi	r7,16412
 4024d84:	000d883a 	mov	r6,zero
 4024d88:	1009883a 	mov	r4,r2
 4024d8c:	180b883a 	mov	r5,r3
 4024d90:	402b5740 	call	402b574 <__adddf3>
 4024d94:	d9c00517 	ldw	r7,20(sp)
 4024d98:	047f3034 	movhi	r17,64704
 4024d9c:	1021883a 	mov	r16,r2
 4024da0:	39ffffc4 	addi	r7,r7,-1
 4024da4:	d9c01315 	stw	r7,76(sp)
 4024da8:	1c63883a 	add	r17,r3,r17
 4024dac:	db000c17 	ldw	r12,48(sp)
 4024db0:	003bea06 	br	4023d5c <_gp+0xfffe95f8>
 4024db4:	dc000915 	stw	r16,36(sp)
 4024db8:	003e0e06 	br	40245f4 <_gp+0xfffe9e90>
 4024dbc:	01000e44 	movi	r4,57
 4024dc0:	8825883a 	mov	r18,r17
 4024dc4:	9dc00044 	addi	r23,r19,1
 4024dc8:	99000005 	stb	r4,0(r19)
 4024dcc:	a023883a 	mov	r17,r20
 4024dd0:	dc000915 	stw	r16,36(sp)
 4024dd4:	003da406 	br	4024468 <_gp+0xfffe9d04>
 4024dd8:	d9801417 	ldw	r6,80(sp)
 4024ddc:	d9c01517 	ldw	r7,84(sp)
 4024de0:	0009883a 	mov	r4,zero
 4024de4:	014ff834 	movhi	r5,16352
 4024de8:	402d2b40 	call	402d2b4 <__subdf3>
 4024dec:	880d883a 	mov	r6,r17
 4024df0:	a00f883a 	mov	r7,r20
 4024df4:	1009883a 	mov	r4,r2
 4024df8:	180b883a 	mov	r5,r3
 4024dfc:	402c8780 	call	402c878 <__gedf2>
 4024e00:	00bc7c0e 	bge	zero,r2,4023ff4 <_gp+0xfffe9890>
 4024e04:	01000c04 	movi	r4,48
 4024e08:	00000106 	br	4024e10 <_dtoa_r+0x1580>
 4024e0c:	102f883a 	mov	r23,r2
 4024e10:	b8bfffc4 	addi	r2,r23,-1
 4024e14:	10c00007 	ldb	r3,0(r2)
 4024e18:	193ffc26 	beq	r3,r4,4024e0c <_gp+0xfffea6a8>
 4024e1c:	d9801317 	ldw	r6,76(sp)
 4024e20:	d9800515 	stw	r6,20(sp)
 4024e24:	003c4406 	br	4023f38 <_gp+0xfffe97d4>
 4024e28:	d9801317 	ldw	r6,76(sp)
 4024e2c:	d9800515 	stw	r6,20(sp)
 4024e30:	003cea06 	br	40241dc <_gp+0xfffe9a78>
 4024e34:	dd800f17 	ldw	r22,60(sp)
 4024e38:	dcc01017 	ldw	r19,64(sp)
 4024e3c:	dc801217 	ldw	r18,72(sp)
 4024e40:	003c6c06 	br	4023ff4 <_gp+0xfffe9890>
 4024e44:	903e031e 	bne	r18,zero,4024654 <_gp+0xfffe9ef0>
 4024e48:	003ebb06 	br	4024938 <_gp+0xfffea1d4>
 4024e4c:	103e6c1e 	bne	r2,zero,4024800 <_gp+0xfffea09c>
 4024e50:	4080004c 	andi	r2,r8,1
 4024e54:	103e6a26 	beq	r2,zero,4024800 <_gp+0xfffea09c>
 4024e58:	003e6606 	br	40247f4 <_gp+0xfffea090>
 4024e5c:	d8c00317 	ldw	r3,12(sp)
 4024e60:	00800084 	movi	r2,2
 4024e64:	10c02916 	blt	r2,r3,4024f0c <_dtoa_r+0x167c>
 4024e68:	d9000c17 	ldw	r4,48(sp)
 4024e6c:	003e8806 	br	4024890 <_gp+0xfffea12c>
 4024e70:	04000084 	movi	r16,2
 4024e74:	003b9d06 	br	4023cec <_gp+0xfffe9588>
 4024e78:	d9001317 	ldw	r4,76(sp)
 4024e7c:	d9000515 	stw	r4,20(sp)
 4024e80:	003cd606 	br	40241dc <_gp+0xfffe9a78>
 4024e84:	d8801317 	ldw	r2,76(sp)
 4024e88:	d8800515 	stw	r2,20(sp)
 4024e8c:	003c2a06 	br	4023f38 <_gp+0xfffe97d4>
 4024e90:	d9800317 	ldw	r6,12(sp)
 4024e94:	00800084 	movi	r2,2
 4024e98:	11801516 	blt	r2,r6,4024ef0 <_dtoa_r+0x1660>
 4024e9c:	d9c00c17 	ldw	r7,48(sp)
 4024ea0:	d9c00615 	stw	r7,24(sp)
 4024ea4:	003df706 	br	4024684 <_gp+0xfffe9f20>
 4024ea8:	193d3926 	beq	r3,r4,4024390 <_gp+0xfffe9c2c>
 4024eac:	00c00f04 	movi	r3,60
 4024eb0:	1885c83a 	sub	r2,r3,r2
 4024eb4:	003ddf06 	br	4024634 <_gp+0xfffe9ed0>
 4024eb8:	e009883a 	mov	r4,fp
 4024ebc:	e0001115 	stw	zero,68(fp)
 4024ec0:	000b883a 	mov	r5,zero
 4024ec4:	4026e000 	call	4026e00 <_Balloc>
 4024ec8:	d8800715 	stw	r2,28(sp)
 4024ecc:	d8c00717 	ldw	r3,28(sp)
 4024ed0:	00bfffc4 	movi	r2,-1
 4024ed4:	01000044 	movi	r4,1
 4024ed8:	d8800c15 	stw	r2,48(sp)
 4024edc:	e0c01015 	stw	r3,64(fp)
 4024ee0:	d9000b15 	stw	r4,44(sp)
 4024ee4:	d8800615 	stw	r2,24(sp)
 4024ee8:	d8002215 	stw	zero,136(sp)
 4024eec:	003c4106 	br	4023ff4 <_gp+0xfffe9890>
 4024ef0:	d8c00c17 	ldw	r3,48(sp)
 4024ef4:	d8c00615 	stw	r3,24(sp)
 4024ef8:	003e7006 	br	40248bc <_gp+0xfffea158>
 4024efc:	04400044 	movi	r17,1
 4024f00:	003b2006 	br	4023b84 <_gp+0xfffe9420>
 4024f04:	000b883a 	mov	r5,zero
 4024f08:	003b3d06 	br	4023c00 <_gp+0xfffe949c>
 4024f0c:	d8800c17 	ldw	r2,48(sp)
 4024f10:	d8800615 	stw	r2,24(sp)
 4024f14:	003e6906 	br	40248bc <_gp+0xfffea158>

04024f18 <__sflush_r>:
 4024f18:	2880030b 	ldhu	r2,12(r5)
 4024f1c:	defffb04 	addi	sp,sp,-20
 4024f20:	dcc00315 	stw	r19,12(sp)
 4024f24:	dc400115 	stw	r17,4(sp)
 4024f28:	dfc00415 	stw	ra,16(sp)
 4024f2c:	dc800215 	stw	r18,8(sp)
 4024f30:	dc000015 	stw	r16,0(sp)
 4024f34:	10c0020c 	andi	r3,r2,8
 4024f38:	2823883a 	mov	r17,r5
 4024f3c:	2027883a 	mov	r19,r4
 4024f40:	1800311e 	bne	r3,zero,4025008 <__sflush_r+0xf0>
 4024f44:	28c00117 	ldw	r3,4(r5)
 4024f48:	10820014 	ori	r2,r2,2048
 4024f4c:	2880030d 	sth	r2,12(r5)
 4024f50:	00c04b0e 	bge	zero,r3,4025080 <__sflush_r+0x168>
 4024f54:	8a000a17 	ldw	r8,40(r17)
 4024f58:	40002326 	beq	r8,zero,4024fe8 <__sflush_r+0xd0>
 4024f5c:	9c000017 	ldw	r16,0(r19)
 4024f60:	10c4000c 	andi	r3,r2,4096
 4024f64:	98000015 	stw	zero,0(r19)
 4024f68:	18004826 	beq	r3,zero,402508c <__sflush_r+0x174>
 4024f6c:	89801417 	ldw	r6,80(r17)
 4024f70:	10c0010c 	andi	r3,r2,4
 4024f74:	18000626 	beq	r3,zero,4024f90 <__sflush_r+0x78>
 4024f78:	88c00117 	ldw	r3,4(r17)
 4024f7c:	88800c17 	ldw	r2,48(r17)
 4024f80:	30cdc83a 	sub	r6,r6,r3
 4024f84:	10000226 	beq	r2,zero,4024f90 <__sflush_r+0x78>
 4024f88:	88800f17 	ldw	r2,60(r17)
 4024f8c:	308dc83a 	sub	r6,r6,r2
 4024f90:	89400717 	ldw	r5,28(r17)
 4024f94:	000f883a 	mov	r7,zero
 4024f98:	9809883a 	mov	r4,r19
 4024f9c:	403ee83a 	callr	r8
 4024fa0:	00ffffc4 	movi	r3,-1
 4024fa4:	10c04426 	beq	r2,r3,40250b8 <__sflush_r+0x1a0>
 4024fa8:	88c0030b 	ldhu	r3,12(r17)
 4024fac:	89000417 	ldw	r4,16(r17)
 4024fb0:	88000115 	stw	zero,4(r17)
 4024fb4:	197dffcc 	andi	r5,r3,63487
 4024fb8:	8940030d 	sth	r5,12(r17)
 4024fbc:	89000015 	stw	r4,0(r17)
 4024fc0:	18c4000c 	andi	r3,r3,4096
 4024fc4:	18002c1e 	bne	r3,zero,4025078 <__sflush_r+0x160>
 4024fc8:	89400c17 	ldw	r5,48(r17)
 4024fcc:	9c000015 	stw	r16,0(r19)
 4024fd0:	28000526 	beq	r5,zero,4024fe8 <__sflush_r+0xd0>
 4024fd4:	88801004 	addi	r2,r17,64
 4024fd8:	28800226 	beq	r5,r2,4024fe4 <__sflush_r+0xcc>
 4024fdc:	9809883a 	mov	r4,r19
 4024fe0:	40256940 	call	4025694 <_free_r>
 4024fe4:	88000c15 	stw	zero,48(r17)
 4024fe8:	0005883a 	mov	r2,zero
 4024fec:	dfc00417 	ldw	ra,16(sp)
 4024ff0:	dcc00317 	ldw	r19,12(sp)
 4024ff4:	dc800217 	ldw	r18,8(sp)
 4024ff8:	dc400117 	ldw	r17,4(sp)
 4024ffc:	dc000017 	ldw	r16,0(sp)
 4025000:	dec00504 	addi	sp,sp,20
 4025004:	f800283a 	ret
 4025008:	2c800417 	ldw	r18,16(r5)
 402500c:	903ff626 	beq	r18,zero,4024fe8 <_gp+0xfffea884>
 4025010:	2c000017 	ldw	r16,0(r5)
 4025014:	108000cc 	andi	r2,r2,3
 4025018:	2c800015 	stw	r18,0(r5)
 402501c:	84a1c83a 	sub	r16,r16,r18
 4025020:	1000131e 	bne	r2,zero,4025070 <__sflush_r+0x158>
 4025024:	28800517 	ldw	r2,20(r5)
 4025028:	88800215 	stw	r2,8(r17)
 402502c:	04000316 	blt	zero,r16,402503c <__sflush_r+0x124>
 4025030:	003fed06 	br	4024fe8 <_gp+0xfffea884>
 4025034:	90a5883a 	add	r18,r18,r2
 4025038:	043feb0e 	bge	zero,r16,4024fe8 <_gp+0xfffea884>
 402503c:	88800917 	ldw	r2,36(r17)
 4025040:	89400717 	ldw	r5,28(r17)
 4025044:	800f883a 	mov	r7,r16
 4025048:	900d883a 	mov	r6,r18
 402504c:	9809883a 	mov	r4,r19
 4025050:	103ee83a 	callr	r2
 4025054:	80a1c83a 	sub	r16,r16,r2
 4025058:	00bff616 	blt	zero,r2,4025034 <_gp+0xfffea8d0>
 402505c:	88c0030b 	ldhu	r3,12(r17)
 4025060:	00bfffc4 	movi	r2,-1
 4025064:	18c01014 	ori	r3,r3,64
 4025068:	88c0030d 	sth	r3,12(r17)
 402506c:	003fdf06 	br	4024fec <_gp+0xfffea888>
 4025070:	0005883a 	mov	r2,zero
 4025074:	003fec06 	br	4025028 <_gp+0xfffea8c4>
 4025078:	88801415 	stw	r2,80(r17)
 402507c:	003fd206 	br	4024fc8 <_gp+0xfffea864>
 4025080:	28c00f17 	ldw	r3,60(r5)
 4025084:	00ffb316 	blt	zero,r3,4024f54 <_gp+0xfffea7f0>
 4025088:	003fd706 	br	4024fe8 <_gp+0xfffea884>
 402508c:	89400717 	ldw	r5,28(r17)
 4025090:	000d883a 	mov	r6,zero
 4025094:	01c00044 	movi	r7,1
 4025098:	9809883a 	mov	r4,r19
 402509c:	403ee83a 	callr	r8
 40250a0:	100d883a 	mov	r6,r2
 40250a4:	00bfffc4 	movi	r2,-1
 40250a8:	30801426 	beq	r6,r2,40250fc <__sflush_r+0x1e4>
 40250ac:	8880030b 	ldhu	r2,12(r17)
 40250b0:	8a000a17 	ldw	r8,40(r17)
 40250b4:	003fae06 	br	4024f70 <_gp+0xfffea80c>
 40250b8:	98c00017 	ldw	r3,0(r19)
 40250bc:	183fba26 	beq	r3,zero,4024fa8 <_gp+0xfffea844>
 40250c0:	01000744 	movi	r4,29
 40250c4:	19000626 	beq	r3,r4,40250e0 <__sflush_r+0x1c8>
 40250c8:	01000584 	movi	r4,22
 40250cc:	19000426 	beq	r3,r4,40250e0 <__sflush_r+0x1c8>
 40250d0:	88c0030b 	ldhu	r3,12(r17)
 40250d4:	18c01014 	ori	r3,r3,64
 40250d8:	88c0030d 	sth	r3,12(r17)
 40250dc:	003fc306 	br	4024fec <_gp+0xfffea888>
 40250e0:	8880030b 	ldhu	r2,12(r17)
 40250e4:	88c00417 	ldw	r3,16(r17)
 40250e8:	88000115 	stw	zero,4(r17)
 40250ec:	10bdffcc 	andi	r2,r2,63487
 40250f0:	8880030d 	sth	r2,12(r17)
 40250f4:	88c00015 	stw	r3,0(r17)
 40250f8:	003fb306 	br	4024fc8 <_gp+0xfffea864>
 40250fc:	98800017 	ldw	r2,0(r19)
 4025100:	103fea26 	beq	r2,zero,40250ac <_gp+0xfffea948>
 4025104:	00c00744 	movi	r3,29
 4025108:	10c00226 	beq	r2,r3,4025114 <__sflush_r+0x1fc>
 402510c:	00c00584 	movi	r3,22
 4025110:	10c0031e 	bne	r2,r3,4025120 <__sflush_r+0x208>
 4025114:	9c000015 	stw	r16,0(r19)
 4025118:	0005883a 	mov	r2,zero
 402511c:	003fb306 	br	4024fec <_gp+0xfffea888>
 4025120:	88c0030b 	ldhu	r3,12(r17)
 4025124:	3005883a 	mov	r2,r6
 4025128:	18c01014 	ori	r3,r3,64
 402512c:	88c0030d 	sth	r3,12(r17)
 4025130:	003fae06 	br	4024fec <_gp+0xfffea888>

04025134 <_fflush_r>:
 4025134:	defffd04 	addi	sp,sp,-12
 4025138:	dc000115 	stw	r16,4(sp)
 402513c:	dfc00215 	stw	ra,8(sp)
 4025140:	2021883a 	mov	r16,r4
 4025144:	20000226 	beq	r4,zero,4025150 <_fflush_r+0x1c>
 4025148:	20800e17 	ldw	r2,56(r4)
 402514c:	10000c26 	beq	r2,zero,4025180 <_fflush_r+0x4c>
 4025150:	2880030f 	ldh	r2,12(r5)
 4025154:	1000051e 	bne	r2,zero,402516c <_fflush_r+0x38>
 4025158:	0005883a 	mov	r2,zero
 402515c:	dfc00217 	ldw	ra,8(sp)
 4025160:	dc000117 	ldw	r16,4(sp)
 4025164:	dec00304 	addi	sp,sp,12
 4025168:	f800283a 	ret
 402516c:	8009883a 	mov	r4,r16
 4025170:	dfc00217 	ldw	ra,8(sp)
 4025174:	dc000117 	ldw	r16,4(sp)
 4025178:	dec00304 	addi	sp,sp,12
 402517c:	4024f181 	jmpi	4024f18 <__sflush_r>
 4025180:	d9400015 	stw	r5,0(sp)
 4025184:	40255200 	call	4025520 <__sinit>
 4025188:	d9400017 	ldw	r5,0(sp)
 402518c:	003ff006 	br	4025150 <_gp+0xfffea9ec>

04025190 <fflush>:
 4025190:	20000526 	beq	r4,zero,40251a8 <fflush+0x18>
 4025194:	008100f4 	movhi	r2,1027
 4025198:	1089da04 	addi	r2,r2,10088
 402519c:	200b883a 	mov	r5,r4
 40251a0:	11000017 	ldw	r4,0(r2)
 40251a4:	40251341 	jmpi	4025134 <_fflush_r>
 40251a8:	008100f4 	movhi	r2,1027
 40251ac:	1089d904 	addi	r2,r2,10084
 40251b0:	11000017 	ldw	r4,0(r2)
 40251b4:	014100b4 	movhi	r5,1026
 40251b8:	29544d04 	addi	r5,r5,20788
 40251bc:	4025f301 	jmpi	4025f30 <_fwalk_reent>

040251c0 <__fp_unlock>:
 40251c0:	0005883a 	mov	r2,zero
 40251c4:	f800283a 	ret

040251c8 <_cleanup_r>:
 40251c8:	014100f4 	movhi	r5,1027
 40251cc:	29689104 	addi	r5,r5,-23996
 40251d0:	4025f301 	jmpi	4025f30 <_fwalk_reent>

040251d4 <__sinit.part.1>:
 40251d4:	defff704 	addi	sp,sp,-36
 40251d8:	00c100b4 	movhi	r3,1026
 40251dc:	dfc00815 	stw	ra,32(sp)
 40251e0:	ddc00715 	stw	r23,28(sp)
 40251e4:	dd800615 	stw	r22,24(sp)
 40251e8:	dd400515 	stw	r21,20(sp)
 40251ec:	dd000415 	stw	r20,16(sp)
 40251f0:	dcc00315 	stw	r19,12(sp)
 40251f4:	dc800215 	stw	r18,8(sp)
 40251f8:	dc400115 	stw	r17,4(sp)
 40251fc:	dc000015 	stw	r16,0(sp)
 4025200:	18d47204 	addi	r3,r3,20936
 4025204:	24000117 	ldw	r16,4(r4)
 4025208:	20c00f15 	stw	r3,60(r4)
 402520c:	2080bb04 	addi	r2,r4,748
 4025210:	00c000c4 	movi	r3,3
 4025214:	20c0b915 	stw	r3,740(r4)
 4025218:	2080ba15 	stw	r2,744(r4)
 402521c:	2000b815 	stw	zero,736(r4)
 4025220:	05c00204 	movi	r23,8
 4025224:	00800104 	movi	r2,4
 4025228:	2025883a 	mov	r18,r4
 402522c:	b80d883a 	mov	r6,r23
 4025230:	81001704 	addi	r4,r16,92
 4025234:	000b883a 	mov	r5,zero
 4025238:	80000015 	stw	zero,0(r16)
 402523c:	80000115 	stw	zero,4(r16)
 4025240:	80000215 	stw	zero,8(r16)
 4025244:	8080030d 	sth	r2,12(r16)
 4025248:	80001915 	stw	zero,100(r16)
 402524c:	8000038d 	sth	zero,14(r16)
 4025250:	80000415 	stw	zero,16(r16)
 4025254:	80000515 	stw	zero,20(r16)
 4025258:	80000615 	stw	zero,24(r16)
 402525c:	4026cd80 	call	4026cd8 <memset>
 4025260:	058100f4 	movhi	r22,1027
 4025264:	94400217 	ldw	r17,8(r18)
 4025268:	054100f4 	movhi	r21,1027
 402526c:	050100f4 	movhi	r20,1027
 4025270:	04c100f4 	movhi	r19,1027
 4025274:	b5a19304 	addi	r22,r22,-31156
 4025278:	ad61aa04 	addi	r21,r21,-31064
 402527c:	a521c904 	addi	r20,r20,-30940
 4025280:	9ce1e004 	addi	r19,r19,-30848
 4025284:	85800815 	stw	r22,32(r16)
 4025288:	85400915 	stw	r21,36(r16)
 402528c:	85000a15 	stw	r20,40(r16)
 4025290:	84c00b15 	stw	r19,44(r16)
 4025294:	84000715 	stw	r16,28(r16)
 4025298:	00800284 	movi	r2,10
 402529c:	8880030d 	sth	r2,12(r17)
 40252a0:	00800044 	movi	r2,1
 40252a4:	b80d883a 	mov	r6,r23
 40252a8:	89001704 	addi	r4,r17,92
 40252ac:	000b883a 	mov	r5,zero
 40252b0:	88000015 	stw	zero,0(r17)
 40252b4:	88000115 	stw	zero,4(r17)
 40252b8:	88000215 	stw	zero,8(r17)
 40252bc:	88001915 	stw	zero,100(r17)
 40252c0:	8880038d 	sth	r2,14(r17)
 40252c4:	88000415 	stw	zero,16(r17)
 40252c8:	88000515 	stw	zero,20(r17)
 40252cc:	88000615 	stw	zero,24(r17)
 40252d0:	4026cd80 	call	4026cd8 <memset>
 40252d4:	94000317 	ldw	r16,12(r18)
 40252d8:	00800484 	movi	r2,18
 40252dc:	8c400715 	stw	r17,28(r17)
 40252e0:	8d800815 	stw	r22,32(r17)
 40252e4:	8d400915 	stw	r21,36(r17)
 40252e8:	8d000a15 	stw	r20,40(r17)
 40252ec:	8cc00b15 	stw	r19,44(r17)
 40252f0:	8080030d 	sth	r2,12(r16)
 40252f4:	00800084 	movi	r2,2
 40252f8:	80000015 	stw	zero,0(r16)
 40252fc:	80000115 	stw	zero,4(r16)
 4025300:	80000215 	stw	zero,8(r16)
 4025304:	80001915 	stw	zero,100(r16)
 4025308:	8080038d 	sth	r2,14(r16)
 402530c:	80000415 	stw	zero,16(r16)
 4025310:	80000515 	stw	zero,20(r16)
 4025314:	80000615 	stw	zero,24(r16)
 4025318:	b80d883a 	mov	r6,r23
 402531c:	000b883a 	mov	r5,zero
 4025320:	81001704 	addi	r4,r16,92
 4025324:	4026cd80 	call	4026cd8 <memset>
 4025328:	00800044 	movi	r2,1
 402532c:	84000715 	stw	r16,28(r16)
 4025330:	85800815 	stw	r22,32(r16)
 4025334:	85400915 	stw	r21,36(r16)
 4025338:	85000a15 	stw	r20,40(r16)
 402533c:	84c00b15 	stw	r19,44(r16)
 4025340:	90800e15 	stw	r2,56(r18)
 4025344:	dfc00817 	ldw	ra,32(sp)
 4025348:	ddc00717 	ldw	r23,28(sp)
 402534c:	dd800617 	ldw	r22,24(sp)
 4025350:	dd400517 	ldw	r21,20(sp)
 4025354:	dd000417 	ldw	r20,16(sp)
 4025358:	dcc00317 	ldw	r19,12(sp)
 402535c:	dc800217 	ldw	r18,8(sp)
 4025360:	dc400117 	ldw	r17,4(sp)
 4025364:	dc000017 	ldw	r16,0(sp)
 4025368:	dec00904 	addi	sp,sp,36
 402536c:	f800283a 	ret

04025370 <__fp_lock>:
 4025370:	0005883a 	mov	r2,zero
 4025374:	f800283a 	ret

04025378 <__sfmoreglue>:
 4025378:	defffc04 	addi	sp,sp,-16
 402537c:	dc800215 	stw	r18,8(sp)
 4025380:	2825883a 	mov	r18,r5
 4025384:	dc000015 	stw	r16,0(sp)
 4025388:	01401a04 	movi	r5,104
 402538c:	2021883a 	mov	r16,r4
 4025390:	913fffc4 	addi	r4,r18,-1
 4025394:	dfc00315 	stw	ra,12(sp)
 4025398:	dc400115 	stw	r17,4(sp)
 402539c:	4020d7c0 	call	4020d7c <__mulsi3>
 40253a0:	8009883a 	mov	r4,r16
 40253a4:	11401d04 	addi	r5,r2,116
 40253a8:	1023883a 	mov	r17,r2
 40253ac:	402628c0 	call	402628c <_malloc_r>
 40253b0:	1021883a 	mov	r16,r2
 40253b4:	10000726 	beq	r2,zero,40253d4 <__sfmoreglue+0x5c>
 40253b8:	11000304 	addi	r4,r2,12
 40253bc:	10000015 	stw	zero,0(r2)
 40253c0:	14800115 	stw	r18,4(r2)
 40253c4:	11000215 	stw	r4,8(r2)
 40253c8:	89801a04 	addi	r6,r17,104
 40253cc:	000b883a 	mov	r5,zero
 40253d0:	4026cd80 	call	4026cd8 <memset>
 40253d4:	8005883a 	mov	r2,r16
 40253d8:	dfc00317 	ldw	ra,12(sp)
 40253dc:	dc800217 	ldw	r18,8(sp)
 40253e0:	dc400117 	ldw	r17,4(sp)
 40253e4:	dc000017 	ldw	r16,0(sp)
 40253e8:	dec00404 	addi	sp,sp,16
 40253ec:	f800283a 	ret

040253f0 <__sfp>:
 40253f0:	defffb04 	addi	sp,sp,-20
 40253f4:	dc000015 	stw	r16,0(sp)
 40253f8:	040100f4 	movhi	r16,1027
 40253fc:	8409d904 	addi	r16,r16,10084
 4025400:	dcc00315 	stw	r19,12(sp)
 4025404:	2027883a 	mov	r19,r4
 4025408:	81000017 	ldw	r4,0(r16)
 402540c:	dfc00415 	stw	ra,16(sp)
 4025410:	dc800215 	stw	r18,8(sp)
 4025414:	20800e17 	ldw	r2,56(r4)
 4025418:	dc400115 	stw	r17,4(sp)
 402541c:	1000021e 	bne	r2,zero,4025428 <__sfp+0x38>
 4025420:	40251d40 	call	40251d4 <__sinit.part.1>
 4025424:	81000017 	ldw	r4,0(r16)
 4025428:	2480b804 	addi	r18,r4,736
 402542c:	047fffc4 	movi	r17,-1
 4025430:	91000117 	ldw	r4,4(r18)
 4025434:	94000217 	ldw	r16,8(r18)
 4025438:	213fffc4 	addi	r4,r4,-1
 402543c:	20000a16 	blt	r4,zero,4025468 <__sfp+0x78>
 4025440:	8080030f 	ldh	r2,12(r16)
 4025444:	10000c26 	beq	r2,zero,4025478 <__sfp+0x88>
 4025448:	80c01d04 	addi	r3,r16,116
 402544c:	00000206 	br	4025458 <__sfp+0x68>
 4025450:	18bfe60f 	ldh	r2,-104(r3)
 4025454:	10000826 	beq	r2,zero,4025478 <__sfp+0x88>
 4025458:	213fffc4 	addi	r4,r4,-1
 402545c:	1c3ffd04 	addi	r16,r3,-12
 4025460:	18c01a04 	addi	r3,r3,104
 4025464:	247ffa1e 	bne	r4,r17,4025450 <_gp+0xfffeacec>
 4025468:	90800017 	ldw	r2,0(r18)
 402546c:	10001d26 	beq	r2,zero,40254e4 <__sfp+0xf4>
 4025470:	1025883a 	mov	r18,r2
 4025474:	003fee06 	br	4025430 <_gp+0xfffeaccc>
 4025478:	00bfffc4 	movi	r2,-1
 402547c:	8080038d 	sth	r2,14(r16)
 4025480:	00800044 	movi	r2,1
 4025484:	8080030d 	sth	r2,12(r16)
 4025488:	80001915 	stw	zero,100(r16)
 402548c:	80000015 	stw	zero,0(r16)
 4025490:	80000215 	stw	zero,8(r16)
 4025494:	80000115 	stw	zero,4(r16)
 4025498:	80000415 	stw	zero,16(r16)
 402549c:	80000515 	stw	zero,20(r16)
 40254a0:	80000615 	stw	zero,24(r16)
 40254a4:	01800204 	movi	r6,8
 40254a8:	000b883a 	mov	r5,zero
 40254ac:	81001704 	addi	r4,r16,92
 40254b0:	4026cd80 	call	4026cd8 <memset>
 40254b4:	8005883a 	mov	r2,r16
 40254b8:	80000c15 	stw	zero,48(r16)
 40254bc:	80000d15 	stw	zero,52(r16)
 40254c0:	80001115 	stw	zero,68(r16)
 40254c4:	80001215 	stw	zero,72(r16)
 40254c8:	dfc00417 	ldw	ra,16(sp)
 40254cc:	dcc00317 	ldw	r19,12(sp)
 40254d0:	dc800217 	ldw	r18,8(sp)
 40254d4:	dc400117 	ldw	r17,4(sp)
 40254d8:	dc000017 	ldw	r16,0(sp)
 40254dc:	dec00504 	addi	sp,sp,20
 40254e0:	f800283a 	ret
 40254e4:	01400104 	movi	r5,4
 40254e8:	9809883a 	mov	r4,r19
 40254ec:	40253780 	call	4025378 <__sfmoreglue>
 40254f0:	90800015 	stw	r2,0(r18)
 40254f4:	103fde1e 	bne	r2,zero,4025470 <_gp+0xfffead0c>
 40254f8:	00800304 	movi	r2,12
 40254fc:	98800015 	stw	r2,0(r19)
 4025500:	0005883a 	mov	r2,zero
 4025504:	003ff006 	br	40254c8 <_gp+0xfffead64>

04025508 <_cleanup>:
 4025508:	008100f4 	movhi	r2,1027
 402550c:	1089d904 	addi	r2,r2,10084
 4025510:	11000017 	ldw	r4,0(r2)
 4025514:	014100f4 	movhi	r5,1027
 4025518:	29689104 	addi	r5,r5,-23996
 402551c:	4025f301 	jmpi	4025f30 <_fwalk_reent>

04025520 <__sinit>:
 4025520:	20800e17 	ldw	r2,56(r4)
 4025524:	10000126 	beq	r2,zero,402552c <__sinit+0xc>
 4025528:	f800283a 	ret
 402552c:	40251d41 	jmpi	40251d4 <__sinit.part.1>

04025530 <__sfp_lock_acquire>:
 4025530:	f800283a 	ret

04025534 <__sfp_lock_release>:
 4025534:	f800283a 	ret

04025538 <__sinit_lock_acquire>:
 4025538:	f800283a 	ret

0402553c <__sinit_lock_release>:
 402553c:	f800283a 	ret

04025540 <__fp_lock_all>:
 4025540:	008100f4 	movhi	r2,1027
 4025544:	1089da04 	addi	r2,r2,10088
 4025548:	11000017 	ldw	r4,0(r2)
 402554c:	014100b4 	movhi	r5,1026
 4025550:	2954dc04 	addi	r5,r5,21360
 4025554:	4025e6c1 	jmpi	4025e6c <_fwalk>

04025558 <__fp_unlock_all>:
 4025558:	008100f4 	movhi	r2,1027
 402555c:	1089da04 	addi	r2,r2,10088
 4025560:	11000017 	ldw	r4,0(r2)
 4025564:	014100b4 	movhi	r5,1026
 4025568:	29547004 	addi	r5,r5,20928
 402556c:	4025e6c1 	jmpi	4025e6c <_fwalk>

04025570 <_malloc_trim_r>:
 4025570:	defffb04 	addi	sp,sp,-20
 4025574:	dcc00315 	stw	r19,12(sp)
 4025578:	04c100f4 	movhi	r19,1027
 402557c:	dc800215 	stw	r18,8(sp)
 4025580:	dc400115 	stw	r17,4(sp)
 4025584:	dc000015 	stw	r16,0(sp)
 4025588:	dfc00415 	stw	ra,16(sp)
 402558c:	2821883a 	mov	r16,r5
 4025590:	9cc45504 	addi	r19,r19,4436
 4025594:	2025883a 	mov	r18,r4
 4025598:	402e4240 	call	402e424 <__malloc_lock>
 402559c:	98800217 	ldw	r2,8(r19)
 40255a0:	14400117 	ldw	r17,4(r2)
 40255a4:	00bfff04 	movi	r2,-4
 40255a8:	88a2703a 	and	r17,r17,r2
 40255ac:	8c21c83a 	sub	r16,r17,r16
 40255b0:	8403fbc4 	addi	r16,r16,4079
 40255b4:	8020d33a 	srli	r16,r16,12
 40255b8:	0083ffc4 	movi	r2,4095
 40255bc:	843fffc4 	addi	r16,r16,-1
 40255c0:	8020933a 	slli	r16,r16,12
 40255c4:	1400060e 	bge	r2,r16,40255e0 <_malloc_trim_r+0x70>
 40255c8:	000b883a 	mov	r5,zero
 40255cc:	9009883a 	mov	r4,r18
 40255d0:	40285f80 	call	40285f8 <_sbrk_r>
 40255d4:	98c00217 	ldw	r3,8(r19)
 40255d8:	1c47883a 	add	r3,r3,r17
 40255dc:	10c00a26 	beq	r2,r3,4025608 <_malloc_trim_r+0x98>
 40255e0:	9009883a 	mov	r4,r18
 40255e4:	402e4480 	call	402e448 <__malloc_unlock>
 40255e8:	0005883a 	mov	r2,zero
 40255ec:	dfc00417 	ldw	ra,16(sp)
 40255f0:	dcc00317 	ldw	r19,12(sp)
 40255f4:	dc800217 	ldw	r18,8(sp)
 40255f8:	dc400117 	ldw	r17,4(sp)
 40255fc:	dc000017 	ldw	r16,0(sp)
 4025600:	dec00504 	addi	sp,sp,20
 4025604:	f800283a 	ret
 4025608:	040bc83a 	sub	r5,zero,r16
 402560c:	9009883a 	mov	r4,r18
 4025610:	40285f80 	call	40285f8 <_sbrk_r>
 4025614:	00ffffc4 	movi	r3,-1
 4025618:	10c00d26 	beq	r2,r3,4025650 <_malloc_trim_r+0xe0>
 402561c:	00c100f4 	movhi	r3,1027
 4025620:	18d0b204 	addi	r3,r3,17096
 4025624:	18800017 	ldw	r2,0(r3)
 4025628:	99000217 	ldw	r4,8(r19)
 402562c:	8c23c83a 	sub	r17,r17,r16
 4025630:	8c400054 	ori	r17,r17,1
 4025634:	1421c83a 	sub	r16,r2,r16
 4025638:	24400115 	stw	r17,4(r4)
 402563c:	9009883a 	mov	r4,r18
 4025640:	1c000015 	stw	r16,0(r3)
 4025644:	402e4480 	call	402e448 <__malloc_unlock>
 4025648:	00800044 	movi	r2,1
 402564c:	003fe706 	br	40255ec <_gp+0xfffeae88>
 4025650:	000b883a 	mov	r5,zero
 4025654:	9009883a 	mov	r4,r18
 4025658:	40285f80 	call	40285f8 <_sbrk_r>
 402565c:	99000217 	ldw	r4,8(r19)
 4025660:	014003c4 	movi	r5,15
 4025664:	1107c83a 	sub	r3,r2,r4
 4025668:	28ffdd0e 	bge	r5,r3,40255e0 <_gp+0xfffeae7c>
 402566c:	014100f4 	movhi	r5,1027
 4025670:	2949dc04 	addi	r5,r5,10096
 4025674:	29400017 	ldw	r5,0(r5)
 4025678:	18c00054 	ori	r3,r3,1
 402567c:	20c00115 	stw	r3,4(r4)
 4025680:	00c100f4 	movhi	r3,1027
 4025684:	1145c83a 	sub	r2,r2,r5
 4025688:	18d0b204 	addi	r3,r3,17096
 402568c:	18800015 	stw	r2,0(r3)
 4025690:	003fd306 	br	40255e0 <_gp+0xfffeae7c>

04025694 <_free_r>:
 4025694:	28004126 	beq	r5,zero,402579c <_free_r+0x108>
 4025698:	defffd04 	addi	sp,sp,-12
 402569c:	dc400115 	stw	r17,4(sp)
 40256a0:	dc000015 	stw	r16,0(sp)
 40256a4:	2023883a 	mov	r17,r4
 40256a8:	2821883a 	mov	r16,r5
 40256ac:	dfc00215 	stw	ra,8(sp)
 40256b0:	402e4240 	call	402e424 <__malloc_lock>
 40256b4:	81ffff17 	ldw	r7,-4(r16)
 40256b8:	00bfff84 	movi	r2,-2
 40256bc:	010100f4 	movhi	r4,1027
 40256c0:	81bffe04 	addi	r6,r16,-8
 40256c4:	3884703a 	and	r2,r7,r2
 40256c8:	21045504 	addi	r4,r4,4436
 40256cc:	308b883a 	add	r5,r6,r2
 40256d0:	2a400117 	ldw	r9,4(r5)
 40256d4:	22000217 	ldw	r8,8(r4)
 40256d8:	00ffff04 	movi	r3,-4
 40256dc:	48c6703a 	and	r3,r9,r3
 40256e0:	2a005726 	beq	r5,r8,4025840 <_free_r+0x1ac>
 40256e4:	28c00115 	stw	r3,4(r5)
 40256e8:	39c0004c 	andi	r7,r7,1
 40256ec:	3800091e 	bne	r7,zero,4025714 <_free_r+0x80>
 40256f0:	823ffe17 	ldw	r8,-8(r16)
 40256f4:	22400204 	addi	r9,r4,8
 40256f8:	320dc83a 	sub	r6,r6,r8
 40256fc:	31c00217 	ldw	r7,8(r6)
 4025700:	1205883a 	add	r2,r2,r8
 4025704:	3a406526 	beq	r7,r9,402589c <_free_r+0x208>
 4025708:	32000317 	ldw	r8,12(r6)
 402570c:	3a000315 	stw	r8,12(r7)
 4025710:	41c00215 	stw	r7,8(r8)
 4025714:	28cf883a 	add	r7,r5,r3
 4025718:	39c00117 	ldw	r7,4(r7)
 402571c:	39c0004c 	andi	r7,r7,1
 4025720:	38003a26 	beq	r7,zero,402580c <_free_r+0x178>
 4025724:	10c00054 	ori	r3,r2,1
 4025728:	30c00115 	stw	r3,4(r6)
 402572c:	3087883a 	add	r3,r6,r2
 4025730:	18800015 	stw	r2,0(r3)
 4025734:	00c07fc4 	movi	r3,511
 4025738:	18801936 	bltu	r3,r2,40257a0 <_free_r+0x10c>
 402573c:	1004d0fa 	srli	r2,r2,3
 4025740:	01c00044 	movi	r7,1
 4025744:	21400117 	ldw	r5,4(r4)
 4025748:	10c00044 	addi	r3,r2,1
 402574c:	18c7883a 	add	r3,r3,r3
 4025750:	1005d0ba 	srai	r2,r2,2
 4025754:	18c7883a 	add	r3,r3,r3
 4025758:	18c7883a 	add	r3,r3,r3
 402575c:	1907883a 	add	r3,r3,r4
 4025760:	3884983a 	sll	r2,r7,r2
 4025764:	19c00017 	ldw	r7,0(r3)
 4025768:	1a3ffe04 	addi	r8,r3,-8
 402576c:	1144b03a 	or	r2,r2,r5
 4025770:	32000315 	stw	r8,12(r6)
 4025774:	31c00215 	stw	r7,8(r6)
 4025778:	20800115 	stw	r2,4(r4)
 402577c:	19800015 	stw	r6,0(r3)
 4025780:	39800315 	stw	r6,12(r7)
 4025784:	8809883a 	mov	r4,r17
 4025788:	dfc00217 	ldw	ra,8(sp)
 402578c:	dc400117 	ldw	r17,4(sp)
 4025790:	dc000017 	ldw	r16,0(sp)
 4025794:	dec00304 	addi	sp,sp,12
 4025798:	402e4481 	jmpi	402e448 <__malloc_unlock>
 402579c:	f800283a 	ret
 40257a0:	100ad27a 	srli	r5,r2,9
 40257a4:	00c00104 	movi	r3,4
 40257a8:	19404a36 	bltu	r3,r5,40258d4 <_free_r+0x240>
 40257ac:	100ad1ba 	srli	r5,r2,6
 40257b0:	28c00e44 	addi	r3,r5,57
 40257b4:	18c7883a 	add	r3,r3,r3
 40257b8:	29400e04 	addi	r5,r5,56
 40257bc:	18c7883a 	add	r3,r3,r3
 40257c0:	18c7883a 	add	r3,r3,r3
 40257c4:	1909883a 	add	r4,r3,r4
 40257c8:	20c00017 	ldw	r3,0(r4)
 40257cc:	01c100f4 	movhi	r7,1027
 40257d0:	213ffe04 	addi	r4,r4,-8
 40257d4:	39c45504 	addi	r7,r7,4436
 40257d8:	20c04426 	beq	r4,r3,40258ec <_free_r+0x258>
 40257dc:	01ffff04 	movi	r7,-4
 40257e0:	19400117 	ldw	r5,4(r3)
 40257e4:	29ca703a 	and	r5,r5,r7
 40257e8:	1140022e 	bgeu	r2,r5,40257f4 <_free_r+0x160>
 40257ec:	18c00217 	ldw	r3,8(r3)
 40257f0:	20fffb1e 	bne	r4,r3,40257e0 <_gp+0xfffeb07c>
 40257f4:	19000317 	ldw	r4,12(r3)
 40257f8:	31000315 	stw	r4,12(r6)
 40257fc:	30c00215 	stw	r3,8(r6)
 4025800:	21800215 	stw	r6,8(r4)
 4025804:	19800315 	stw	r6,12(r3)
 4025808:	003fde06 	br	4025784 <_gp+0xfffeb020>
 402580c:	29c00217 	ldw	r7,8(r5)
 4025810:	10c5883a 	add	r2,r2,r3
 4025814:	00c100f4 	movhi	r3,1027
 4025818:	18c45704 	addi	r3,r3,4444
 402581c:	38c03b26 	beq	r7,r3,402590c <_free_r+0x278>
 4025820:	2a000317 	ldw	r8,12(r5)
 4025824:	11400054 	ori	r5,r2,1
 4025828:	3087883a 	add	r3,r6,r2
 402582c:	3a000315 	stw	r8,12(r7)
 4025830:	41c00215 	stw	r7,8(r8)
 4025834:	31400115 	stw	r5,4(r6)
 4025838:	18800015 	stw	r2,0(r3)
 402583c:	003fbd06 	br	4025734 <_gp+0xfffeafd0>
 4025840:	39c0004c 	andi	r7,r7,1
 4025844:	10c5883a 	add	r2,r2,r3
 4025848:	3800071e 	bne	r7,zero,4025868 <_free_r+0x1d4>
 402584c:	81fffe17 	ldw	r7,-8(r16)
 4025850:	31cdc83a 	sub	r6,r6,r7
 4025854:	30c00317 	ldw	r3,12(r6)
 4025858:	31400217 	ldw	r5,8(r6)
 402585c:	11c5883a 	add	r2,r2,r7
 4025860:	28c00315 	stw	r3,12(r5)
 4025864:	19400215 	stw	r5,8(r3)
 4025868:	10c00054 	ori	r3,r2,1
 402586c:	30c00115 	stw	r3,4(r6)
 4025870:	00c100f4 	movhi	r3,1027
 4025874:	18c9dd04 	addi	r3,r3,10100
 4025878:	18c00017 	ldw	r3,0(r3)
 402587c:	21800215 	stw	r6,8(r4)
 4025880:	10ffc036 	bltu	r2,r3,4025784 <_gp+0xfffeb020>
 4025884:	008100f4 	movhi	r2,1027
 4025888:	1090a904 	addi	r2,r2,17060
 402588c:	11400017 	ldw	r5,0(r2)
 4025890:	8809883a 	mov	r4,r17
 4025894:	40255700 	call	4025570 <_malloc_trim_r>
 4025898:	003fba06 	br	4025784 <_gp+0xfffeb020>
 402589c:	28c9883a 	add	r4,r5,r3
 40258a0:	21000117 	ldw	r4,4(r4)
 40258a4:	2100004c 	andi	r4,r4,1
 40258a8:	2000391e 	bne	r4,zero,4025990 <_free_r+0x2fc>
 40258ac:	29c00217 	ldw	r7,8(r5)
 40258b0:	29000317 	ldw	r4,12(r5)
 40258b4:	1885883a 	add	r2,r3,r2
 40258b8:	10c00054 	ori	r3,r2,1
 40258bc:	39000315 	stw	r4,12(r7)
 40258c0:	21c00215 	stw	r7,8(r4)
 40258c4:	30c00115 	stw	r3,4(r6)
 40258c8:	308d883a 	add	r6,r6,r2
 40258cc:	30800015 	stw	r2,0(r6)
 40258d0:	003fac06 	br	4025784 <_gp+0xfffeb020>
 40258d4:	00c00504 	movi	r3,20
 40258d8:	19401536 	bltu	r3,r5,4025930 <_free_r+0x29c>
 40258dc:	28c01704 	addi	r3,r5,92
 40258e0:	18c7883a 	add	r3,r3,r3
 40258e4:	294016c4 	addi	r5,r5,91
 40258e8:	003fb406 	br	40257bc <_gp+0xfffeb058>
 40258ec:	280bd0ba 	srai	r5,r5,2
 40258f0:	00c00044 	movi	r3,1
 40258f4:	38800117 	ldw	r2,4(r7)
 40258f8:	194a983a 	sll	r5,r3,r5
 40258fc:	2007883a 	mov	r3,r4
 4025900:	2884b03a 	or	r2,r5,r2
 4025904:	38800115 	stw	r2,4(r7)
 4025908:	003fbb06 	br	40257f8 <_gp+0xfffeb094>
 402590c:	21800515 	stw	r6,20(r4)
 4025910:	21800415 	stw	r6,16(r4)
 4025914:	10c00054 	ori	r3,r2,1
 4025918:	31c00315 	stw	r7,12(r6)
 402591c:	31c00215 	stw	r7,8(r6)
 4025920:	30c00115 	stw	r3,4(r6)
 4025924:	308d883a 	add	r6,r6,r2
 4025928:	30800015 	stw	r2,0(r6)
 402592c:	003f9506 	br	4025784 <_gp+0xfffeb020>
 4025930:	00c01504 	movi	r3,84
 4025934:	19400536 	bltu	r3,r5,402594c <_free_r+0x2b8>
 4025938:	100ad33a 	srli	r5,r2,12
 402593c:	28c01bc4 	addi	r3,r5,111
 4025940:	18c7883a 	add	r3,r3,r3
 4025944:	29401b84 	addi	r5,r5,110
 4025948:	003f9c06 	br	40257bc <_gp+0xfffeb058>
 402594c:	00c05504 	movi	r3,340
 4025950:	19400536 	bltu	r3,r5,4025968 <_free_r+0x2d4>
 4025954:	100ad3fa 	srli	r5,r2,15
 4025958:	28c01e04 	addi	r3,r5,120
 402595c:	18c7883a 	add	r3,r3,r3
 4025960:	29401dc4 	addi	r5,r5,119
 4025964:	003f9506 	br	40257bc <_gp+0xfffeb058>
 4025968:	00c15504 	movi	r3,1364
 402596c:	19400536 	bltu	r3,r5,4025984 <_free_r+0x2f0>
 4025970:	100ad4ba 	srli	r5,r2,18
 4025974:	28c01f44 	addi	r3,r5,125
 4025978:	18c7883a 	add	r3,r3,r3
 402597c:	29401f04 	addi	r5,r5,124
 4025980:	003f8e06 	br	40257bc <_gp+0xfffeb058>
 4025984:	00c03f84 	movi	r3,254
 4025988:	01401f84 	movi	r5,126
 402598c:	003f8b06 	br	40257bc <_gp+0xfffeb058>
 4025990:	10c00054 	ori	r3,r2,1
 4025994:	30c00115 	stw	r3,4(r6)
 4025998:	308d883a 	add	r6,r6,r2
 402599c:	30800015 	stw	r2,0(r6)
 40259a0:	003f7806 	br	4025784 <_gp+0xfffeb020>

040259a4 <__sfvwrite_r>:
 40259a4:	30800217 	ldw	r2,8(r6)
 40259a8:	10006726 	beq	r2,zero,4025b48 <__sfvwrite_r+0x1a4>
 40259ac:	28c0030b 	ldhu	r3,12(r5)
 40259b0:	defff404 	addi	sp,sp,-48
 40259b4:	dd400715 	stw	r21,28(sp)
 40259b8:	dd000615 	stw	r20,24(sp)
 40259bc:	dc000215 	stw	r16,8(sp)
 40259c0:	dfc00b15 	stw	ra,44(sp)
 40259c4:	df000a15 	stw	fp,40(sp)
 40259c8:	ddc00915 	stw	r23,36(sp)
 40259cc:	dd800815 	stw	r22,32(sp)
 40259d0:	dcc00515 	stw	r19,20(sp)
 40259d4:	dc800415 	stw	r18,16(sp)
 40259d8:	dc400315 	stw	r17,12(sp)
 40259dc:	1880020c 	andi	r2,r3,8
 40259e0:	2821883a 	mov	r16,r5
 40259e4:	202b883a 	mov	r21,r4
 40259e8:	3029883a 	mov	r20,r6
 40259ec:	10002726 	beq	r2,zero,4025a8c <__sfvwrite_r+0xe8>
 40259f0:	28800417 	ldw	r2,16(r5)
 40259f4:	10002526 	beq	r2,zero,4025a8c <__sfvwrite_r+0xe8>
 40259f8:	1880008c 	andi	r2,r3,2
 40259fc:	a4400017 	ldw	r17,0(r20)
 4025a00:	10002a26 	beq	r2,zero,4025aac <__sfvwrite_r+0x108>
 4025a04:	05a00034 	movhi	r22,32768
 4025a08:	0027883a 	mov	r19,zero
 4025a0c:	0025883a 	mov	r18,zero
 4025a10:	b5bf0004 	addi	r22,r22,-1024
 4025a14:	980d883a 	mov	r6,r19
 4025a18:	a809883a 	mov	r4,r21
 4025a1c:	90004626 	beq	r18,zero,4025b38 <__sfvwrite_r+0x194>
 4025a20:	900f883a 	mov	r7,r18
 4025a24:	b480022e 	bgeu	r22,r18,4025a30 <__sfvwrite_r+0x8c>
 4025a28:	01e00034 	movhi	r7,32768
 4025a2c:	39ff0004 	addi	r7,r7,-1024
 4025a30:	80800917 	ldw	r2,36(r16)
 4025a34:	81400717 	ldw	r5,28(r16)
 4025a38:	103ee83a 	callr	r2
 4025a3c:	00805a0e 	bge	zero,r2,4025ba8 <__sfvwrite_r+0x204>
 4025a40:	a0c00217 	ldw	r3,8(r20)
 4025a44:	98a7883a 	add	r19,r19,r2
 4025a48:	90a5c83a 	sub	r18,r18,r2
 4025a4c:	1885c83a 	sub	r2,r3,r2
 4025a50:	a0800215 	stw	r2,8(r20)
 4025a54:	103fef1e 	bne	r2,zero,4025a14 <_gp+0xfffeb2b0>
 4025a58:	0005883a 	mov	r2,zero
 4025a5c:	dfc00b17 	ldw	ra,44(sp)
 4025a60:	df000a17 	ldw	fp,40(sp)
 4025a64:	ddc00917 	ldw	r23,36(sp)
 4025a68:	dd800817 	ldw	r22,32(sp)
 4025a6c:	dd400717 	ldw	r21,28(sp)
 4025a70:	dd000617 	ldw	r20,24(sp)
 4025a74:	dcc00517 	ldw	r19,20(sp)
 4025a78:	dc800417 	ldw	r18,16(sp)
 4025a7c:	dc400317 	ldw	r17,12(sp)
 4025a80:	dc000217 	ldw	r16,8(sp)
 4025a84:	dec00c04 	addi	sp,sp,48
 4025a88:	f800283a 	ret
 4025a8c:	800b883a 	mov	r5,r16
 4025a90:	a809883a 	mov	r4,r21
 4025a94:	40235140 	call	4023514 <__swsetup_r>
 4025a98:	1000ee1e 	bne	r2,zero,4025e54 <__sfvwrite_r+0x4b0>
 4025a9c:	80c0030b 	ldhu	r3,12(r16)
 4025aa0:	a4400017 	ldw	r17,0(r20)
 4025aa4:	1880008c 	andi	r2,r3,2
 4025aa8:	103fd61e 	bne	r2,zero,4025a04 <_gp+0xfffeb2a0>
 4025aac:	1880004c 	andi	r2,r3,1
 4025ab0:	1000421e 	bne	r2,zero,4025bbc <__sfvwrite_r+0x218>
 4025ab4:	0039883a 	mov	fp,zero
 4025ab8:	0025883a 	mov	r18,zero
 4025abc:	90001a26 	beq	r18,zero,4025b28 <__sfvwrite_r+0x184>
 4025ac0:	1880800c 	andi	r2,r3,512
 4025ac4:	84c00217 	ldw	r19,8(r16)
 4025ac8:	10002126 	beq	r2,zero,4025b50 <__sfvwrite_r+0x1ac>
 4025acc:	982f883a 	mov	r23,r19
 4025ad0:	94c09636 	bltu	r18,r19,4025d2c <__sfvwrite_r+0x388>
 4025ad4:	1881200c 	andi	r2,r3,1152
 4025ad8:	1000a11e 	bne	r2,zero,4025d60 <__sfvwrite_r+0x3bc>
 4025adc:	81000017 	ldw	r4,0(r16)
 4025ae0:	b80d883a 	mov	r6,r23
 4025ae4:	e00b883a 	mov	r5,fp
 4025ae8:	4026b7c0 	call	4026b7c <memmove>
 4025aec:	80c00217 	ldw	r3,8(r16)
 4025af0:	81000017 	ldw	r4,0(r16)
 4025af4:	9005883a 	mov	r2,r18
 4025af8:	1ce7c83a 	sub	r19,r3,r19
 4025afc:	25cf883a 	add	r7,r4,r23
 4025b00:	84c00215 	stw	r19,8(r16)
 4025b04:	81c00015 	stw	r7,0(r16)
 4025b08:	a0c00217 	ldw	r3,8(r20)
 4025b0c:	e0b9883a 	add	fp,fp,r2
 4025b10:	90a5c83a 	sub	r18,r18,r2
 4025b14:	18a7c83a 	sub	r19,r3,r2
 4025b18:	a4c00215 	stw	r19,8(r20)
 4025b1c:	983fce26 	beq	r19,zero,4025a58 <_gp+0xfffeb2f4>
 4025b20:	80c0030b 	ldhu	r3,12(r16)
 4025b24:	903fe61e 	bne	r18,zero,4025ac0 <_gp+0xfffeb35c>
 4025b28:	8f000017 	ldw	fp,0(r17)
 4025b2c:	8c800117 	ldw	r18,4(r17)
 4025b30:	8c400204 	addi	r17,r17,8
 4025b34:	003fe106 	br	4025abc <_gp+0xfffeb358>
 4025b38:	8cc00017 	ldw	r19,0(r17)
 4025b3c:	8c800117 	ldw	r18,4(r17)
 4025b40:	8c400204 	addi	r17,r17,8
 4025b44:	003fb306 	br	4025a14 <_gp+0xfffeb2b0>
 4025b48:	0005883a 	mov	r2,zero
 4025b4c:	f800283a 	ret
 4025b50:	81000017 	ldw	r4,0(r16)
 4025b54:	80800417 	ldw	r2,16(r16)
 4025b58:	11005a36 	bltu	r2,r4,4025cc4 <__sfvwrite_r+0x320>
 4025b5c:	85c00517 	ldw	r23,20(r16)
 4025b60:	95c05836 	bltu	r18,r23,4025cc4 <__sfvwrite_r+0x320>
 4025b64:	00a00034 	movhi	r2,32768
 4025b68:	10bfffc4 	addi	r2,r2,-1
 4025b6c:	9009883a 	mov	r4,r18
 4025b70:	1480012e 	bgeu	r2,r18,4025b78 <__sfvwrite_r+0x1d4>
 4025b74:	1009883a 	mov	r4,r2
 4025b78:	b80b883a 	mov	r5,r23
 4025b7c:	4020bc80 	call	4020bc8 <__divsi3>
 4025b80:	b80b883a 	mov	r5,r23
 4025b84:	1009883a 	mov	r4,r2
 4025b88:	4020d7c0 	call	4020d7c <__mulsi3>
 4025b8c:	81400717 	ldw	r5,28(r16)
 4025b90:	80c00917 	ldw	r3,36(r16)
 4025b94:	100f883a 	mov	r7,r2
 4025b98:	e00d883a 	mov	r6,fp
 4025b9c:	a809883a 	mov	r4,r21
 4025ba0:	183ee83a 	callr	r3
 4025ba4:	00bfd816 	blt	zero,r2,4025b08 <_gp+0xfffeb3a4>
 4025ba8:	8080030b 	ldhu	r2,12(r16)
 4025bac:	10801014 	ori	r2,r2,64
 4025bb0:	8080030d 	sth	r2,12(r16)
 4025bb4:	00bfffc4 	movi	r2,-1
 4025bb8:	003fa806 	br	4025a5c <_gp+0xfffeb2f8>
 4025bbc:	0027883a 	mov	r19,zero
 4025bc0:	0011883a 	mov	r8,zero
 4025bc4:	0039883a 	mov	fp,zero
 4025bc8:	0025883a 	mov	r18,zero
 4025bcc:	90001f26 	beq	r18,zero,4025c4c <__sfvwrite_r+0x2a8>
 4025bd0:	40005a26 	beq	r8,zero,4025d3c <__sfvwrite_r+0x398>
 4025bd4:	982d883a 	mov	r22,r19
 4025bd8:	94c0012e 	bgeu	r18,r19,4025be0 <__sfvwrite_r+0x23c>
 4025bdc:	902d883a 	mov	r22,r18
 4025be0:	81000017 	ldw	r4,0(r16)
 4025be4:	80800417 	ldw	r2,16(r16)
 4025be8:	b02f883a 	mov	r23,r22
 4025bec:	81c00517 	ldw	r7,20(r16)
 4025bf0:	1100032e 	bgeu	r2,r4,4025c00 <__sfvwrite_r+0x25c>
 4025bf4:	80c00217 	ldw	r3,8(r16)
 4025bf8:	38c7883a 	add	r3,r7,r3
 4025bfc:	1d801816 	blt	r3,r22,4025c60 <__sfvwrite_r+0x2bc>
 4025c00:	b1c03e16 	blt	r22,r7,4025cfc <__sfvwrite_r+0x358>
 4025c04:	80800917 	ldw	r2,36(r16)
 4025c08:	81400717 	ldw	r5,28(r16)
 4025c0c:	e00d883a 	mov	r6,fp
 4025c10:	da000115 	stw	r8,4(sp)
 4025c14:	a809883a 	mov	r4,r21
 4025c18:	103ee83a 	callr	r2
 4025c1c:	102f883a 	mov	r23,r2
 4025c20:	da000117 	ldw	r8,4(sp)
 4025c24:	00bfe00e 	bge	zero,r2,4025ba8 <_gp+0xfffeb444>
 4025c28:	9de7c83a 	sub	r19,r19,r23
 4025c2c:	98001f26 	beq	r19,zero,4025cac <__sfvwrite_r+0x308>
 4025c30:	a0800217 	ldw	r2,8(r20)
 4025c34:	e5f9883a 	add	fp,fp,r23
 4025c38:	95e5c83a 	sub	r18,r18,r23
 4025c3c:	15efc83a 	sub	r23,r2,r23
 4025c40:	a5c00215 	stw	r23,8(r20)
 4025c44:	b83f8426 	beq	r23,zero,4025a58 <_gp+0xfffeb2f4>
 4025c48:	903fe11e 	bne	r18,zero,4025bd0 <_gp+0xfffeb46c>
 4025c4c:	8f000017 	ldw	fp,0(r17)
 4025c50:	8c800117 	ldw	r18,4(r17)
 4025c54:	0011883a 	mov	r8,zero
 4025c58:	8c400204 	addi	r17,r17,8
 4025c5c:	003fdb06 	br	4025bcc <_gp+0xfffeb468>
 4025c60:	180d883a 	mov	r6,r3
 4025c64:	e00b883a 	mov	r5,fp
 4025c68:	da000115 	stw	r8,4(sp)
 4025c6c:	d8c00015 	stw	r3,0(sp)
 4025c70:	4026b7c0 	call	4026b7c <memmove>
 4025c74:	d8c00017 	ldw	r3,0(sp)
 4025c78:	80800017 	ldw	r2,0(r16)
 4025c7c:	800b883a 	mov	r5,r16
 4025c80:	a809883a 	mov	r4,r21
 4025c84:	10c5883a 	add	r2,r2,r3
 4025c88:	80800015 	stw	r2,0(r16)
 4025c8c:	d8c00015 	stw	r3,0(sp)
 4025c90:	40251340 	call	4025134 <_fflush_r>
 4025c94:	d8c00017 	ldw	r3,0(sp)
 4025c98:	da000117 	ldw	r8,4(sp)
 4025c9c:	103fc21e 	bne	r2,zero,4025ba8 <_gp+0xfffeb444>
 4025ca0:	182f883a 	mov	r23,r3
 4025ca4:	9de7c83a 	sub	r19,r19,r23
 4025ca8:	983fe11e 	bne	r19,zero,4025c30 <_gp+0xfffeb4cc>
 4025cac:	800b883a 	mov	r5,r16
 4025cb0:	a809883a 	mov	r4,r21
 4025cb4:	40251340 	call	4025134 <_fflush_r>
 4025cb8:	103fbb1e 	bne	r2,zero,4025ba8 <_gp+0xfffeb444>
 4025cbc:	0011883a 	mov	r8,zero
 4025cc0:	003fdb06 	br	4025c30 <_gp+0xfffeb4cc>
 4025cc4:	94c0012e 	bgeu	r18,r19,4025ccc <__sfvwrite_r+0x328>
 4025cc8:	9027883a 	mov	r19,r18
 4025ccc:	980d883a 	mov	r6,r19
 4025cd0:	e00b883a 	mov	r5,fp
 4025cd4:	4026b7c0 	call	4026b7c <memmove>
 4025cd8:	80800217 	ldw	r2,8(r16)
 4025cdc:	80c00017 	ldw	r3,0(r16)
 4025ce0:	14c5c83a 	sub	r2,r2,r19
 4025ce4:	1cc7883a 	add	r3,r3,r19
 4025ce8:	80800215 	stw	r2,8(r16)
 4025cec:	80c00015 	stw	r3,0(r16)
 4025cf0:	10004326 	beq	r2,zero,4025e00 <__sfvwrite_r+0x45c>
 4025cf4:	9805883a 	mov	r2,r19
 4025cf8:	003f8306 	br	4025b08 <_gp+0xfffeb3a4>
 4025cfc:	b00d883a 	mov	r6,r22
 4025d00:	e00b883a 	mov	r5,fp
 4025d04:	da000115 	stw	r8,4(sp)
 4025d08:	4026b7c0 	call	4026b7c <memmove>
 4025d0c:	80800217 	ldw	r2,8(r16)
 4025d10:	80c00017 	ldw	r3,0(r16)
 4025d14:	da000117 	ldw	r8,4(sp)
 4025d18:	1585c83a 	sub	r2,r2,r22
 4025d1c:	1dad883a 	add	r22,r3,r22
 4025d20:	80800215 	stw	r2,8(r16)
 4025d24:	85800015 	stw	r22,0(r16)
 4025d28:	003fbf06 	br	4025c28 <_gp+0xfffeb4c4>
 4025d2c:	81000017 	ldw	r4,0(r16)
 4025d30:	9027883a 	mov	r19,r18
 4025d34:	902f883a 	mov	r23,r18
 4025d38:	003f6906 	br	4025ae0 <_gp+0xfffeb37c>
 4025d3c:	900d883a 	mov	r6,r18
 4025d40:	01400284 	movi	r5,10
 4025d44:	e009883a 	mov	r4,fp
 4025d48:	4026a980 	call	4026a98 <memchr>
 4025d4c:	10003e26 	beq	r2,zero,4025e48 <__sfvwrite_r+0x4a4>
 4025d50:	10800044 	addi	r2,r2,1
 4025d54:	1727c83a 	sub	r19,r2,fp
 4025d58:	02000044 	movi	r8,1
 4025d5c:	003f9d06 	br	4025bd4 <_gp+0xfffeb470>
 4025d60:	80800517 	ldw	r2,20(r16)
 4025d64:	81400417 	ldw	r5,16(r16)
 4025d68:	81c00017 	ldw	r7,0(r16)
 4025d6c:	10a7883a 	add	r19,r2,r2
 4025d70:	9885883a 	add	r2,r19,r2
 4025d74:	1026d7fa 	srli	r19,r2,31
 4025d78:	396dc83a 	sub	r22,r7,r5
 4025d7c:	b1000044 	addi	r4,r22,1
 4025d80:	9885883a 	add	r2,r19,r2
 4025d84:	1027d07a 	srai	r19,r2,1
 4025d88:	2485883a 	add	r2,r4,r18
 4025d8c:	980d883a 	mov	r6,r19
 4025d90:	9880022e 	bgeu	r19,r2,4025d9c <__sfvwrite_r+0x3f8>
 4025d94:	1027883a 	mov	r19,r2
 4025d98:	100d883a 	mov	r6,r2
 4025d9c:	18c1000c 	andi	r3,r3,1024
 4025da0:	18001c26 	beq	r3,zero,4025e14 <__sfvwrite_r+0x470>
 4025da4:	300b883a 	mov	r5,r6
 4025da8:	a809883a 	mov	r4,r21
 4025dac:	402628c0 	call	402628c <_malloc_r>
 4025db0:	102f883a 	mov	r23,r2
 4025db4:	10002926 	beq	r2,zero,4025e5c <__sfvwrite_r+0x4b8>
 4025db8:	81400417 	ldw	r5,16(r16)
 4025dbc:	b00d883a 	mov	r6,r22
 4025dc0:	1009883a 	mov	r4,r2
 4025dc4:	4020da40 	call	4020da4 <memcpy>
 4025dc8:	8080030b 	ldhu	r2,12(r16)
 4025dcc:	00fedfc4 	movi	r3,-1153
 4025dd0:	10c4703a 	and	r2,r2,r3
 4025dd4:	10802014 	ori	r2,r2,128
 4025dd8:	8080030d 	sth	r2,12(r16)
 4025ddc:	bd89883a 	add	r4,r23,r22
 4025de0:	9d8fc83a 	sub	r7,r19,r22
 4025de4:	85c00415 	stw	r23,16(r16)
 4025de8:	84c00515 	stw	r19,20(r16)
 4025dec:	81000015 	stw	r4,0(r16)
 4025df0:	9027883a 	mov	r19,r18
 4025df4:	81c00215 	stw	r7,8(r16)
 4025df8:	902f883a 	mov	r23,r18
 4025dfc:	003f3806 	br	4025ae0 <_gp+0xfffeb37c>
 4025e00:	800b883a 	mov	r5,r16
 4025e04:	a809883a 	mov	r4,r21
 4025e08:	40251340 	call	4025134 <_fflush_r>
 4025e0c:	103fb926 	beq	r2,zero,4025cf4 <_gp+0xfffeb590>
 4025e10:	003f6506 	br	4025ba8 <_gp+0xfffeb444>
 4025e14:	a809883a 	mov	r4,r21
 4025e18:	40280200 	call	4028020 <_realloc_r>
 4025e1c:	102f883a 	mov	r23,r2
 4025e20:	103fee1e 	bne	r2,zero,4025ddc <_gp+0xfffeb678>
 4025e24:	81400417 	ldw	r5,16(r16)
 4025e28:	a809883a 	mov	r4,r21
 4025e2c:	40256940 	call	4025694 <_free_r>
 4025e30:	8080030b 	ldhu	r2,12(r16)
 4025e34:	00ffdfc4 	movi	r3,-129
 4025e38:	1884703a 	and	r2,r3,r2
 4025e3c:	00c00304 	movi	r3,12
 4025e40:	a8c00015 	stw	r3,0(r21)
 4025e44:	003f5906 	br	4025bac <_gp+0xfffeb448>
 4025e48:	94c00044 	addi	r19,r18,1
 4025e4c:	02000044 	movi	r8,1
 4025e50:	003f6006 	br	4025bd4 <_gp+0xfffeb470>
 4025e54:	00bfffc4 	movi	r2,-1
 4025e58:	003f0006 	br	4025a5c <_gp+0xfffeb2f8>
 4025e5c:	00800304 	movi	r2,12
 4025e60:	a8800015 	stw	r2,0(r21)
 4025e64:	8080030b 	ldhu	r2,12(r16)
 4025e68:	003f5006 	br	4025bac <_gp+0xfffeb448>

04025e6c <_fwalk>:
 4025e6c:	defff704 	addi	sp,sp,-36
 4025e70:	dd000415 	stw	r20,16(sp)
 4025e74:	dfc00815 	stw	ra,32(sp)
 4025e78:	ddc00715 	stw	r23,28(sp)
 4025e7c:	dd800615 	stw	r22,24(sp)
 4025e80:	dd400515 	stw	r21,20(sp)
 4025e84:	dcc00315 	stw	r19,12(sp)
 4025e88:	dc800215 	stw	r18,8(sp)
 4025e8c:	dc400115 	stw	r17,4(sp)
 4025e90:	dc000015 	stw	r16,0(sp)
 4025e94:	2500b804 	addi	r20,r4,736
 4025e98:	a0002326 	beq	r20,zero,4025f28 <_fwalk+0xbc>
 4025e9c:	282b883a 	mov	r21,r5
 4025ea0:	002f883a 	mov	r23,zero
 4025ea4:	05800044 	movi	r22,1
 4025ea8:	04ffffc4 	movi	r19,-1
 4025eac:	a4400117 	ldw	r17,4(r20)
 4025eb0:	a4800217 	ldw	r18,8(r20)
 4025eb4:	8c7fffc4 	addi	r17,r17,-1
 4025eb8:	88000d16 	blt	r17,zero,4025ef0 <_fwalk+0x84>
 4025ebc:	94000304 	addi	r16,r18,12
 4025ec0:	94800384 	addi	r18,r18,14
 4025ec4:	8080000b 	ldhu	r2,0(r16)
 4025ec8:	8c7fffc4 	addi	r17,r17,-1
 4025ecc:	813ffd04 	addi	r4,r16,-12
 4025ed0:	b080042e 	bgeu	r22,r2,4025ee4 <_fwalk+0x78>
 4025ed4:	9080000f 	ldh	r2,0(r18)
 4025ed8:	14c00226 	beq	r2,r19,4025ee4 <_fwalk+0x78>
 4025edc:	a83ee83a 	callr	r21
 4025ee0:	b8aeb03a 	or	r23,r23,r2
 4025ee4:	84001a04 	addi	r16,r16,104
 4025ee8:	94801a04 	addi	r18,r18,104
 4025eec:	8cfff51e 	bne	r17,r19,4025ec4 <_gp+0xfffeb760>
 4025ef0:	a5000017 	ldw	r20,0(r20)
 4025ef4:	a03fed1e 	bne	r20,zero,4025eac <_gp+0xfffeb748>
 4025ef8:	b805883a 	mov	r2,r23
 4025efc:	dfc00817 	ldw	ra,32(sp)
 4025f00:	ddc00717 	ldw	r23,28(sp)
 4025f04:	dd800617 	ldw	r22,24(sp)
 4025f08:	dd400517 	ldw	r21,20(sp)
 4025f0c:	dd000417 	ldw	r20,16(sp)
 4025f10:	dcc00317 	ldw	r19,12(sp)
 4025f14:	dc800217 	ldw	r18,8(sp)
 4025f18:	dc400117 	ldw	r17,4(sp)
 4025f1c:	dc000017 	ldw	r16,0(sp)
 4025f20:	dec00904 	addi	sp,sp,36
 4025f24:	f800283a 	ret
 4025f28:	002f883a 	mov	r23,zero
 4025f2c:	003ff206 	br	4025ef8 <_gp+0xfffeb794>

04025f30 <_fwalk_reent>:
 4025f30:	defff704 	addi	sp,sp,-36
 4025f34:	dd000415 	stw	r20,16(sp)
 4025f38:	dfc00815 	stw	ra,32(sp)
 4025f3c:	ddc00715 	stw	r23,28(sp)
 4025f40:	dd800615 	stw	r22,24(sp)
 4025f44:	dd400515 	stw	r21,20(sp)
 4025f48:	dcc00315 	stw	r19,12(sp)
 4025f4c:	dc800215 	stw	r18,8(sp)
 4025f50:	dc400115 	stw	r17,4(sp)
 4025f54:	dc000015 	stw	r16,0(sp)
 4025f58:	2500b804 	addi	r20,r4,736
 4025f5c:	a0002326 	beq	r20,zero,4025fec <_fwalk_reent+0xbc>
 4025f60:	282b883a 	mov	r21,r5
 4025f64:	2027883a 	mov	r19,r4
 4025f68:	002f883a 	mov	r23,zero
 4025f6c:	05800044 	movi	r22,1
 4025f70:	04bfffc4 	movi	r18,-1
 4025f74:	a4400117 	ldw	r17,4(r20)
 4025f78:	a4000217 	ldw	r16,8(r20)
 4025f7c:	8c7fffc4 	addi	r17,r17,-1
 4025f80:	88000c16 	blt	r17,zero,4025fb4 <_fwalk_reent+0x84>
 4025f84:	84000304 	addi	r16,r16,12
 4025f88:	8080000b 	ldhu	r2,0(r16)
 4025f8c:	8c7fffc4 	addi	r17,r17,-1
 4025f90:	817ffd04 	addi	r5,r16,-12
 4025f94:	b080052e 	bgeu	r22,r2,4025fac <_fwalk_reent+0x7c>
 4025f98:	8080008f 	ldh	r2,2(r16)
 4025f9c:	9809883a 	mov	r4,r19
 4025fa0:	14800226 	beq	r2,r18,4025fac <_fwalk_reent+0x7c>
 4025fa4:	a83ee83a 	callr	r21
 4025fa8:	b8aeb03a 	or	r23,r23,r2
 4025fac:	84001a04 	addi	r16,r16,104
 4025fb0:	8cbff51e 	bne	r17,r18,4025f88 <_gp+0xfffeb824>
 4025fb4:	a5000017 	ldw	r20,0(r20)
 4025fb8:	a03fee1e 	bne	r20,zero,4025f74 <_gp+0xfffeb810>
 4025fbc:	b805883a 	mov	r2,r23
 4025fc0:	dfc00817 	ldw	ra,32(sp)
 4025fc4:	ddc00717 	ldw	r23,28(sp)
 4025fc8:	dd800617 	ldw	r22,24(sp)
 4025fcc:	dd400517 	ldw	r21,20(sp)
 4025fd0:	dd000417 	ldw	r20,16(sp)
 4025fd4:	dcc00317 	ldw	r19,12(sp)
 4025fd8:	dc800217 	ldw	r18,8(sp)
 4025fdc:	dc400117 	ldw	r17,4(sp)
 4025fe0:	dc000017 	ldw	r16,0(sp)
 4025fe4:	dec00904 	addi	sp,sp,36
 4025fe8:	f800283a 	ret
 4025fec:	002f883a 	mov	r23,zero
 4025ff0:	003ff206 	br	4025fbc <_gp+0xfffeb858>

04025ff4 <_setlocale_r>:
 4025ff4:	30001b26 	beq	r6,zero,4026064 <_setlocale_r+0x70>
 4025ff8:	014100f4 	movhi	r5,1027
 4025ffc:	defffe04 	addi	sp,sp,-8
 4026000:	29428f04 	addi	r5,r5,2620
 4026004:	3009883a 	mov	r4,r6
 4026008:	dc000015 	stw	r16,0(sp)
 402600c:	dfc00115 	stw	ra,4(sp)
 4026010:	3021883a 	mov	r16,r6
 4026014:	40287880 	call	4028788 <strcmp>
 4026018:	1000061e 	bne	r2,zero,4026034 <_setlocale_r+0x40>
 402601c:	008100f4 	movhi	r2,1027
 4026020:	10828e04 	addi	r2,r2,2616
 4026024:	dfc00117 	ldw	ra,4(sp)
 4026028:	dc000017 	ldw	r16,0(sp)
 402602c:	dec00204 	addi	sp,sp,8
 4026030:	f800283a 	ret
 4026034:	014100f4 	movhi	r5,1027
 4026038:	29428e04 	addi	r5,r5,2616
 402603c:	8009883a 	mov	r4,r16
 4026040:	40287880 	call	4028788 <strcmp>
 4026044:	103ff526 	beq	r2,zero,402601c <_gp+0xfffeb8b8>
 4026048:	014100f4 	movhi	r5,1027
 402604c:	29427904 	addi	r5,r5,2532
 4026050:	8009883a 	mov	r4,r16
 4026054:	40287880 	call	4028788 <strcmp>
 4026058:	103ff026 	beq	r2,zero,402601c <_gp+0xfffeb8b8>
 402605c:	0005883a 	mov	r2,zero
 4026060:	003ff006 	br	4026024 <_gp+0xfffeb8c0>
 4026064:	008100f4 	movhi	r2,1027
 4026068:	10828e04 	addi	r2,r2,2616
 402606c:	f800283a 	ret

04026070 <__locale_charset>:
 4026070:	008100f4 	movhi	r2,1027
 4026074:	10843f04 	addi	r2,r2,4348
 4026078:	f800283a 	ret

0402607c <__locale_mb_cur_max>:
 402607c:	008100f4 	movhi	r2,1027
 4026080:	1089db04 	addi	r2,r2,10092
 4026084:	10800017 	ldw	r2,0(r2)
 4026088:	f800283a 	ret

0402608c <__locale_msgcharset>:
 402608c:	008100f4 	movhi	r2,1027
 4026090:	10843704 	addi	r2,r2,4316
 4026094:	f800283a 	ret

04026098 <__locale_cjk_lang>:
 4026098:	0005883a 	mov	r2,zero
 402609c:	f800283a 	ret

040260a0 <_localeconv_r>:
 40260a0:	008100f4 	movhi	r2,1027
 40260a4:	10844704 	addi	r2,r2,4380
 40260a8:	f800283a 	ret

040260ac <setlocale>:
 40260ac:	008100f4 	movhi	r2,1027
 40260b0:	1089da04 	addi	r2,r2,10088
 40260b4:	280d883a 	mov	r6,r5
 40260b8:	200b883a 	mov	r5,r4
 40260bc:	11000017 	ldw	r4,0(r2)
 40260c0:	4025ff41 	jmpi	4025ff4 <_setlocale_r>

040260c4 <localeconv>:
 40260c4:	008100f4 	movhi	r2,1027
 40260c8:	10844704 	addi	r2,r2,4380
 40260cc:	f800283a 	ret

040260d0 <__smakebuf_r>:
 40260d0:	2880030b 	ldhu	r2,12(r5)
 40260d4:	10c0008c 	andi	r3,r2,2
 40260d8:	1800411e 	bne	r3,zero,40261e0 <__smakebuf_r+0x110>
 40260dc:	deffec04 	addi	sp,sp,-80
 40260e0:	dc000f15 	stw	r16,60(sp)
 40260e4:	2821883a 	mov	r16,r5
 40260e8:	2940038f 	ldh	r5,14(r5)
 40260ec:	dc401015 	stw	r17,64(sp)
 40260f0:	dfc01315 	stw	ra,76(sp)
 40260f4:	dcc01215 	stw	r19,72(sp)
 40260f8:	dc801115 	stw	r18,68(sp)
 40260fc:	2023883a 	mov	r17,r4
 4026100:	28001c16 	blt	r5,zero,4026174 <__smakebuf_r+0xa4>
 4026104:	d80d883a 	mov	r6,sp
 4026108:	402a5500 	call	402a550 <_fstat_r>
 402610c:	10001816 	blt	r2,zero,4026170 <__smakebuf_r+0xa0>
 4026110:	d8800117 	ldw	r2,4(sp)
 4026114:	00e00014 	movui	r3,32768
 4026118:	10bc000c 	andi	r2,r2,61440
 402611c:	14c80020 	cmpeqi	r19,r2,8192
 4026120:	10c03726 	beq	r2,r3,4026200 <__smakebuf_r+0x130>
 4026124:	80c0030b 	ldhu	r3,12(r16)
 4026128:	18c20014 	ori	r3,r3,2048
 402612c:	80c0030d 	sth	r3,12(r16)
 4026130:	00c80004 	movi	r3,8192
 4026134:	10c0521e 	bne	r2,r3,4026280 <__smakebuf_r+0x1b0>
 4026138:	8140038f 	ldh	r5,14(r16)
 402613c:	8809883a 	mov	r4,r17
 4026140:	402a5ac0 	call	402a5ac <_isatty_r>
 4026144:	10004c26 	beq	r2,zero,4026278 <__smakebuf_r+0x1a8>
 4026148:	8080030b 	ldhu	r2,12(r16)
 402614c:	80c010c4 	addi	r3,r16,67
 4026150:	80c00015 	stw	r3,0(r16)
 4026154:	10800054 	ori	r2,r2,1
 4026158:	8080030d 	sth	r2,12(r16)
 402615c:	00800044 	movi	r2,1
 4026160:	80c00415 	stw	r3,16(r16)
 4026164:	80800515 	stw	r2,20(r16)
 4026168:	04810004 	movi	r18,1024
 402616c:	00000706 	br	402618c <__smakebuf_r+0xbc>
 4026170:	8080030b 	ldhu	r2,12(r16)
 4026174:	10c0200c 	andi	r3,r2,128
 4026178:	18001f1e 	bne	r3,zero,40261f8 <__smakebuf_r+0x128>
 402617c:	04810004 	movi	r18,1024
 4026180:	10820014 	ori	r2,r2,2048
 4026184:	8080030d 	sth	r2,12(r16)
 4026188:	0027883a 	mov	r19,zero
 402618c:	900b883a 	mov	r5,r18
 4026190:	8809883a 	mov	r4,r17
 4026194:	402628c0 	call	402628c <_malloc_r>
 4026198:	10002c26 	beq	r2,zero,402624c <__smakebuf_r+0x17c>
 402619c:	80c0030b 	ldhu	r3,12(r16)
 40261a0:	010100b4 	movhi	r4,1026
 40261a4:	21147204 	addi	r4,r4,20936
 40261a8:	89000f15 	stw	r4,60(r17)
 40261ac:	18c02014 	ori	r3,r3,128
 40261b0:	80c0030d 	sth	r3,12(r16)
 40261b4:	80800015 	stw	r2,0(r16)
 40261b8:	80800415 	stw	r2,16(r16)
 40261bc:	84800515 	stw	r18,20(r16)
 40261c0:	98001a1e 	bne	r19,zero,402622c <__smakebuf_r+0x15c>
 40261c4:	dfc01317 	ldw	ra,76(sp)
 40261c8:	dcc01217 	ldw	r19,72(sp)
 40261cc:	dc801117 	ldw	r18,68(sp)
 40261d0:	dc401017 	ldw	r17,64(sp)
 40261d4:	dc000f17 	ldw	r16,60(sp)
 40261d8:	dec01404 	addi	sp,sp,80
 40261dc:	f800283a 	ret
 40261e0:	288010c4 	addi	r2,r5,67
 40261e4:	28800015 	stw	r2,0(r5)
 40261e8:	28800415 	stw	r2,16(r5)
 40261ec:	00800044 	movi	r2,1
 40261f0:	28800515 	stw	r2,20(r5)
 40261f4:	f800283a 	ret
 40261f8:	04801004 	movi	r18,64
 40261fc:	003fe006 	br	4026180 <_gp+0xfffeba1c>
 4026200:	81000a17 	ldw	r4,40(r16)
 4026204:	00c100f4 	movhi	r3,1027
 4026208:	18e1c904 	addi	r3,r3,-30940
 402620c:	20ffc51e 	bne	r4,r3,4026124 <_gp+0xfffeb9c0>
 4026210:	8080030b 	ldhu	r2,12(r16)
 4026214:	04810004 	movi	r18,1024
 4026218:	84801315 	stw	r18,76(r16)
 402621c:	1484b03a 	or	r2,r2,r18
 4026220:	8080030d 	sth	r2,12(r16)
 4026224:	0027883a 	mov	r19,zero
 4026228:	003fd806 	br	402618c <_gp+0xfffeba28>
 402622c:	8140038f 	ldh	r5,14(r16)
 4026230:	8809883a 	mov	r4,r17
 4026234:	402a5ac0 	call	402a5ac <_isatty_r>
 4026238:	103fe226 	beq	r2,zero,40261c4 <_gp+0xfffeba60>
 402623c:	8080030b 	ldhu	r2,12(r16)
 4026240:	10800054 	ori	r2,r2,1
 4026244:	8080030d 	sth	r2,12(r16)
 4026248:	003fde06 	br	40261c4 <_gp+0xfffeba60>
 402624c:	8080030b 	ldhu	r2,12(r16)
 4026250:	10c0800c 	andi	r3,r2,512
 4026254:	183fdb1e 	bne	r3,zero,40261c4 <_gp+0xfffeba60>
 4026258:	10800094 	ori	r2,r2,2
 402625c:	80c010c4 	addi	r3,r16,67
 4026260:	8080030d 	sth	r2,12(r16)
 4026264:	00800044 	movi	r2,1
 4026268:	80c00015 	stw	r3,0(r16)
 402626c:	80c00415 	stw	r3,16(r16)
 4026270:	80800515 	stw	r2,20(r16)
 4026274:	003fd306 	br	40261c4 <_gp+0xfffeba60>
 4026278:	04810004 	movi	r18,1024
 402627c:	003fc306 	br	402618c <_gp+0xfffeba28>
 4026280:	0027883a 	mov	r19,zero
 4026284:	04810004 	movi	r18,1024
 4026288:	003fc006 	br	402618c <_gp+0xfffeba28>

0402628c <_malloc_r>:
 402628c:	defff504 	addi	sp,sp,-44
 4026290:	dc800315 	stw	r18,12(sp)
 4026294:	dfc00a15 	stw	ra,40(sp)
 4026298:	df000915 	stw	fp,36(sp)
 402629c:	ddc00815 	stw	r23,32(sp)
 40262a0:	dd800715 	stw	r22,28(sp)
 40262a4:	dd400615 	stw	r21,24(sp)
 40262a8:	dd000515 	stw	r20,20(sp)
 40262ac:	dcc00415 	stw	r19,16(sp)
 40262b0:	dc400215 	stw	r17,8(sp)
 40262b4:	dc000115 	stw	r16,4(sp)
 40262b8:	288002c4 	addi	r2,r5,11
 40262bc:	00c00584 	movi	r3,22
 40262c0:	2025883a 	mov	r18,r4
 40262c4:	18807f2e 	bgeu	r3,r2,40264c4 <_malloc_r+0x238>
 40262c8:	047ffe04 	movi	r17,-8
 40262cc:	1462703a 	and	r17,r2,r17
 40262d0:	8800a316 	blt	r17,zero,4026560 <_malloc_r+0x2d4>
 40262d4:	8940a236 	bltu	r17,r5,4026560 <_malloc_r+0x2d4>
 40262d8:	402e4240 	call	402e424 <__malloc_lock>
 40262dc:	00807dc4 	movi	r2,503
 40262e0:	1441e92e 	bgeu	r2,r17,4026a88 <_malloc_r+0x7fc>
 40262e4:	8804d27a 	srli	r2,r17,9
 40262e8:	1000a126 	beq	r2,zero,4026570 <_malloc_r+0x2e4>
 40262ec:	00c00104 	movi	r3,4
 40262f0:	18811e36 	bltu	r3,r2,402676c <_malloc_r+0x4e0>
 40262f4:	8804d1ba 	srli	r2,r17,6
 40262f8:	12000e44 	addi	r8,r2,57
 40262fc:	11c00e04 	addi	r7,r2,56
 4026300:	4209883a 	add	r4,r8,r8
 4026304:	04c100f4 	movhi	r19,1027
 4026308:	2109883a 	add	r4,r4,r4
 402630c:	9cc45504 	addi	r19,r19,4436
 4026310:	2109883a 	add	r4,r4,r4
 4026314:	9909883a 	add	r4,r19,r4
 4026318:	24000117 	ldw	r16,4(r4)
 402631c:	213ffe04 	addi	r4,r4,-8
 4026320:	24009726 	beq	r4,r16,4026580 <_malloc_r+0x2f4>
 4026324:	80800117 	ldw	r2,4(r16)
 4026328:	01bfff04 	movi	r6,-4
 402632c:	014003c4 	movi	r5,15
 4026330:	1184703a 	and	r2,r2,r6
 4026334:	1447c83a 	sub	r3,r2,r17
 4026338:	28c00716 	blt	r5,r3,4026358 <_malloc_r+0xcc>
 402633c:	1800920e 	bge	r3,zero,4026588 <_malloc_r+0x2fc>
 4026340:	84000317 	ldw	r16,12(r16)
 4026344:	24008e26 	beq	r4,r16,4026580 <_malloc_r+0x2f4>
 4026348:	80800117 	ldw	r2,4(r16)
 402634c:	1184703a 	and	r2,r2,r6
 4026350:	1447c83a 	sub	r3,r2,r17
 4026354:	28fff90e 	bge	r5,r3,402633c <_gp+0xfffebbd8>
 4026358:	3809883a 	mov	r4,r7
 402635c:	018100f4 	movhi	r6,1027
 4026360:	9c000417 	ldw	r16,16(r19)
 4026364:	31845504 	addi	r6,r6,4436
 4026368:	32000204 	addi	r8,r6,8
 402636c:	82013426 	beq	r16,r8,4026840 <_malloc_r+0x5b4>
 4026370:	80c00117 	ldw	r3,4(r16)
 4026374:	00bfff04 	movi	r2,-4
 4026378:	188e703a 	and	r7,r3,r2
 402637c:	3c45c83a 	sub	r2,r7,r17
 4026380:	00c003c4 	movi	r3,15
 4026384:	18811f16 	blt	r3,r2,4026804 <_malloc_r+0x578>
 4026388:	32000515 	stw	r8,20(r6)
 402638c:	32000415 	stw	r8,16(r6)
 4026390:	10007f0e 	bge	r2,zero,4026590 <_malloc_r+0x304>
 4026394:	00807fc4 	movi	r2,511
 4026398:	11c0fd36 	bltu	r2,r7,4026790 <_malloc_r+0x504>
 402639c:	3806d0fa 	srli	r3,r7,3
 40263a0:	01c00044 	movi	r7,1
 40263a4:	30800117 	ldw	r2,4(r6)
 40263a8:	19400044 	addi	r5,r3,1
 40263ac:	294b883a 	add	r5,r5,r5
 40263b0:	1807d0ba 	srai	r3,r3,2
 40263b4:	294b883a 	add	r5,r5,r5
 40263b8:	294b883a 	add	r5,r5,r5
 40263bc:	298b883a 	add	r5,r5,r6
 40263c0:	38c6983a 	sll	r3,r7,r3
 40263c4:	29c00017 	ldw	r7,0(r5)
 40263c8:	2a7ffe04 	addi	r9,r5,-8
 40263cc:	1886b03a 	or	r3,r3,r2
 40263d0:	82400315 	stw	r9,12(r16)
 40263d4:	81c00215 	stw	r7,8(r16)
 40263d8:	30c00115 	stw	r3,4(r6)
 40263dc:	2c000015 	stw	r16,0(r5)
 40263e0:	3c000315 	stw	r16,12(r7)
 40263e4:	2005d0ba 	srai	r2,r4,2
 40263e8:	01400044 	movi	r5,1
 40263ec:	288a983a 	sll	r5,r5,r2
 40263f0:	19406f36 	bltu	r3,r5,40265b0 <_malloc_r+0x324>
 40263f4:	28c4703a 	and	r2,r5,r3
 40263f8:	10000a1e 	bne	r2,zero,4026424 <_malloc_r+0x198>
 40263fc:	00bfff04 	movi	r2,-4
 4026400:	294b883a 	add	r5,r5,r5
 4026404:	2088703a 	and	r4,r4,r2
 4026408:	28c4703a 	and	r2,r5,r3
 402640c:	21000104 	addi	r4,r4,4
 4026410:	1000041e 	bne	r2,zero,4026424 <_malloc_r+0x198>
 4026414:	294b883a 	add	r5,r5,r5
 4026418:	28c4703a 	and	r2,r5,r3
 402641c:	21000104 	addi	r4,r4,4
 4026420:	103ffc26 	beq	r2,zero,4026414 <_gp+0xfffebcb0>
 4026424:	02bfff04 	movi	r10,-4
 4026428:	024003c4 	movi	r9,15
 402642c:	21800044 	addi	r6,r4,1
 4026430:	318d883a 	add	r6,r6,r6
 4026434:	318d883a 	add	r6,r6,r6
 4026438:	318d883a 	add	r6,r6,r6
 402643c:	998d883a 	add	r6,r19,r6
 4026440:	333ffe04 	addi	r12,r6,-8
 4026444:	2017883a 	mov	r11,r4
 4026448:	31800104 	addi	r6,r6,4
 402644c:	34000017 	ldw	r16,0(r6)
 4026450:	31fffd04 	addi	r7,r6,-12
 4026454:	81c0041e 	bne	r16,r7,4026468 <_malloc_r+0x1dc>
 4026458:	0000fb06 	br	4026848 <_malloc_r+0x5bc>
 402645c:	1801030e 	bge	r3,zero,402686c <_malloc_r+0x5e0>
 4026460:	84000317 	ldw	r16,12(r16)
 4026464:	81c0f826 	beq	r16,r7,4026848 <_malloc_r+0x5bc>
 4026468:	80800117 	ldw	r2,4(r16)
 402646c:	1284703a 	and	r2,r2,r10
 4026470:	1447c83a 	sub	r3,r2,r17
 4026474:	48fff90e 	bge	r9,r3,402645c <_gp+0xfffebcf8>
 4026478:	80800317 	ldw	r2,12(r16)
 402647c:	81000217 	ldw	r4,8(r16)
 4026480:	89400054 	ori	r5,r17,1
 4026484:	81400115 	stw	r5,4(r16)
 4026488:	20800315 	stw	r2,12(r4)
 402648c:	11000215 	stw	r4,8(r2)
 4026490:	8463883a 	add	r17,r16,r17
 4026494:	9c400515 	stw	r17,20(r19)
 4026498:	9c400415 	stw	r17,16(r19)
 402649c:	18800054 	ori	r2,r3,1
 40264a0:	88800115 	stw	r2,4(r17)
 40264a4:	8a000315 	stw	r8,12(r17)
 40264a8:	8a000215 	stw	r8,8(r17)
 40264ac:	88e3883a 	add	r17,r17,r3
 40264b0:	88c00015 	stw	r3,0(r17)
 40264b4:	9009883a 	mov	r4,r18
 40264b8:	402e4480 	call	402e448 <__malloc_unlock>
 40264bc:	80800204 	addi	r2,r16,8
 40264c0:	00001b06 	br	4026530 <_malloc_r+0x2a4>
 40264c4:	04400404 	movi	r17,16
 40264c8:	89402536 	bltu	r17,r5,4026560 <_malloc_r+0x2d4>
 40264cc:	402e4240 	call	402e424 <__malloc_lock>
 40264d0:	00800184 	movi	r2,6
 40264d4:	01000084 	movi	r4,2
 40264d8:	04c100f4 	movhi	r19,1027
 40264dc:	1085883a 	add	r2,r2,r2
 40264e0:	9cc45504 	addi	r19,r19,4436
 40264e4:	1085883a 	add	r2,r2,r2
 40264e8:	9885883a 	add	r2,r19,r2
 40264ec:	14000117 	ldw	r16,4(r2)
 40264f0:	10fffe04 	addi	r3,r2,-8
 40264f4:	80c0d926 	beq	r16,r3,402685c <_malloc_r+0x5d0>
 40264f8:	80c00117 	ldw	r3,4(r16)
 40264fc:	81000317 	ldw	r4,12(r16)
 4026500:	00bfff04 	movi	r2,-4
 4026504:	1884703a 	and	r2,r3,r2
 4026508:	81400217 	ldw	r5,8(r16)
 402650c:	8085883a 	add	r2,r16,r2
 4026510:	10c00117 	ldw	r3,4(r2)
 4026514:	29000315 	stw	r4,12(r5)
 4026518:	21400215 	stw	r5,8(r4)
 402651c:	18c00054 	ori	r3,r3,1
 4026520:	10c00115 	stw	r3,4(r2)
 4026524:	9009883a 	mov	r4,r18
 4026528:	402e4480 	call	402e448 <__malloc_unlock>
 402652c:	80800204 	addi	r2,r16,8
 4026530:	dfc00a17 	ldw	ra,40(sp)
 4026534:	df000917 	ldw	fp,36(sp)
 4026538:	ddc00817 	ldw	r23,32(sp)
 402653c:	dd800717 	ldw	r22,28(sp)
 4026540:	dd400617 	ldw	r21,24(sp)
 4026544:	dd000517 	ldw	r20,20(sp)
 4026548:	dcc00417 	ldw	r19,16(sp)
 402654c:	dc800317 	ldw	r18,12(sp)
 4026550:	dc400217 	ldw	r17,8(sp)
 4026554:	dc000117 	ldw	r16,4(sp)
 4026558:	dec00b04 	addi	sp,sp,44
 402655c:	f800283a 	ret
 4026560:	00800304 	movi	r2,12
 4026564:	90800015 	stw	r2,0(r18)
 4026568:	0005883a 	mov	r2,zero
 402656c:	003ff006 	br	4026530 <_gp+0xfffebdcc>
 4026570:	01002004 	movi	r4,128
 4026574:	02001004 	movi	r8,64
 4026578:	01c00fc4 	movi	r7,63
 402657c:	003f6106 	br	4026304 <_gp+0xfffebba0>
 4026580:	4009883a 	mov	r4,r8
 4026584:	003f7506 	br	402635c <_gp+0xfffebbf8>
 4026588:	81000317 	ldw	r4,12(r16)
 402658c:	003fde06 	br	4026508 <_gp+0xfffebda4>
 4026590:	81c5883a 	add	r2,r16,r7
 4026594:	11400117 	ldw	r5,4(r2)
 4026598:	9009883a 	mov	r4,r18
 402659c:	29400054 	ori	r5,r5,1
 40265a0:	11400115 	stw	r5,4(r2)
 40265a4:	402e4480 	call	402e448 <__malloc_unlock>
 40265a8:	80800204 	addi	r2,r16,8
 40265ac:	003fe006 	br	4026530 <_gp+0xfffebdcc>
 40265b0:	9c000217 	ldw	r16,8(r19)
 40265b4:	00bfff04 	movi	r2,-4
 40265b8:	85800117 	ldw	r22,4(r16)
 40265bc:	b0ac703a 	and	r22,r22,r2
 40265c0:	b4400336 	bltu	r22,r17,40265d0 <_malloc_r+0x344>
 40265c4:	b445c83a 	sub	r2,r22,r17
 40265c8:	00c003c4 	movi	r3,15
 40265cc:	18805d16 	blt	r3,r2,4026744 <_malloc_r+0x4b8>
 40265d0:	05c100f4 	movhi	r23,1027
 40265d4:	008100f4 	movhi	r2,1027
 40265d8:	1090a904 	addi	r2,r2,17060
 40265dc:	bdc9dc04 	addi	r23,r23,10096
 40265e0:	15400017 	ldw	r21,0(r2)
 40265e4:	b8c00017 	ldw	r3,0(r23)
 40265e8:	00bfffc4 	movi	r2,-1
 40265ec:	858d883a 	add	r6,r16,r22
 40265f0:	8d6b883a 	add	r21,r17,r21
 40265f4:	1880ea26 	beq	r3,r2,40269a0 <_malloc_r+0x714>
 40265f8:	ad4403c4 	addi	r21,r21,4111
 40265fc:	00bc0004 	movi	r2,-4096
 4026600:	a8aa703a 	and	r21,r21,r2
 4026604:	a80b883a 	mov	r5,r21
 4026608:	9009883a 	mov	r4,r18
 402660c:	d9800015 	stw	r6,0(sp)
 4026610:	40285f80 	call	40285f8 <_sbrk_r>
 4026614:	1029883a 	mov	r20,r2
 4026618:	00bfffc4 	movi	r2,-1
 402661c:	d9800017 	ldw	r6,0(sp)
 4026620:	a080e826 	beq	r20,r2,40269c4 <_malloc_r+0x738>
 4026624:	a180a636 	bltu	r20,r6,40268c0 <_malloc_r+0x634>
 4026628:	070100f4 	movhi	fp,1027
 402662c:	e710b204 	addi	fp,fp,17096
 4026630:	e0800017 	ldw	r2,0(fp)
 4026634:	a887883a 	add	r3,r21,r2
 4026638:	e0c00015 	stw	r3,0(fp)
 402663c:	3500e626 	beq	r6,r20,40269d8 <_malloc_r+0x74c>
 4026640:	b9000017 	ldw	r4,0(r23)
 4026644:	00bfffc4 	movi	r2,-1
 4026648:	2080ee26 	beq	r4,r2,4026a04 <_malloc_r+0x778>
 402664c:	a185c83a 	sub	r2,r20,r6
 4026650:	10c5883a 	add	r2,r2,r3
 4026654:	e0800015 	stw	r2,0(fp)
 4026658:	a0c001cc 	andi	r3,r20,7
 402665c:	1800bc26 	beq	r3,zero,4026950 <_malloc_r+0x6c4>
 4026660:	a0e9c83a 	sub	r20,r20,r3
 4026664:	00840204 	movi	r2,4104
 4026668:	a5000204 	addi	r20,r20,8
 402666c:	10c7c83a 	sub	r3,r2,r3
 4026670:	a545883a 	add	r2,r20,r21
 4026674:	1083ffcc 	andi	r2,r2,4095
 4026678:	18abc83a 	sub	r21,r3,r2
 402667c:	a80b883a 	mov	r5,r21
 4026680:	9009883a 	mov	r4,r18
 4026684:	40285f80 	call	40285f8 <_sbrk_r>
 4026688:	00ffffc4 	movi	r3,-1
 402668c:	10c0e126 	beq	r2,r3,4026a14 <_malloc_r+0x788>
 4026690:	1505c83a 	sub	r2,r2,r20
 4026694:	1545883a 	add	r2,r2,r21
 4026698:	10800054 	ori	r2,r2,1
 402669c:	e0c00017 	ldw	r3,0(fp)
 40266a0:	9d000215 	stw	r20,8(r19)
 40266a4:	a0800115 	stw	r2,4(r20)
 40266a8:	a8c7883a 	add	r3,r21,r3
 40266ac:	e0c00015 	stw	r3,0(fp)
 40266b0:	84c00e26 	beq	r16,r19,40266ec <_malloc_r+0x460>
 40266b4:	018003c4 	movi	r6,15
 40266b8:	3580a72e 	bgeu	r6,r22,4026958 <_malloc_r+0x6cc>
 40266bc:	81400117 	ldw	r5,4(r16)
 40266c0:	013ffe04 	movi	r4,-8
 40266c4:	b0bffd04 	addi	r2,r22,-12
 40266c8:	1104703a 	and	r2,r2,r4
 40266cc:	2900004c 	andi	r4,r5,1
 40266d0:	2088b03a 	or	r4,r4,r2
 40266d4:	81000115 	stw	r4,4(r16)
 40266d8:	01400144 	movi	r5,5
 40266dc:	8089883a 	add	r4,r16,r2
 40266e0:	21400115 	stw	r5,4(r4)
 40266e4:	21400215 	stw	r5,8(r4)
 40266e8:	3080cd36 	bltu	r6,r2,4026a20 <_malloc_r+0x794>
 40266ec:	008100f4 	movhi	r2,1027
 40266f0:	1090a804 	addi	r2,r2,17056
 40266f4:	11000017 	ldw	r4,0(r2)
 40266f8:	20c0012e 	bgeu	r4,r3,4026700 <_malloc_r+0x474>
 40266fc:	10c00015 	stw	r3,0(r2)
 4026700:	008100f4 	movhi	r2,1027
 4026704:	1090a704 	addi	r2,r2,17052
 4026708:	11000017 	ldw	r4,0(r2)
 402670c:	9c000217 	ldw	r16,8(r19)
 4026710:	20c0012e 	bgeu	r4,r3,4026718 <_malloc_r+0x48c>
 4026714:	10c00015 	stw	r3,0(r2)
 4026718:	80c00117 	ldw	r3,4(r16)
 402671c:	00bfff04 	movi	r2,-4
 4026720:	1886703a 	and	r3,r3,r2
 4026724:	1c45c83a 	sub	r2,r3,r17
 4026728:	1c400236 	bltu	r3,r17,4026734 <_malloc_r+0x4a8>
 402672c:	00c003c4 	movi	r3,15
 4026730:	18800416 	blt	r3,r2,4026744 <_malloc_r+0x4b8>
 4026734:	9009883a 	mov	r4,r18
 4026738:	402e4480 	call	402e448 <__malloc_unlock>
 402673c:	0005883a 	mov	r2,zero
 4026740:	003f7b06 	br	4026530 <_gp+0xfffebdcc>
 4026744:	88c00054 	ori	r3,r17,1
 4026748:	80c00115 	stw	r3,4(r16)
 402674c:	8463883a 	add	r17,r16,r17
 4026750:	10800054 	ori	r2,r2,1
 4026754:	9c400215 	stw	r17,8(r19)
 4026758:	88800115 	stw	r2,4(r17)
 402675c:	9009883a 	mov	r4,r18
 4026760:	402e4480 	call	402e448 <__malloc_unlock>
 4026764:	80800204 	addi	r2,r16,8
 4026768:	003f7106 	br	4026530 <_gp+0xfffebdcc>
 402676c:	00c00504 	movi	r3,20
 4026770:	18804a2e 	bgeu	r3,r2,402689c <_malloc_r+0x610>
 4026774:	00c01504 	movi	r3,84
 4026778:	18806e36 	bltu	r3,r2,4026934 <_malloc_r+0x6a8>
 402677c:	8804d33a 	srli	r2,r17,12
 4026780:	12001bc4 	addi	r8,r2,111
 4026784:	11c01b84 	addi	r7,r2,110
 4026788:	4209883a 	add	r4,r8,r8
 402678c:	003edd06 	br	4026304 <_gp+0xfffebba0>
 4026790:	3804d27a 	srli	r2,r7,9
 4026794:	00c00104 	movi	r3,4
 4026798:	1880442e 	bgeu	r3,r2,40268ac <_malloc_r+0x620>
 402679c:	00c00504 	movi	r3,20
 40267a0:	18808136 	bltu	r3,r2,40269a8 <_malloc_r+0x71c>
 40267a4:	11401704 	addi	r5,r2,92
 40267a8:	10c016c4 	addi	r3,r2,91
 40267ac:	294b883a 	add	r5,r5,r5
 40267b0:	294b883a 	add	r5,r5,r5
 40267b4:	294b883a 	add	r5,r5,r5
 40267b8:	994b883a 	add	r5,r19,r5
 40267bc:	28800017 	ldw	r2,0(r5)
 40267c0:	018100f4 	movhi	r6,1027
 40267c4:	297ffe04 	addi	r5,r5,-8
 40267c8:	31845504 	addi	r6,r6,4436
 40267cc:	28806526 	beq	r5,r2,4026964 <_malloc_r+0x6d8>
 40267d0:	01bfff04 	movi	r6,-4
 40267d4:	10c00117 	ldw	r3,4(r2)
 40267d8:	1986703a 	and	r3,r3,r6
 40267dc:	38c0022e 	bgeu	r7,r3,40267e8 <_malloc_r+0x55c>
 40267e0:	10800217 	ldw	r2,8(r2)
 40267e4:	28bffb1e 	bne	r5,r2,40267d4 <_gp+0xfffec070>
 40267e8:	11400317 	ldw	r5,12(r2)
 40267ec:	98c00117 	ldw	r3,4(r19)
 40267f0:	81400315 	stw	r5,12(r16)
 40267f4:	80800215 	stw	r2,8(r16)
 40267f8:	2c000215 	stw	r16,8(r5)
 40267fc:	14000315 	stw	r16,12(r2)
 4026800:	003ef806 	br	40263e4 <_gp+0xfffebc80>
 4026804:	88c00054 	ori	r3,r17,1
 4026808:	80c00115 	stw	r3,4(r16)
 402680c:	8463883a 	add	r17,r16,r17
 4026810:	34400515 	stw	r17,20(r6)
 4026814:	34400415 	stw	r17,16(r6)
 4026818:	10c00054 	ori	r3,r2,1
 402681c:	8a000315 	stw	r8,12(r17)
 4026820:	8a000215 	stw	r8,8(r17)
 4026824:	88c00115 	stw	r3,4(r17)
 4026828:	88a3883a 	add	r17,r17,r2
 402682c:	88800015 	stw	r2,0(r17)
 4026830:	9009883a 	mov	r4,r18
 4026834:	402e4480 	call	402e448 <__malloc_unlock>
 4026838:	80800204 	addi	r2,r16,8
 402683c:	003f3c06 	br	4026530 <_gp+0xfffebdcc>
 4026840:	30c00117 	ldw	r3,4(r6)
 4026844:	003ee706 	br	40263e4 <_gp+0xfffebc80>
 4026848:	5ac00044 	addi	r11,r11,1
 402684c:	588000cc 	andi	r2,r11,3
 4026850:	31800204 	addi	r6,r6,8
 4026854:	103efd1e 	bne	r2,zero,402644c <_gp+0xfffebce8>
 4026858:	00002406 	br	40268ec <_malloc_r+0x660>
 402685c:	14000317 	ldw	r16,12(r2)
 4026860:	143f251e 	bne	r2,r16,40264f8 <_gp+0xfffebd94>
 4026864:	21000084 	addi	r4,r4,2
 4026868:	003ebc06 	br	402635c <_gp+0xfffebbf8>
 402686c:	8085883a 	add	r2,r16,r2
 4026870:	10c00117 	ldw	r3,4(r2)
 4026874:	81000317 	ldw	r4,12(r16)
 4026878:	81400217 	ldw	r5,8(r16)
 402687c:	18c00054 	ori	r3,r3,1
 4026880:	10c00115 	stw	r3,4(r2)
 4026884:	29000315 	stw	r4,12(r5)
 4026888:	21400215 	stw	r5,8(r4)
 402688c:	9009883a 	mov	r4,r18
 4026890:	402e4480 	call	402e448 <__malloc_unlock>
 4026894:	80800204 	addi	r2,r16,8
 4026898:	003f2506 	br	4026530 <_gp+0xfffebdcc>
 402689c:	12001704 	addi	r8,r2,92
 40268a0:	11c016c4 	addi	r7,r2,91
 40268a4:	4209883a 	add	r4,r8,r8
 40268a8:	003e9606 	br	4026304 <_gp+0xfffebba0>
 40268ac:	3804d1ba 	srli	r2,r7,6
 40268b0:	11400e44 	addi	r5,r2,57
 40268b4:	10c00e04 	addi	r3,r2,56
 40268b8:	294b883a 	add	r5,r5,r5
 40268bc:	003fbc06 	br	40267b0 <_gp+0xfffec04c>
 40268c0:	84ff5926 	beq	r16,r19,4026628 <_gp+0xfffebec4>
 40268c4:	008100f4 	movhi	r2,1027
 40268c8:	10845504 	addi	r2,r2,4436
 40268cc:	14000217 	ldw	r16,8(r2)
 40268d0:	00bfff04 	movi	r2,-4
 40268d4:	80c00117 	ldw	r3,4(r16)
 40268d8:	1886703a 	and	r3,r3,r2
 40268dc:	003f9106 	br	4026724 <_gp+0xfffebfc0>
 40268e0:	60800217 	ldw	r2,8(r12)
 40268e4:	213fffc4 	addi	r4,r4,-1
 40268e8:	1300651e 	bne	r2,r12,4026a80 <_malloc_r+0x7f4>
 40268ec:	208000cc 	andi	r2,r4,3
 40268f0:	633ffe04 	addi	r12,r12,-8
 40268f4:	103ffa1e 	bne	r2,zero,40268e0 <_gp+0xfffec17c>
 40268f8:	98800117 	ldw	r2,4(r19)
 40268fc:	0146303a 	nor	r3,zero,r5
 4026900:	1884703a 	and	r2,r3,r2
 4026904:	98800115 	stw	r2,4(r19)
 4026908:	294b883a 	add	r5,r5,r5
 402690c:	117f2836 	bltu	r2,r5,40265b0 <_gp+0xfffebe4c>
 4026910:	283f2726 	beq	r5,zero,40265b0 <_gp+0xfffebe4c>
 4026914:	2886703a 	and	r3,r5,r2
 4026918:	5809883a 	mov	r4,r11
 402691c:	183ec31e 	bne	r3,zero,402642c <_gp+0xfffebcc8>
 4026920:	294b883a 	add	r5,r5,r5
 4026924:	2886703a 	and	r3,r5,r2
 4026928:	21000104 	addi	r4,r4,4
 402692c:	183ffc26 	beq	r3,zero,4026920 <_gp+0xfffec1bc>
 4026930:	003ebe06 	br	402642c <_gp+0xfffebcc8>
 4026934:	00c05504 	movi	r3,340
 4026938:	18801236 	bltu	r3,r2,4026984 <_malloc_r+0x6f8>
 402693c:	8804d3fa 	srli	r2,r17,15
 4026940:	12001e04 	addi	r8,r2,120
 4026944:	11c01dc4 	addi	r7,r2,119
 4026948:	4209883a 	add	r4,r8,r8
 402694c:	003e6d06 	br	4026304 <_gp+0xfffebba0>
 4026950:	00c40004 	movi	r3,4096
 4026954:	003f4606 	br	4026670 <_gp+0xfffebf0c>
 4026958:	00800044 	movi	r2,1
 402695c:	a0800115 	stw	r2,4(r20)
 4026960:	003f7406 	br	4026734 <_gp+0xfffebfd0>
 4026964:	1805d0ba 	srai	r2,r3,2
 4026968:	01c00044 	movi	r7,1
 402696c:	30c00117 	ldw	r3,4(r6)
 4026970:	388e983a 	sll	r7,r7,r2
 4026974:	2805883a 	mov	r2,r5
 4026978:	38c6b03a 	or	r3,r7,r3
 402697c:	30c00115 	stw	r3,4(r6)
 4026980:	003f9b06 	br	40267f0 <_gp+0xfffec08c>
 4026984:	00c15504 	movi	r3,1364
 4026988:	18801a36 	bltu	r3,r2,40269f4 <_malloc_r+0x768>
 402698c:	8804d4ba 	srli	r2,r17,18
 4026990:	12001f44 	addi	r8,r2,125
 4026994:	11c01f04 	addi	r7,r2,124
 4026998:	4209883a 	add	r4,r8,r8
 402699c:	003e5906 	br	4026304 <_gp+0xfffebba0>
 40269a0:	ad400404 	addi	r21,r21,16
 40269a4:	003f1706 	br	4026604 <_gp+0xfffebea0>
 40269a8:	00c01504 	movi	r3,84
 40269ac:	18802336 	bltu	r3,r2,4026a3c <_malloc_r+0x7b0>
 40269b0:	3804d33a 	srli	r2,r7,12
 40269b4:	11401bc4 	addi	r5,r2,111
 40269b8:	10c01b84 	addi	r3,r2,110
 40269bc:	294b883a 	add	r5,r5,r5
 40269c0:	003f7b06 	br	40267b0 <_gp+0xfffec04c>
 40269c4:	9c000217 	ldw	r16,8(r19)
 40269c8:	00bfff04 	movi	r2,-4
 40269cc:	80c00117 	ldw	r3,4(r16)
 40269d0:	1886703a 	and	r3,r3,r2
 40269d4:	003f5306 	br	4026724 <_gp+0xfffebfc0>
 40269d8:	3083ffcc 	andi	r2,r6,4095
 40269dc:	103f181e 	bne	r2,zero,4026640 <_gp+0xfffebedc>
 40269e0:	99000217 	ldw	r4,8(r19)
 40269e4:	b545883a 	add	r2,r22,r21
 40269e8:	10800054 	ori	r2,r2,1
 40269ec:	20800115 	stw	r2,4(r4)
 40269f0:	003f3e06 	br	40266ec <_gp+0xfffebf88>
 40269f4:	01003f84 	movi	r4,254
 40269f8:	02001fc4 	movi	r8,127
 40269fc:	01c01f84 	movi	r7,126
 4026a00:	003e4006 	br	4026304 <_gp+0xfffebba0>
 4026a04:	008100f4 	movhi	r2,1027
 4026a08:	1089dc04 	addi	r2,r2,10096
 4026a0c:	15000015 	stw	r20,0(r2)
 4026a10:	003f1106 	br	4026658 <_gp+0xfffebef4>
 4026a14:	00800044 	movi	r2,1
 4026a18:	002b883a 	mov	r21,zero
 4026a1c:	003f1f06 	br	402669c <_gp+0xfffebf38>
 4026a20:	81400204 	addi	r5,r16,8
 4026a24:	9009883a 	mov	r4,r18
 4026a28:	40256940 	call	4025694 <_free_r>
 4026a2c:	008100f4 	movhi	r2,1027
 4026a30:	1090b204 	addi	r2,r2,17096
 4026a34:	10c00017 	ldw	r3,0(r2)
 4026a38:	003f2c06 	br	40266ec <_gp+0xfffebf88>
 4026a3c:	00c05504 	movi	r3,340
 4026a40:	18800536 	bltu	r3,r2,4026a58 <_malloc_r+0x7cc>
 4026a44:	3804d3fa 	srli	r2,r7,15
 4026a48:	11401e04 	addi	r5,r2,120
 4026a4c:	10c01dc4 	addi	r3,r2,119
 4026a50:	294b883a 	add	r5,r5,r5
 4026a54:	003f5606 	br	40267b0 <_gp+0xfffec04c>
 4026a58:	00c15504 	movi	r3,1364
 4026a5c:	18800536 	bltu	r3,r2,4026a74 <_malloc_r+0x7e8>
 4026a60:	3804d4ba 	srli	r2,r7,18
 4026a64:	11401f44 	addi	r5,r2,125
 4026a68:	10c01f04 	addi	r3,r2,124
 4026a6c:	294b883a 	add	r5,r5,r5
 4026a70:	003f4f06 	br	40267b0 <_gp+0xfffec04c>
 4026a74:	01403f84 	movi	r5,254
 4026a78:	00c01f84 	movi	r3,126
 4026a7c:	003f4c06 	br	40267b0 <_gp+0xfffec04c>
 4026a80:	98800117 	ldw	r2,4(r19)
 4026a84:	003fa006 	br	4026908 <_gp+0xfffec1a4>
 4026a88:	8808d0fa 	srli	r4,r17,3
 4026a8c:	20800044 	addi	r2,r4,1
 4026a90:	1085883a 	add	r2,r2,r2
 4026a94:	003e9006 	br	40264d8 <_gp+0xfffebd74>

04026a98 <memchr>:
 4026a98:	208000cc 	andi	r2,r4,3
 4026a9c:	280f883a 	mov	r7,r5
 4026aa0:	10003426 	beq	r2,zero,4026b74 <memchr+0xdc>
 4026aa4:	30bfffc4 	addi	r2,r6,-1
 4026aa8:	30001a26 	beq	r6,zero,4026b14 <memchr+0x7c>
 4026aac:	20c00003 	ldbu	r3,0(r4)
 4026ab0:	29803fcc 	andi	r6,r5,255
 4026ab4:	30c0051e 	bne	r6,r3,4026acc <memchr+0x34>
 4026ab8:	00001806 	br	4026b1c <memchr+0x84>
 4026abc:	10001526 	beq	r2,zero,4026b14 <memchr+0x7c>
 4026ac0:	20c00003 	ldbu	r3,0(r4)
 4026ac4:	10bfffc4 	addi	r2,r2,-1
 4026ac8:	30c01426 	beq	r6,r3,4026b1c <memchr+0x84>
 4026acc:	21000044 	addi	r4,r4,1
 4026ad0:	20c000cc 	andi	r3,r4,3
 4026ad4:	183ff91e 	bne	r3,zero,4026abc <_gp+0xfffec358>
 4026ad8:	020000c4 	movi	r8,3
 4026adc:	40801136 	bltu	r8,r2,4026b24 <memchr+0x8c>
 4026ae0:	10000c26 	beq	r2,zero,4026b14 <memchr+0x7c>
 4026ae4:	20c00003 	ldbu	r3,0(r4)
 4026ae8:	29403fcc 	andi	r5,r5,255
 4026aec:	28c00b26 	beq	r5,r3,4026b1c <memchr+0x84>
 4026af0:	20c00044 	addi	r3,r4,1
 4026af4:	39803fcc 	andi	r6,r7,255
 4026af8:	2089883a 	add	r4,r4,r2
 4026afc:	00000306 	br	4026b0c <memchr+0x74>
 4026b00:	18c00044 	addi	r3,r3,1
 4026b04:	197fffc3 	ldbu	r5,-1(r3)
 4026b08:	31400526 	beq	r6,r5,4026b20 <memchr+0x88>
 4026b0c:	1805883a 	mov	r2,r3
 4026b10:	20fffb1e 	bne	r4,r3,4026b00 <_gp+0xfffec39c>
 4026b14:	0005883a 	mov	r2,zero
 4026b18:	f800283a 	ret
 4026b1c:	2005883a 	mov	r2,r4
 4026b20:	f800283a 	ret
 4026b24:	28c03fcc 	andi	r3,r5,255
 4026b28:	1812923a 	slli	r9,r3,8
 4026b2c:	02ffbff4 	movhi	r11,65279
 4026b30:	02a02074 	movhi	r10,32897
 4026b34:	48d2b03a 	or	r9,r9,r3
 4026b38:	4806943a 	slli	r3,r9,16
 4026b3c:	5affbfc4 	addi	r11,r11,-257
 4026b40:	52a02004 	addi	r10,r10,-32640
 4026b44:	48d2b03a 	or	r9,r9,r3
 4026b48:	20c00017 	ldw	r3,0(r4)
 4026b4c:	48c6f03a 	xor	r3,r9,r3
 4026b50:	1acd883a 	add	r6,r3,r11
 4026b54:	00c6303a 	nor	r3,zero,r3
 4026b58:	30c6703a 	and	r3,r6,r3
 4026b5c:	1a86703a 	and	r3,r3,r10
 4026b60:	183fe01e 	bne	r3,zero,4026ae4 <_gp+0xfffec380>
 4026b64:	10bfff04 	addi	r2,r2,-4
 4026b68:	21000104 	addi	r4,r4,4
 4026b6c:	40bff636 	bltu	r8,r2,4026b48 <_gp+0xfffec3e4>
 4026b70:	003fdb06 	br	4026ae0 <_gp+0xfffec37c>
 4026b74:	3005883a 	mov	r2,r6
 4026b78:	003fd706 	br	4026ad8 <_gp+0xfffec374>

04026b7c <memmove>:
 4026b7c:	2005883a 	mov	r2,r4
 4026b80:	29000b2e 	bgeu	r5,r4,4026bb0 <memmove+0x34>
 4026b84:	298f883a 	add	r7,r5,r6
 4026b88:	21c0092e 	bgeu	r4,r7,4026bb0 <memmove+0x34>
 4026b8c:	2187883a 	add	r3,r4,r6
 4026b90:	198bc83a 	sub	r5,r3,r6
 4026b94:	30004826 	beq	r6,zero,4026cb8 <memmove+0x13c>
 4026b98:	39ffffc4 	addi	r7,r7,-1
 4026b9c:	39000003 	ldbu	r4,0(r7)
 4026ba0:	18ffffc4 	addi	r3,r3,-1
 4026ba4:	19000005 	stb	r4,0(r3)
 4026ba8:	28fffb1e 	bne	r5,r3,4026b98 <_gp+0xfffec434>
 4026bac:	f800283a 	ret
 4026bb0:	00c003c4 	movi	r3,15
 4026bb4:	1980412e 	bgeu	r3,r6,4026cbc <memmove+0x140>
 4026bb8:	2886b03a 	or	r3,r5,r2
 4026bbc:	18c000cc 	andi	r3,r3,3
 4026bc0:	1800401e 	bne	r3,zero,4026cc4 <memmove+0x148>
 4026bc4:	33fffc04 	addi	r15,r6,-16
 4026bc8:	781ed13a 	srli	r15,r15,4
 4026bcc:	28c00104 	addi	r3,r5,4
 4026bd0:	13400104 	addi	r13,r2,4
 4026bd4:	781c913a 	slli	r14,r15,4
 4026bd8:	2b000204 	addi	r12,r5,8
 4026bdc:	12c00204 	addi	r11,r2,8
 4026be0:	73800504 	addi	r14,r14,20
 4026be4:	2a800304 	addi	r10,r5,12
 4026be8:	12400304 	addi	r9,r2,12
 4026bec:	2b9d883a 	add	r14,r5,r14
 4026bf0:	2811883a 	mov	r8,r5
 4026bf4:	100f883a 	mov	r7,r2
 4026bf8:	41000017 	ldw	r4,0(r8)
 4026bfc:	39c00404 	addi	r7,r7,16
 4026c00:	18c00404 	addi	r3,r3,16
 4026c04:	393ffc15 	stw	r4,-16(r7)
 4026c08:	193ffc17 	ldw	r4,-16(r3)
 4026c0c:	6b400404 	addi	r13,r13,16
 4026c10:	5ac00404 	addi	r11,r11,16
 4026c14:	693ffc15 	stw	r4,-16(r13)
 4026c18:	61000017 	ldw	r4,0(r12)
 4026c1c:	4a400404 	addi	r9,r9,16
 4026c20:	42000404 	addi	r8,r8,16
 4026c24:	593ffc15 	stw	r4,-16(r11)
 4026c28:	51000017 	ldw	r4,0(r10)
 4026c2c:	63000404 	addi	r12,r12,16
 4026c30:	52800404 	addi	r10,r10,16
 4026c34:	493ffc15 	stw	r4,-16(r9)
 4026c38:	1bbfef1e 	bne	r3,r14,4026bf8 <_gp+0xfffec494>
 4026c3c:	79000044 	addi	r4,r15,1
 4026c40:	2008913a 	slli	r4,r4,4
 4026c44:	328003cc 	andi	r10,r6,15
 4026c48:	02c000c4 	movi	r11,3
 4026c4c:	1107883a 	add	r3,r2,r4
 4026c50:	290b883a 	add	r5,r5,r4
 4026c54:	5a801e2e 	bgeu	r11,r10,4026cd0 <memmove+0x154>
 4026c58:	1813883a 	mov	r9,r3
 4026c5c:	2811883a 	mov	r8,r5
 4026c60:	500f883a 	mov	r7,r10
 4026c64:	41000017 	ldw	r4,0(r8)
 4026c68:	4a400104 	addi	r9,r9,4
 4026c6c:	39ffff04 	addi	r7,r7,-4
 4026c70:	493fff15 	stw	r4,-4(r9)
 4026c74:	42000104 	addi	r8,r8,4
 4026c78:	59fffa36 	bltu	r11,r7,4026c64 <_gp+0xfffec500>
 4026c7c:	513fff04 	addi	r4,r10,-4
 4026c80:	2008d0ba 	srli	r4,r4,2
 4026c84:	318000cc 	andi	r6,r6,3
 4026c88:	21000044 	addi	r4,r4,1
 4026c8c:	2109883a 	add	r4,r4,r4
 4026c90:	2109883a 	add	r4,r4,r4
 4026c94:	1907883a 	add	r3,r3,r4
 4026c98:	290b883a 	add	r5,r5,r4
 4026c9c:	30000b26 	beq	r6,zero,4026ccc <memmove+0x150>
 4026ca0:	198d883a 	add	r6,r3,r6
 4026ca4:	29c00003 	ldbu	r7,0(r5)
 4026ca8:	18c00044 	addi	r3,r3,1
 4026cac:	29400044 	addi	r5,r5,1
 4026cb0:	19ffffc5 	stb	r7,-1(r3)
 4026cb4:	19bffb1e 	bne	r3,r6,4026ca4 <_gp+0xfffec540>
 4026cb8:	f800283a 	ret
 4026cbc:	1007883a 	mov	r3,r2
 4026cc0:	003ff606 	br	4026c9c <_gp+0xfffec538>
 4026cc4:	1007883a 	mov	r3,r2
 4026cc8:	003ff506 	br	4026ca0 <_gp+0xfffec53c>
 4026ccc:	f800283a 	ret
 4026cd0:	500d883a 	mov	r6,r10
 4026cd4:	003ff106 	br	4026c9c <_gp+0xfffec538>

04026cd8 <memset>:
 4026cd8:	20c000cc 	andi	r3,r4,3
 4026cdc:	2005883a 	mov	r2,r4
 4026ce0:	18004426 	beq	r3,zero,4026df4 <memset+0x11c>
 4026ce4:	31ffffc4 	addi	r7,r6,-1
 4026ce8:	30004026 	beq	r6,zero,4026dec <memset+0x114>
 4026cec:	2813883a 	mov	r9,r5
 4026cf0:	200d883a 	mov	r6,r4
 4026cf4:	2007883a 	mov	r3,r4
 4026cf8:	00000406 	br	4026d0c <memset+0x34>
 4026cfc:	3a3fffc4 	addi	r8,r7,-1
 4026d00:	31800044 	addi	r6,r6,1
 4026d04:	38003926 	beq	r7,zero,4026dec <memset+0x114>
 4026d08:	400f883a 	mov	r7,r8
 4026d0c:	18c00044 	addi	r3,r3,1
 4026d10:	32400005 	stb	r9,0(r6)
 4026d14:	1a0000cc 	andi	r8,r3,3
 4026d18:	403ff81e 	bne	r8,zero,4026cfc <_gp+0xfffec598>
 4026d1c:	010000c4 	movi	r4,3
 4026d20:	21c02d2e 	bgeu	r4,r7,4026dd8 <memset+0x100>
 4026d24:	29003fcc 	andi	r4,r5,255
 4026d28:	200c923a 	slli	r6,r4,8
 4026d2c:	3108b03a 	or	r4,r6,r4
 4026d30:	200c943a 	slli	r6,r4,16
 4026d34:	218cb03a 	or	r6,r4,r6
 4026d38:	010003c4 	movi	r4,15
 4026d3c:	21c0182e 	bgeu	r4,r7,4026da0 <memset+0xc8>
 4026d40:	3b3ffc04 	addi	r12,r7,-16
 4026d44:	6018d13a 	srli	r12,r12,4
 4026d48:	1a000104 	addi	r8,r3,4
 4026d4c:	1ac00204 	addi	r11,r3,8
 4026d50:	6008913a 	slli	r4,r12,4
 4026d54:	1a800304 	addi	r10,r3,12
 4026d58:	1813883a 	mov	r9,r3
 4026d5c:	21000504 	addi	r4,r4,20
 4026d60:	1909883a 	add	r4,r3,r4
 4026d64:	49800015 	stw	r6,0(r9)
 4026d68:	41800015 	stw	r6,0(r8)
 4026d6c:	59800015 	stw	r6,0(r11)
 4026d70:	51800015 	stw	r6,0(r10)
 4026d74:	42000404 	addi	r8,r8,16
 4026d78:	4a400404 	addi	r9,r9,16
 4026d7c:	5ac00404 	addi	r11,r11,16
 4026d80:	52800404 	addi	r10,r10,16
 4026d84:	413ff71e 	bne	r8,r4,4026d64 <_gp+0xfffec600>
 4026d88:	63000044 	addi	r12,r12,1
 4026d8c:	6018913a 	slli	r12,r12,4
 4026d90:	39c003cc 	andi	r7,r7,15
 4026d94:	010000c4 	movi	r4,3
 4026d98:	1b07883a 	add	r3,r3,r12
 4026d9c:	21c00e2e 	bgeu	r4,r7,4026dd8 <memset+0x100>
 4026da0:	1813883a 	mov	r9,r3
 4026da4:	3811883a 	mov	r8,r7
 4026da8:	010000c4 	movi	r4,3
 4026dac:	49800015 	stw	r6,0(r9)
 4026db0:	423fff04 	addi	r8,r8,-4
 4026db4:	4a400104 	addi	r9,r9,4
 4026db8:	223ffc36 	bltu	r4,r8,4026dac <_gp+0xfffec648>
 4026dbc:	393fff04 	addi	r4,r7,-4
 4026dc0:	2008d0ba 	srli	r4,r4,2
 4026dc4:	39c000cc 	andi	r7,r7,3
 4026dc8:	21000044 	addi	r4,r4,1
 4026dcc:	2109883a 	add	r4,r4,r4
 4026dd0:	2109883a 	add	r4,r4,r4
 4026dd4:	1907883a 	add	r3,r3,r4
 4026dd8:	38000526 	beq	r7,zero,4026df0 <memset+0x118>
 4026ddc:	19cf883a 	add	r7,r3,r7
 4026de0:	19400005 	stb	r5,0(r3)
 4026de4:	18c00044 	addi	r3,r3,1
 4026de8:	38fffd1e 	bne	r7,r3,4026de0 <_gp+0xfffec67c>
 4026dec:	f800283a 	ret
 4026df0:	f800283a 	ret
 4026df4:	2007883a 	mov	r3,r4
 4026df8:	300f883a 	mov	r7,r6
 4026dfc:	003fc706 	br	4026d1c <_gp+0xfffec5b8>

04026e00 <_Balloc>:
 4026e00:	20801317 	ldw	r2,76(r4)
 4026e04:	defffc04 	addi	sp,sp,-16
 4026e08:	dc400115 	stw	r17,4(sp)
 4026e0c:	dc000015 	stw	r16,0(sp)
 4026e10:	dfc00315 	stw	ra,12(sp)
 4026e14:	dc800215 	stw	r18,8(sp)
 4026e18:	2023883a 	mov	r17,r4
 4026e1c:	2821883a 	mov	r16,r5
 4026e20:	10000f26 	beq	r2,zero,4026e60 <_Balloc+0x60>
 4026e24:	8407883a 	add	r3,r16,r16
 4026e28:	18c7883a 	add	r3,r3,r3
 4026e2c:	10c7883a 	add	r3,r2,r3
 4026e30:	18800017 	ldw	r2,0(r3)
 4026e34:	10001126 	beq	r2,zero,4026e7c <_Balloc+0x7c>
 4026e38:	11000017 	ldw	r4,0(r2)
 4026e3c:	19000015 	stw	r4,0(r3)
 4026e40:	10000415 	stw	zero,16(r2)
 4026e44:	10000315 	stw	zero,12(r2)
 4026e48:	dfc00317 	ldw	ra,12(sp)
 4026e4c:	dc800217 	ldw	r18,8(sp)
 4026e50:	dc400117 	ldw	r17,4(sp)
 4026e54:	dc000017 	ldw	r16,0(sp)
 4026e58:	dec00404 	addi	sp,sp,16
 4026e5c:	f800283a 	ret
 4026e60:	01800844 	movi	r6,33
 4026e64:	01400104 	movi	r5,4
 4026e68:	402a1680 	call	402a168 <_calloc_r>
 4026e6c:	88801315 	stw	r2,76(r17)
 4026e70:	103fec1e 	bne	r2,zero,4026e24 <_gp+0xfffec6c0>
 4026e74:	0005883a 	mov	r2,zero
 4026e78:	003ff306 	br	4026e48 <_gp+0xfffec6e4>
 4026e7c:	01400044 	movi	r5,1
 4026e80:	2c24983a 	sll	r18,r5,r16
 4026e84:	8809883a 	mov	r4,r17
 4026e88:	91800144 	addi	r6,r18,5
 4026e8c:	318d883a 	add	r6,r6,r6
 4026e90:	318d883a 	add	r6,r6,r6
 4026e94:	402a1680 	call	402a168 <_calloc_r>
 4026e98:	103ff626 	beq	r2,zero,4026e74 <_gp+0xfffec710>
 4026e9c:	14000115 	stw	r16,4(r2)
 4026ea0:	14800215 	stw	r18,8(r2)
 4026ea4:	003fe606 	br	4026e40 <_gp+0xfffec6dc>

04026ea8 <_Bfree>:
 4026ea8:	28000826 	beq	r5,zero,4026ecc <_Bfree+0x24>
 4026eac:	28c00117 	ldw	r3,4(r5)
 4026eb0:	20801317 	ldw	r2,76(r4)
 4026eb4:	18c7883a 	add	r3,r3,r3
 4026eb8:	18c7883a 	add	r3,r3,r3
 4026ebc:	10c5883a 	add	r2,r2,r3
 4026ec0:	10c00017 	ldw	r3,0(r2)
 4026ec4:	28c00015 	stw	r3,0(r5)
 4026ec8:	11400015 	stw	r5,0(r2)
 4026ecc:	f800283a 	ret

04026ed0 <__multadd>:
 4026ed0:	defff704 	addi	sp,sp,-36
 4026ed4:	dc800215 	stw	r18,8(sp)
 4026ed8:	2c800417 	ldw	r18,16(r5)
 4026edc:	dd800615 	stw	r22,24(sp)
 4026ee0:	dd400515 	stw	r21,20(sp)
 4026ee4:	dd000415 	stw	r20,16(sp)
 4026ee8:	dcc00315 	stw	r19,12(sp)
 4026eec:	dc400115 	stw	r17,4(sp)
 4026ef0:	dc000015 	stw	r16,0(sp)
 4026ef4:	dfc00815 	stw	ra,32(sp)
 4026ef8:	ddc00715 	stw	r23,28(sp)
 4026efc:	2827883a 	mov	r19,r5
 4026f00:	2029883a 	mov	r20,r4
 4026f04:	3023883a 	mov	r17,r6
 4026f08:	3821883a 	mov	r16,r7
 4026f0c:	2d400504 	addi	r21,r5,20
 4026f10:	002d883a 	mov	r22,zero
 4026f14:	adc00017 	ldw	r23,0(r21)
 4026f18:	880b883a 	mov	r5,r17
 4026f1c:	ad400104 	addi	r21,r21,4
 4026f20:	b93fffcc 	andi	r4,r23,65535
 4026f24:	4020d7c0 	call	4020d7c <__mulsi3>
 4026f28:	b808d43a 	srli	r4,r23,16
 4026f2c:	880b883a 	mov	r5,r17
 4026f30:	1421883a 	add	r16,r2,r16
 4026f34:	4020d7c0 	call	4020d7c <__mulsi3>
 4026f38:	800ed43a 	srli	r7,r16,16
 4026f3c:	80ffffcc 	andi	r3,r16,65535
 4026f40:	b5800044 	addi	r22,r22,1
 4026f44:	11c5883a 	add	r2,r2,r7
 4026f48:	100e943a 	slli	r7,r2,16
 4026f4c:	1020d43a 	srli	r16,r2,16
 4026f50:	38c7883a 	add	r3,r7,r3
 4026f54:	a8ffff15 	stw	r3,-4(r21)
 4026f58:	b4bfee16 	blt	r22,r18,4026f14 <_gp+0xfffec7b0>
 4026f5c:	80000926 	beq	r16,zero,4026f84 <__multadd+0xb4>
 4026f60:	98800217 	ldw	r2,8(r19)
 4026f64:	9080130e 	bge	r18,r2,4026fb4 <__multadd+0xe4>
 4026f68:	90800144 	addi	r2,r18,5
 4026f6c:	1085883a 	add	r2,r2,r2
 4026f70:	1085883a 	add	r2,r2,r2
 4026f74:	9885883a 	add	r2,r19,r2
 4026f78:	14000015 	stw	r16,0(r2)
 4026f7c:	94800044 	addi	r18,r18,1
 4026f80:	9c800415 	stw	r18,16(r19)
 4026f84:	9805883a 	mov	r2,r19
 4026f88:	dfc00817 	ldw	ra,32(sp)
 4026f8c:	ddc00717 	ldw	r23,28(sp)
 4026f90:	dd800617 	ldw	r22,24(sp)
 4026f94:	dd400517 	ldw	r21,20(sp)
 4026f98:	dd000417 	ldw	r20,16(sp)
 4026f9c:	dcc00317 	ldw	r19,12(sp)
 4026fa0:	dc800217 	ldw	r18,8(sp)
 4026fa4:	dc400117 	ldw	r17,4(sp)
 4026fa8:	dc000017 	ldw	r16,0(sp)
 4026fac:	dec00904 	addi	sp,sp,36
 4026fb0:	f800283a 	ret
 4026fb4:	99400117 	ldw	r5,4(r19)
 4026fb8:	a009883a 	mov	r4,r20
 4026fbc:	29400044 	addi	r5,r5,1
 4026fc0:	4026e000 	call	4026e00 <_Balloc>
 4026fc4:	99800417 	ldw	r6,16(r19)
 4026fc8:	99400304 	addi	r5,r19,12
 4026fcc:	11000304 	addi	r4,r2,12
 4026fd0:	31800084 	addi	r6,r6,2
 4026fd4:	318d883a 	add	r6,r6,r6
 4026fd8:	318d883a 	add	r6,r6,r6
 4026fdc:	1023883a 	mov	r17,r2
 4026fe0:	4020da40 	call	4020da4 <memcpy>
 4026fe4:	98000a26 	beq	r19,zero,4027010 <__multadd+0x140>
 4026fe8:	98c00117 	ldw	r3,4(r19)
 4026fec:	a0801317 	ldw	r2,76(r20)
 4026ff0:	18c7883a 	add	r3,r3,r3
 4026ff4:	18c7883a 	add	r3,r3,r3
 4026ff8:	10c5883a 	add	r2,r2,r3
 4026ffc:	10c00017 	ldw	r3,0(r2)
 4027000:	98c00015 	stw	r3,0(r19)
 4027004:	14c00015 	stw	r19,0(r2)
 4027008:	8827883a 	mov	r19,r17
 402700c:	003fd606 	br	4026f68 <_gp+0xfffec804>
 4027010:	8827883a 	mov	r19,r17
 4027014:	003fd406 	br	4026f68 <_gp+0xfffec804>

04027018 <__s2b>:
 4027018:	defff904 	addi	sp,sp,-28
 402701c:	dc400115 	stw	r17,4(sp)
 4027020:	dc000015 	stw	r16,0(sp)
 4027024:	2023883a 	mov	r17,r4
 4027028:	2821883a 	mov	r16,r5
 402702c:	39000204 	addi	r4,r7,8
 4027030:	01400244 	movi	r5,9
 4027034:	dcc00315 	stw	r19,12(sp)
 4027038:	dc800215 	stw	r18,8(sp)
 402703c:	dfc00615 	stw	ra,24(sp)
 4027040:	dd400515 	stw	r21,20(sp)
 4027044:	dd000415 	stw	r20,16(sp)
 4027048:	3825883a 	mov	r18,r7
 402704c:	3027883a 	mov	r19,r6
 4027050:	4020bc80 	call	4020bc8 <__divsi3>
 4027054:	00c00044 	movi	r3,1
 4027058:	000b883a 	mov	r5,zero
 402705c:	1880030e 	bge	r3,r2,402706c <__s2b+0x54>
 4027060:	18c7883a 	add	r3,r3,r3
 4027064:	29400044 	addi	r5,r5,1
 4027068:	18bffd16 	blt	r3,r2,4027060 <_gp+0xfffec8fc>
 402706c:	8809883a 	mov	r4,r17
 4027070:	4026e000 	call	4026e00 <_Balloc>
 4027074:	d8c00717 	ldw	r3,28(sp)
 4027078:	10c00515 	stw	r3,20(r2)
 402707c:	00c00044 	movi	r3,1
 4027080:	10c00415 	stw	r3,16(r2)
 4027084:	00c00244 	movi	r3,9
 4027088:	1cc0210e 	bge	r3,r19,4027110 <__s2b+0xf8>
 402708c:	80eb883a 	add	r21,r16,r3
 4027090:	a829883a 	mov	r20,r21
 4027094:	84e1883a 	add	r16,r16,r19
 4027098:	a1c00007 	ldb	r7,0(r20)
 402709c:	01800284 	movi	r6,10
 40270a0:	a5000044 	addi	r20,r20,1
 40270a4:	100b883a 	mov	r5,r2
 40270a8:	39fff404 	addi	r7,r7,-48
 40270ac:	8809883a 	mov	r4,r17
 40270b0:	4026ed00 	call	4026ed0 <__multadd>
 40270b4:	a43ff81e 	bne	r20,r16,4027098 <_gp+0xfffec934>
 40270b8:	ace1883a 	add	r16,r21,r19
 40270bc:	843ffe04 	addi	r16,r16,-8
 40270c0:	9c800a0e 	bge	r19,r18,40270ec <__s2b+0xd4>
 40270c4:	94e5c83a 	sub	r18,r18,r19
 40270c8:	84a5883a 	add	r18,r16,r18
 40270cc:	81c00007 	ldb	r7,0(r16)
 40270d0:	01800284 	movi	r6,10
 40270d4:	84000044 	addi	r16,r16,1
 40270d8:	100b883a 	mov	r5,r2
 40270dc:	39fff404 	addi	r7,r7,-48
 40270e0:	8809883a 	mov	r4,r17
 40270e4:	4026ed00 	call	4026ed0 <__multadd>
 40270e8:	84bff81e 	bne	r16,r18,40270cc <_gp+0xfffec968>
 40270ec:	dfc00617 	ldw	ra,24(sp)
 40270f0:	dd400517 	ldw	r21,20(sp)
 40270f4:	dd000417 	ldw	r20,16(sp)
 40270f8:	dcc00317 	ldw	r19,12(sp)
 40270fc:	dc800217 	ldw	r18,8(sp)
 4027100:	dc400117 	ldw	r17,4(sp)
 4027104:	dc000017 	ldw	r16,0(sp)
 4027108:	dec00704 	addi	sp,sp,28
 402710c:	f800283a 	ret
 4027110:	84000284 	addi	r16,r16,10
 4027114:	1827883a 	mov	r19,r3
 4027118:	003fe906 	br	40270c0 <_gp+0xfffec95c>

0402711c <__hi0bits>:
 402711c:	20bfffec 	andhi	r2,r4,65535
 4027120:	1000141e 	bne	r2,zero,4027174 <__hi0bits+0x58>
 4027124:	2008943a 	slli	r4,r4,16
 4027128:	00800404 	movi	r2,16
 402712c:	20ffc02c 	andhi	r3,r4,65280
 4027130:	1800021e 	bne	r3,zero,402713c <__hi0bits+0x20>
 4027134:	2008923a 	slli	r4,r4,8
 4027138:	10800204 	addi	r2,r2,8
 402713c:	20fc002c 	andhi	r3,r4,61440
 4027140:	1800021e 	bne	r3,zero,402714c <__hi0bits+0x30>
 4027144:	2008913a 	slli	r4,r4,4
 4027148:	10800104 	addi	r2,r2,4
 402714c:	20f0002c 	andhi	r3,r4,49152
 4027150:	1800031e 	bne	r3,zero,4027160 <__hi0bits+0x44>
 4027154:	2109883a 	add	r4,r4,r4
 4027158:	10800084 	addi	r2,r2,2
 402715c:	2109883a 	add	r4,r4,r4
 4027160:	20000316 	blt	r4,zero,4027170 <__hi0bits+0x54>
 4027164:	2110002c 	andhi	r4,r4,16384
 4027168:	2000041e 	bne	r4,zero,402717c <__hi0bits+0x60>
 402716c:	00800804 	movi	r2,32
 4027170:	f800283a 	ret
 4027174:	0005883a 	mov	r2,zero
 4027178:	003fec06 	br	402712c <_gp+0xfffec9c8>
 402717c:	10800044 	addi	r2,r2,1
 4027180:	f800283a 	ret

04027184 <__lo0bits>:
 4027184:	20c00017 	ldw	r3,0(r4)
 4027188:	188001cc 	andi	r2,r3,7
 402718c:	10000826 	beq	r2,zero,40271b0 <__lo0bits+0x2c>
 4027190:	1880004c 	andi	r2,r3,1
 4027194:	1000211e 	bne	r2,zero,402721c <__lo0bits+0x98>
 4027198:	1880008c 	andi	r2,r3,2
 402719c:	1000211e 	bne	r2,zero,4027224 <__lo0bits+0xa0>
 40271a0:	1806d0ba 	srli	r3,r3,2
 40271a4:	00800084 	movi	r2,2
 40271a8:	20c00015 	stw	r3,0(r4)
 40271ac:	f800283a 	ret
 40271b0:	18bfffcc 	andi	r2,r3,65535
 40271b4:	10001326 	beq	r2,zero,4027204 <__lo0bits+0x80>
 40271b8:	0005883a 	mov	r2,zero
 40271bc:	19403fcc 	andi	r5,r3,255
 40271c0:	2800021e 	bne	r5,zero,40271cc <__lo0bits+0x48>
 40271c4:	1806d23a 	srli	r3,r3,8
 40271c8:	10800204 	addi	r2,r2,8
 40271cc:	194003cc 	andi	r5,r3,15
 40271d0:	2800021e 	bne	r5,zero,40271dc <__lo0bits+0x58>
 40271d4:	1806d13a 	srli	r3,r3,4
 40271d8:	10800104 	addi	r2,r2,4
 40271dc:	194000cc 	andi	r5,r3,3
 40271e0:	2800021e 	bne	r5,zero,40271ec <__lo0bits+0x68>
 40271e4:	1806d0ba 	srli	r3,r3,2
 40271e8:	10800084 	addi	r2,r2,2
 40271ec:	1940004c 	andi	r5,r3,1
 40271f0:	2800081e 	bne	r5,zero,4027214 <__lo0bits+0x90>
 40271f4:	1806d07a 	srli	r3,r3,1
 40271f8:	1800051e 	bne	r3,zero,4027210 <__lo0bits+0x8c>
 40271fc:	00800804 	movi	r2,32
 4027200:	f800283a 	ret
 4027204:	1806d43a 	srli	r3,r3,16
 4027208:	00800404 	movi	r2,16
 402720c:	003feb06 	br	40271bc <_gp+0xfffeca58>
 4027210:	10800044 	addi	r2,r2,1
 4027214:	20c00015 	stw	r3,0(r4)
 4027218:	f800283a 	ret
 402721c:	0005883a 	mov	r2,zero
 4027220:	f800283a 	ret
 4027224:	1806d07a 	srli	r3,r3,1
 4027228:	00800044 	movi	r2,1
 402722c:	20c00015 	stw	r3,0(r4)
 4027230:	f800283a 	ret

04027234 <__i2b>:
 4027234:	defffd04 	addi	sp,sp,-12
 4027238:	dc000015 	stw	r16,0(sp)
 402723c:	04000044 	movi	r16,1
 4027240:	dc400115 	stw	r17,4(sp)
 4027244:	2823883a 	mov	r17,r5
 4027248:	800b883a 	mov	r5,r16
 402724c:	dfc00215 	stw	ra,8(sp)
 4027250:	4026e000 	call	4026e00 <_Balloc>
 4027254:	14400515 	stw	r17,20(r2)
 4027258:	14000415 	stw	r16,16(r2)
 402725c:	dfc00217 	ldw	ra,8(sp)
 4027260:	dc400117 	ldw	r17,4(sp)
 4027264:	dc000017 	ldw	r16,0(sp)
 4027268:	dec00304 	addi	sp,sp,12
 402726c:	f800283a 	ret

04027270 <__multiply>:
 4027270:	deffef04 	addi	sp,sp,-68
 4027274:	dc400815 	stw	r17,32(sp)
 4027278:	dc000715 	stw	r16,28(sp)
 402727c:	34400417 	ldw	r17,16(r6)
 4027280:	2c000417 	ldw	r16,16(r5)
 4027284:	dd800d15 	stw	r22,52(sp)
 4027288:	dc800915 	stw	r18,36(sp)
 402728c:	dfc01015 	stw	ra,64(sp)
 4027290:	df000f15 	stw	fp,60(sp)
 4027294:	ddc00e15 	stw	r23,56(sp)
 4027298:	dd400c15 	stw	r21,48(sp)
 402729c:	dd000b15 	stw	r20,44(sp)
 40272a0:	dcc00a15 	stw	r19,40(sp)
 40272a4:	2825883a 	mov	r18,r5
 40272a8:	302d883a 	mov	r22,r6
 40272ac:	8440050e 	bge	r16,r17,40272c4 <__multiply+0x54>
 40272b0:	8007883a 	mov	r3,r16
 40272b4:	3025883a 	mov	r18,r6
 40272b8:	8821883a 	mov	r16,r17
 40272bc:	282d883a 	mov	r22,r5
 40272c0:	1823883a 	mov	r17,r3
 40272c4:	90800217 	ldw	r2,8(r18)
 40272c8:	8447883a 	add	r3,r16,r17
 40272cc:	d8c00215 	stw	r3,8(sp)
 40272d0:	91400117 	ldw	r5,4(r18)
 40272d4:	10c0010e 	bge	r2,r3,40272dc <__multiply+0x6c>
 40272d8:	29400044 	addi	r5,r5,1
 40272dc:	4026e000 	call	4026e00 <_Balloc>
 40272e0:	d8c00217 	ldw	r3,8(sp)
 40272e4:	d8800615 	stw	r2,24(sp)
 40272e8:	18eb883a 	add	r21,r3,r3
 40272ec:	ad6b883a 	add	r21,r21,r21
 40272f0:	10c00504 	addi	r3,r2,20
 40272f4:	1d6b883a 	add	r21,r3,r21
 40272f8:	d8c00115 	stw	r3,4(sp)
 40272fc:	dd400315 	stw	r21,12(sp)
 4027300:	1805883a 	mov	r2,r3
 4027304:	1d40042e 	bgeu	r3,r21,4027318 <__multiply+0xa8>
 4027308:	d8c00317 	ldw	r3,12(sp)
 402730c:	10000015 	stw	zero,0(r2)
 4027310:	10800104 	addi	r2,r2,4
 4027314:	10fffc36 	bltu	r2,r3,4027308 <_gp+0xfffecba4>
 4027318:	8c63883a 	add	r17,r17,r17
 402731c:	b5800504 	addi	r22,r22,20
 4027320:	8c63883a 	add	r17,r17,r17
 4027324:	94800504 	addi	r18,r18,20
 4027328:	8421883a 	add	r16,r16,r16
 402732c:	b463883a 	add	r17,r22,r17
 4027330:	8421883a 	add	r16,r16,r16
 4027334:	dd800015 	stw	r22,0(sp)
 4027338:	dc800415 	stw	r18,16(sp)
 402733c:	dc400515 	stw	r17,20(sp)
 4027340:	9429883a 	add	r20,r18,r16
 4027344:	b4404f2e 	bgeu	r22,r17,4027484 <__multiply+0x214>
 4027348:	d8c00017 	ldw	r3,0(sp)
 402734c:	1c800017 	ldw	r18,0(r3)
 4027350:	947fffcc 	andi	r17,r18,65535
 4027354:	88001e26 	beq	r17,zero,40273d0 <__multiply+0x160>
 4027358:	dd800117 	ldw	r22,4(sp)
 402735c:	dd400417 	ldw	r21,16(sp)
 4027360:	0027883a 	mov	r19,zero
 4027364:	ac800017 	ldw	r18,0(r21)
 4027368:	b4000017 	ldw	r16,0(r22)
 402736c:	880b883a 	mov	r5,r17
 4027370:	913fffcc 	andi	r4,r18,65535
 4027374:	4020d7c0 	call	4020d7c <__mulsi3>
 4027378:	9008d43a 	srli	r4,r18,16
 402737c:	84bfffcc 	andi	r18,r16,65535
 4027380:	1485883a 	add	r2,r2,r18
 4027384:	14e5883a 	add	r18,r2,r19
 4027388:	8020d43a 	srli	r16,r16,16
 402738c:	9026d43a 	srli	r19,r18,16
 4027390:	880b883a 	mov	r5,r17
 4027394:	4020d7c0 	call	4020d7c <__mulsi3>
 4027398:	1405883a 	add	r2,r2,r16
 402739c:	14e1883a 	add	r16,r2,r19
 40273a0:	90ffffcc 	andi	r3,r18,65535
 40273a4:	8024943a 	slli	r18,r16,16
 40273a8:	ad400104 	addi	r21,r21,4
 40273ac:	b005883a 	mov	r2,r22
 40273b0:	90c6b03a 	or	r3,r18,r3
 40273b4:	b0c00015 	stw	r3,0(r22)
 40273b8:	8026d43a 	srli	r19,r16,16
 40273bc:	b5800104 	addi	r22,r22,4
 40273c0:	ad3fe836 	bltu	r21,r20,4027364 <_gp+0xfffecc00>
 40273c4:	d8c00017 	ldw	r3,0(sp)
 40273c8:	14c00115 	stw	r19,4(r2)
 40273cc:	1c800017 	ldw	r18,0(r3)
 40273d0:	9024d43a 	srli	r18,r18,16
 40273d4:	90002226 	beq	r18,zero,4027460 <__multiply+0x1f0>
 40273d8:	d8c00117 	ldw	r3,4(sp)
 40273dc:	dd800417 	ldw	r22,16(sp)
 40273e0:	002f883a 	mov	r23,zero
 40273e4:	1f000017 	ldw	fp,0(r3)
 40273e8:	1823883a 	mov	r17,r3
 40273ec:	182b883a 	mov	r21,r3
 40273f0:	e021883a 	mov	r16,fp
 40273f4:	00000106 	br	40273fc <__multiply+0x18c>
 40273f8:	982b883a 	mov	r21,r19
 40273fc:	b100000b 	ldhu	r4,0(r22)
 4027400:	8020d43a 	srli	r16,r16,16
 4027404:	900b883a 	mov	r5,r18
 4027408:	4020d7c0 	call	4020d7c <__mulsi3>
 402740c:	1405883a 	add	r2,r2,r16
 4027410:	15ef883a 	add	r23,r2,r23
 4027414:	b804943a 	slli	r2,r23,16
 4027418:	e0ffffcc 	andi	r3,fp,65535
 402741c:	8c400104 	addi	r17,r17,4
 4027420:	10c6b03a 	or	r3,r2,r3
 4027424:	88ffff15 	stw	r3,-4(r17)
 4027428:	b5800104 	addi	r22,r22,4
 402742c:	b13fff17 	ldw	r4,-4(r22)
 4027430:	acc00104 	addi	r19,r21,4
 4027434:	900b883a 	mov	r5,r18
 4027438:	2008d43a 	srli	r4,r4,16
 402743c:	9c000017 	ldw	r16,0(r19)
 4027440:	4020d7c0 	call	4020d7c <__mulsi3>
 4027444:	b806d43a 	srli	r3,r23,16
 4027448:	813fffcc 	andi	r4,r16,65535
 402744c:	1105883a 	add	r2,r2,r4
 4027450:	10f9883a 	add	fp,r2,r3
 4027454:	e02ed43a 	srli	r23,fp,16
 4027458:	b53fe736 	bltu	r22,r20,40273f8 <_gp+0xfffecc94>
 402745c:	af000115 	stw	fp,4(r21)
 4027460:	d8c00017 	ldw	r3,0(sp)
 4027464:	d9000517 	ldw	r4,20(sp)
 4027468:	18c00104 	addi	r3,r3,4
 402746c:	d8c00015 	stw	r3,0(sp)
 4027470:	d8c00117 	ldw	r3,4(sp)
 4027474:	18c00104 	addi	r3,r3,4
 4027478:	d8c00115 	stw	r3,4(sp)
 402747c:	d8c00017 	ldw	r3,0(sp)
 4027480:	193fb136 	bltu	r3,r4,4027348 <_gp+0xfffecbe4>
 4027484:	d8c00217 	ldw	r3,8(sp)
 4027488:	00c00c0e 	bge	zero,r3,40274bc <__multiply+0x24c>
 402748c:	d8c00317 	ldw	r3,12(sp)
 4027490:	18bfff17 	ldw	r2,-4(r3)
 4027494:	1d7fff04 	addi	r21,r3,-4
 4027498:	10000326 	beq	r2,zero,40274a8 <__multiply+0x238>
 402749c:	00000706 	br	40274bc <__multiply+0x24c>
 40274a0:	a8800017 	ldw	r2,0(r21)
 40274a4:	1000051e 	bne	r2,zero,40274bc <__multiply+0x24c>
 40274a8:	d8c00217 	ldw	r3,8(sp)
 40274ac:	ad7fff04 	addi	r21,r21,-4
 40274b0:	18ffffc4 	addi	r3,r3,-1
 40274b4:	d8c00215 	stw	r3,8(sp)
 40274b8:	183ff91e 	bne	r3,zero,40274a0 <_gp+0xfffecd3c>
 40274bc:	d8c00617 	ldw	r3,24(sp)
 40274c0:	d9000217 	ldw	r4,8(sp)
 40274c4:	1805883a 	mov	r2,r3
 40274c8:	19000415 	stw	r4,16(r3)
 40274cc:	dfc01017 	ldw	ra,64(sp)
 40274d0:	df000f17 	ldw	fp,60(sp)
 40274d4:	ddc00e17 	ldw	r23,56(sp)
 40274d8:	dd800d17 	ldw	r22,52(sp)
 40274dc:	dd400c17 	ldw	r21,48(sp)
 40274e0:	dd000b17 	ldw	r20,44(sp)
 40274e4:	dcc00a17 	ldw	r19,40(sp)
 40274e8:	dc800917 	ldw	r18,36(sp)
 40274ec:	dc400817 	ldw	r17,32(sp)
 40274f0:	dc000717 	ldw	r16,28(sp)
 40274f4:	dec01104 	addi	sp,sp,68
 40274f8:	f800283a 	ret

040274fc <__pow5mult>:
 40274fc:	defffa04 	addi	sp,sp,-24
 4027500:	dcc00315 	stw	r19,12(sp)
 4027504:	dc000015 	stw	r16,0(sp)
 4027508:	dfc00515 	stw	ra,20(sp)
 402750c:	dd000415 	stw	r20,16(sp)
 4027510:	dc800215 	stw	r18,8(sp)
 4027514:	dc400115 	stw	r17,4(sp)
 4027518:	308000cc 	andi	r2,r6,3
 402751c:	3021883a 	mov	r16,r6
 4027520:	2027883a 	mov	r19,r4
 4027524:	10002f1e 	bne	r2,zero,40275e4 <__pow5mult+0xe8>
 4027528:	2825883a 	mov	r18,r5
 402752c:	8021d0ba 	srai	r16,r16,2
 4027530:	80001a26 	beq	r16,zero,402759c <__pow5mult+0xa0>
 4027534:	9c401217 	ldw	r17,72(r19)
 4027538:	8800061e 	bne	r17,zero,4027554 <__pow5mult+0x58>
 402753c:	00003406 	br	4027610 <__pow5mult+0x114>
 4027540:	8021d07a 	srai	r16,r16,1
 4027544:	80001526 	beq	r16,zero,402759c <__pow5mult+0xa0>
 4027548:	88800017 	ldw	r2,0(r17)
 402754c:	10001c26 	beq	r2,zero,40275c0 <__pow5mult+0xc4>
 4027550:	1023883a 	mov	r17,r2
 4027554:	8080004c 	andi	r2,r16,1
 4027558:	103ff926 	beq	r2,zero,4027540 <_gp+0xfffecddc>
 402755c:	880d883a 	mov	r6,r17
 4027560:	900b883a 	mov	r5,r18
 4027564:	9809883a 	mov	r4,r19
 4027568:	40272700 	call	4027270 <__multiply>
 402756c:	90001b26 	beq	r18,zero,40275dc <__pow5mult+0xe0>
 4027570:	91000117 	ldw	r4,4(r18)
 4027574:	98c01317 	ldw	r3,76(r19)
 4027578:	8021d07a 	srai	r16,r16,1
 402757c:	2109883a 	add	r4,r4,r4
 4027580:	2109883a 	add	r4,r4,r4
 4027584:	1907883a 	add	r3,r3,r4
 4027588:	19000017 	ldw	r4,0(r3)
 402758c:	91000015 	stw	r4,0(r18)
 4027590:	1c800015 	stw	r18,0(r3)
 4027594:	1025883a 	mov	r18,r2
 4027598:	803feb1e 	bne	r16,zero,4027548 <_gp+0xfffecde4>
 402759c:	9005883a 	mov	r2,r18
 40275a0:	dfc00517 	ldw	ra,20(sp)
 40275a4:	dd000417 	ldw	r20,16(sp)
 40275a8:	dcc00317 	ldw	r19,12(sp)
 40275ac:	dc800217 	ldw	r18,8(sp)
 40275b0:	dc400117 	ldw	r17,4(sp)
 40275b4:	dc000017 	ldw	r16,0(sp)
 40275b8:	dec00604 	addi	sp,sp,24
 40275bc:	f800283a 	ret
 40275c0:	880d883a 	mov	r6,r17
 40275c4:	880b883a 	mov	r5,r17
 40275c8:	9809883a 	mov	r4,r19
 40275cc:	40272700 	call	4027270 <__multiply>
 40275d0:	88800015 	stw	r2,0(r17)
 40275d4:	10000015 	stw	zero,0(r2)
 40275d8:	003fdd06 	br	4027550 <_gp+0xfffecdec>
 40275dc:	1025883a 	mov	r18,r2
 40275e0:	003fd706 	br	4027540 <_gp+0xfffecddc>
 40275e4:	10bfffc4 	addi	r2,r2,-1
 40275e8:	1085883a 	add	r2,r2,r2
 40275ec:	00c100f4 	movhi	r3,1027
 40275f0:	18c29204 	addi	r3,r3,2632
 40275f4:	1085883a 	add	r2,r2,r2
 40275f8:	1885883a 	add	r2,r3,r2
 40275fc:	11800017 	ldw	r6,0(r2)
 4027600:	000f883a 	mov	r7,zero
 4027604:	4026ed00 	call	4026ed0 <__multadd>
 4027608:	1025883a 	mov	r18,r2
 402760c:	003fc706 	br	402752c <_gp+0xfffecdc8>
 4027610:	05000044 	movi	r20,1
 4027614:	a00b883a 	mov	r5,r20
 4027618:	9809883a 	mov	r4,r19
 402761c:	4026e000 	call	4026e00 <_Balloc>
 4027620:	1023883a 	mov	r17,r2
 4027624:	00809c44 	movi	r2,625
 4027628:	88800515 	stw	r2,20(r17)
 402762c:	8d000415 	stw	r20,16(r17)
 4027630:	9c401215 	stw	r17,72(r19)
 4027634:	88000015 	stw	zero,0(r17)
 4027638:	003fc606 	br	4027554 <_gp+0xfffecdf0>

0402763c <__lshift>:
 402763c:	defff904 	addi	sp,sp,-28
 4027640:	dd400515 	stw	r21,20(sp)
 4027644:	dcc00315 	stw	r19,12(sp)
 4027648:	302bd17a 	srai	r21,r6,5
 402764c:	2cc00417 	ldw	r19,16(r5)
 4027650:	28800217 	ldw	r2,8(r5)
 4027654:	dd000415 	stw	r20,16(sp)
 4027658:	ace7883a 	add	r19,r21,r19
 402765c:	dc800215 	stw	r18,8(sp)
 4027660:	dc400115 	stw	r17,4(sp)
 4027664:	dc000015 	stw	r16,0(sp)
 4027668:	dfc00615 	stw	ra,24(sp)
 402766c:	9c000044 	addi	r16,r19,1
 4027670:	2823883a 	mov	r17,r5
 4027674:	3029883a 	mov	r20,r6
 4027678:	2025883a 	mov	r18,r4
 402767c:	29400117 	ldw	r5,4(r5)
 4027680:	1400030e 	bge	r2,r16,4027690 <__lshift+0x54>
 4027684:	1085883a 	add	r2,r2,r2
 4027688:	29400044 	addi	r5,r5,1
 402768c:	143ffd16 	blt	r2,r16,4027684 <_gp+0xfffecf20>
 4027690:	9009883a 	mov	r4,r18
 4027694:	4026e000 	call	4026e00 <_Balloc>
 4027698:	10c00504 	addi	r3,r2,20
 402769c:	0540070e 	bge	zero,r21,40276bc <__lshift+0x80>
 40276a0:	ad6b883a 	add	r21,r21,r21
 40276a4:	ad6b883a 	add	r21,r21,r21
 40276a8:	1809883a 	mov	r4,r3
 40276ac:	1d47883a 	add	r3,r3,r21
 40276b0:	20000015 	stw	zero,0(r4)
 40276b4:	21000104 	addi	r4,r4,4
 40276b8:	193ffd1e 	bne	r3,r4,40276b0 <_gp+0xfffecf4c>
 40276bc:	8a000417 	ldw	r8,16(r17)
 40276c0:	89000504 	addi	r4,r17,20
 40276c4:	a18007cc 	andi	r6,r20,31
 40276c8:	4211883a 	add	r8,r8,r8
 40276cc:	4211883a 	add	r8,r8,r8
 40276d0:	2211883a 	add	r8,r4,r8
 40276d4:	30002326 	beq	r6,zero,4027764 <__lshift+0x128>
 40276d8:	02400804 	movi	r9,32
 40276dc:	4993c83a 	sub	r9,r9,r6
 40276e0:	000b883a 	mov	r5,zero
 40276e4:	21c00017 	ldw	r7,0(r4)
 40276e8:	1815883a 	mov	r10,r3
 40276ec:	18c00104 	addi	r3,r3,4
 40276f0:	398e983a 	sll	r7,r7,r6
 40276f4:	21000104 	addi	r4,r4,4
 40276f8:	394ab03a 	or	r5,r7,r5
 40276fc:	197fff15 	stw	r5,-4(r3)
 4027700:	217fff17 	ldw	r5,-4(r4)
 4027704:	2a4ad83a 	srl	r5,r5,r9
 4027708:	223ff636 	bltu	r4,r8,40276e4 <_gp+0xfffecf80>
 402770c:	51400115 	stw	r5,4(r10)
 4027710:	28001a1e 	bne	r5,zero,402777c <__lshift+0x140>
 4027714:	843fffc4 	addi	r16,r16,-1
 4027718:	14000415 	stw	r16,16(r2)
 402771c:	88000826 	beq	r17,zero,4027740 <__lshift+0x104>
 4027720:	89000117 	ldw	r4,4(r17)
 4027724:	90c01317 	ldw	r3,76(r18)
 4027728:	2109883a 	add	r4,r4,r4
 402772c:	2109883a 	add	r4,r4,r4
 4027730:	1907883a 	add	r3,r3,r4
 4027734:	19000017 	ldw	r4,0(r3)
 4027738:	89000015 	stw	r4,0(r17)
 402773c:	1c400015 	stw	r17,0(r3)
 4027740:	dfc00617 	ldw	ra,24(sp)
 4027744:	dd400517 	ldw	r21,20(sp)
 4027748:	dd000417 	ldw	r20,16(sp)
 402774c:	dcc00317 	ldw	r19,12(sp)
 4027750:	dc800217 	ldw	r18,8(sp)
 4027754:	dc400117 	ldw	r17,4(sp)
 4027758:	dc000017 	ldw	r16,0(sp)
 402775c:	dec00704 	addi	sp,sp,28
 4027760:	f800283a 	ret
 4027764:	21400017 	ldw	r5,0(r4)
 4027768:	18c00104 	addi	r3,r3,4
 402776c:	21000104 	addi	r4,r4,4
 4027770:	197fff15 	stw	r5,-4(r3)
 4027774:	223ffb36 	bltu	r4,r8,4027764 <_gp+0xfffed000>
 4027778:	003fe606 	br	4027714 <_gp+0xfffecfb0>
 402777c:	9c000084 	addi	r16,r19,2
 4027780:	003fe406 	br	4027714 <_gp+0xfffecfb0>

04027784 <__mcmp>:
 4027784:	20800417 	ldw	r2,16(r4)
 4027788:	28c00417 	ldw	r3,16(r5)
 402778c:	10c5c83a 	sub	r2,r2,r3
 4027790:	1000111e 	bne	r2,zero,40277d8 <__mcmp+0x54>
 4027794:	18c7883a 	add	r3,r3,r3
 4027798:	18c7883a 	add	r3,r3,r3
 402779c:	21000504 	addi	r4,r4,20
 40277a0:	29400504 	addi	r5,r5,20
 40277a4:	20c5883a 	add	r2,r4,r3
 40277a8:	28cb883a 	add	r5,r5,r3
 40277ac:	00000106 	br	40277b4 <__mcmp+0x30>
 40277b0:	20800a2e 	bgeu	r4,r2,40277dc <__mcmp+0x58>
 40277b4:	10bfff04 	addi	r2,r2,-4
 40277b8:	297fff04 	addi	r5,r5,-4
 40277bc:	11800017 	ldw	r6,0(r2)
 40277c0:	28c00017 	ldw	r3,0(r5)
 40277c4:	30fffa26 	beq	r6,r3,40277b0 <_gp+0xfffed04c>
 40277c8:	30c00236 	bltu	r6,r3,40277d4 <__mcmp+0x50>
 40277cc:	00800044 	movi	r2,1
 40277d0:	f800283a 	ret
 40277d4:	00bfffc4 	movi	r2,-1
 40277d8:	f800283a 	ret
 40277dc:	0005883a 	mov	r2,zero
 40277e0:	f800283a 	ret

040277e4 <__mdiff>:
 40277e4:	28c00417 	ldw	r3,16(r5)
 40277e8:	30800417 	ldw	r2,16(r6)
 40277ec:	defffa04 	addi	sp,sp,-24
 40277f0:	dcc00315 	stw	r19,12(sp)
 40277f4:	dc800215 	stw	r18,8(sp)
 40277f8:	dfc00515 	stw	ra,20(sp)
 40277fc:	dd000415 	stw	r20,16(sp)
 4027800:	dc400115 	stw	r17,4(sp)
 4027804:	dc000015 	stw	r16,0(sp)
 4027808:	1887c83a 	sub	r3,r3,r2
 402780c:	2825883a 	mov	r18,r5
 4027810:	3027883a 	mov	r19,r6
 4027814:	1800141e 	bne	r3,zero,4027868 <__mdiff+0x84>
 4027818:	1085883a 	add	r2,r2,r2
 402781c:	1085883a 	add	r2,r2,r2
 4027820:	2a000504 	addi	r8,r5,20
 4027824:	34000504 	addi	r16,r6,20
 4027828:	4087883a 	add	r3,r8,r2
 402782c:	8085883a 	add	r2,r16,r2
 4027830:	00000106 	br	4027838 <__mdiff+0x54>
 4027834:	40c0592e 	bgeu	r8,r3,402799c <__mdiff+0x1b8>
 4027838:	18ffff04 	addi	r3,r3,-4
 402783c:	10bfff04 	addi	r2,r2,-4
 4027840:	19c00017 	ldw	r7,0(r3)
 4027844:	11400017 	ldw	r5,0(r2)
 4027848:	397ffa26 	beq	r7,r5,4027834 <_gp+0xfffed0d0>
 402784c:	3940592e 	bgeu	r7,r5,40279b4 <__mdiff+0x1d0>
 4027850:	9005883a 	mov	r2,r18
 4027854:	4023883a 	mov	r17,r8
 4027858:	9825883a 	mov	r18,r19
 402785c:	05000044 	movi	r20,1
 4027860:	1027883a 	mov	r19,r2
 4027864:	00000406 	br	4027878 <__mdiff+0x94>
 4027868:	18005616 	blt	r3,zero,40279c4 <__mdiff+0x1e0>
 402786c:	34400504 	addi	r17,r6,20
 4027870:	2c000504 	addi	r16,r5,20
 4027874:	0029883a 	mov	r20,zero
 4027878:	91400117 	ldw	r5,4(r18)
 402787c:	4026e000 	call	4026e00 <_Balloc>
 4027880:	92400417 	ldw	r9,16(r18)
 4027884:	9b000417 	ldw	r12,16(r19)
 4027888:	12c00504 	addi	r11,r2,20
 402788c:	4a51883a 	add	r8,r9,r9
 4027890:	6319883a 	add	r12,r12,r12
 4027894:	4211883a 	add	r8,r8,r8
 4027898:	6319883a 	add	r12,r12,r12
 402789c:	15000315 	stw	r20,12(r2)
 40278a0:	8211883a 	add	r8,r16,r8
 40278a4:	8b19883a 	add	r12,r17,r12
 40278a8:	0007883a 	mov	r3,zero
 40278ac:	81400017 	ldw	r5,0(r16)
 40278b0:	89c00017 	ldw	r7,0(r17)
 40278b4:	59800104 	addi	r6,r11,4
 40278b8:	293fffcc 	andi	r4,r5,65535
 40278bc:	20c7883a 	add	r3,r4,r3
 40278c0:	393fffcc 	andi	r4,r7,65535
 40278c4:	1909c83a 	sub	r4,r3,r4
 40278c8:	280ad43a 	srli	r5,r5,16
 40278cc:	380ed43a 	srli	r7,r7,16
 40278d0:	2007d43a 	srai	r3,r4,16
 40278d4:	213fffcc 	andi	r4,r4,65535
 40278d8:	29cbc83a 	sub	r5,r5,r7
 40278dc:	28c7883a 	add	r3,r5,r3
 40278e0:	180a943a 	slli	r5,r3,16
 40278e4:	8c400104 	addi	r17,r17,4
 40278e8:	84000104 	addi	r16,r16,4
 40278ec:	2908b03a 	or	r4,r5,r4
 40278f0:	59000015 	stw	r4,0(r11)
 40278f4:	1807d43a 	srai	r3,r3,16
 40278f8:	3015883a 	mov	r10,r6
 40278fc:	3017883a 	mov	r11,r6
 4027900:	8b3fea36 	bltu	r17,r12,40278ac <_gp+0xfffed148>
 4027904:	8200162e 	bgeu	r16,r8,4027960 <__mdiff+0x17c>
 4027908:	8017883a 	mov	r11,r16
 402790c:	59400017 	ldw	r5,0(r11)
 4027910:	31800104 	addi	r6,r6,4
 4027914:	5ac00104 	addi	r11,r11,4
 4027918:	293fffcc 	andi	r4,r5,65535
 402791c:	20c7883a 	add	r3,r4,r3
 4027920:	280ed43a 	srli	r7,r5,16
 4027924:	180bd43a 	srai	r5,r3,16
 4027928:	193fffcc 	andi	r4,r3,65535
 402792c:	3947883a 	add	r3,r7,r5
 4027930:	180a943a 	slli	r5,r3,16
 4027934:	1807d43a 	srai	r3,r3,16
 4027938:	2908b03a 	or	r4,r5,r4
 402793c:	313fff15 	stw	r4,-4(r6)
 4027940:	5a3ff236 	bltu	r11,r8,402790c <_gp+0xfffed1a8>
 4027944:	0406303a 	nor	r3,zero,r16
 4027948:	1a07883a 	add	r3,r3,r8
 402794c:	1806d0ba 	srli	r3,r3,2
 4027950:	18c00044 	addi	r3,r3,1
 4027954:	18c7883a 	add	r3,r3,r3
 4027958:	18c7883a 	add	r3,r3,r3
 402795c:	50d5883a 	add	r10,r10,r3
 4027960:	50ffff04 	addi	r3,r10,-4
 4027964:	2000041e 	bne	r4,zero,4027978 <__mdiff+0x194>
 4027968:	18ffff04 	addi	r3,r3,-4
 402796c:	19000017 	ldw	r4,0(r3)
 4027970:	4a7fffc4 	addi	r9,r9,-1
 4027974:	203ffc26 	beq	r4,zero,4027968 <_gp+0xfffed204>
 4027978:	12400415 	stw	r9,16(r2)
 402797c:	dfc00517 	ldw	ra,20(sp)
 4027980:	dd000417 	ldw	r20,16(sp)
 4027984:	dcc00317 	ldw	r19,12(sp)
 4027988:	dc800217 	ldw	r18,8(sp)
 402798c:	dc400117 	ldw	r17,4(sp)
 4027990:	dc000017 	ldw	r16,0(sp)
 4027994:	dec00604 	addi	sp,sp,24
 4027998:	f800283a 	ret
 402799c:	000b883a 	mov	r5,zero
 40279a0:	4026e000 	call	4026e00 <_Balloc>
 40279a4:	00c00044 	movi	r3,1
 40279a8:	10c00415 	stw	r3,16(r2)
 40279ac:	10000515 	stw	zero,20(r2)
 40279b0:	003ff206 	br	402797c <_gp+0xfffed218>
 40279b4:	8023883a 	mov	r17,r16
 40279b8:	0029883a 	mov	r20,zero
 40279bc:	4021883a 	mov	r16,r8
 40279c0:	003fad06 	br	4027878 <_gp+0xfffed114>
 40279c4:	9005883a 	mov	r2,r18
 40279c8:	94400504 	addi	r17,r18,20
 40279cc:	9c000504 	addi	r16,r19,20
 40279d0:	9825883a 	mov	r18,r19
 40279d4:	05000044 	movi	r20,1
 40279d8:	1027883a 	mov	r19,r2
 40279dc:	003fa606 	br	4027878 <_gp+0xfffed114>

040279e0 <__ulp>:
 40279e0:	295ffc2c 	andhi	r5,r5,32752
 40279e4:	00bf3034 	movhi	r2,64704
 40279e8:	2887883a 	add	r3,r5,r2
 40279ec:	00c0020e 	bge	zero,r3,40279f8 <__ulp+0x18>
 40279f0:	0005883a 	mov	r2,zero
 40279f4:	f800283a 	ret
 40279f8:	00c7c83a 	sub	r3,zero,r3
 40279fc:	1807d53a 	srai	r3,r3,20
 4027a00:	008004c4 	movi	r2,19
 4027a04:	10c00b0e 	bge	r2,r3,4027a34 <__ulp+0x54>
 4027a08:	18bffb04 	addi	r2,r3,-20
 4027a0c:	01000784 	movi	r4,30
 4027a10:	0007883a 	mov	r3,zero
 4027a14:	20800516 	blt	r4,r2,4027a2c <__ulp+0x4c>
 4027a18:	010007c4 	movi	r4,31
 4027a1c:	2089c83a 	sub	r4,r4,r2
 4027a20:	00800044 	movi	r2,1
 4027a24:	1104983a 	sll	r2,r2,r4
 4027a28:	f800283a 	ret
 4027a2c:	00800044 	movi	r2,1
 4027a30:	f800283a 	ret
 4027a34:	01400234 	movhi	r5,8
 4027a38:	28c7d83a 	sra	r3,r5,r3
 4027a3c:	0005883a 	mov	r2,zero
 4027a40:	f800283a 	ret

04027a44 <__b2d>:
 4027a44:	defffa04 	addi	sp,sp,-24
 4027a48:	dc000015 	stw	r16,0(sp)
 4027a4c:	24000417 	ldw	r16,16(r4)
 4027a50:	dc400115 	stw	r17,4(sp)
 4027a54:	24400504 	addi	r17,r4,20
 4027a58:	8421883a 	add	r16,r16,r16
 4027a5c:	8421883a 	add	r16,r16,r16
 4027a60:	8c21883a 	add	r16,r17,r16
 4027a64:	dc800215 	stw	r18,8(sp)
 4027a68:	84bfff17 	ldw	r18,-4(r16)
 4027a6c:	dd000415 	stw	r20,16(sp)
 4027a70:	dcc00315 	stw	r19,12(sp)
 4027a74:	9009883a 	mov	r4,r18
 4027a78:	2829883a 	mov	r20,r5
 4027a7c:	dfc00515 	stw	ra,20(sp)
 4027a80:	402711c0 	call	402711c <__hi0bits>
 4027a84:	00c00804 	movi	r3,32
 4027a88:	1889c83a 	sub	r4,r3,r2
 4027a8c:	a1000015 	stw	r4,0(r20)
 4027a90:	01000284 	movi	r4,10
 4027a94:	84ffff04 	addi	r19,r16,-4
 4027a98:	20801216 	blt	r4,r2,4027ae4 <__b2d+0xa0>
 4027a9c:	018002c4 	movi	r6,11
 4027aa0:	308dc83a 	sub	r6,r6,r2
 4027aa4:	9186d83a 	srl	r3,r18,r6
 4027aa8:	18cffc34 	orhi	r3,r3,16368
 4027aac:	8cc0212e 	bgeu	r17,r19,4027b34 <__b2d+0xf0>
 4027ab0:	813ffe17 	ldw	r4,-8(r16)
 4027ab4:	218cd83a 	srl	r6,r4,r6
 4027ab8:	10800544 	addi	r2,r2,21
 4027abc:	9084983a 	sll	r2,r18,r2
 4027ac0:	1184b03a 	or	r2,r2,r6
 4027ac4:	dfc00517 	ldw	ra,20(sp)
 4027ac8:	dd000417 	ldw	r20,16(sp)
 4027acc:	dcc00317 	ldw	r19,12(sp)
 4027ad0:	dc800217 	ldw	r18,8(sp)
 4027ad4:	dc400117 	ldw	r17,4(sp)
 4027ad8:	dc000017 	ldw	r16,0(sp)
 4027adc:	dec00604 	addi	sp,sp,24
 4027ae0:	f800283a 	ret
 4027ae4:	8cc00f2e 	bgeu	r17,r19,4027b24 <__b2d+0xe0>
 4027ae8:	117ffd44 	addi	r5,r2,-11
 4027aec:	80bffe17 	ldw	r2,-8(r16)
 4027af0:	28000e26 	beq	r5,zero,4027b2c <__b2d+0xe8>
 4027af4:	1949c83a 	sub	r4,r3,r5
 4027af8:	9164983a 	sll	r18,r18,r5
 4027afc:	1106d83a 	srl	r3,r2,r4
 4027b00:	81bffe04 	addi	r6,r16,-8
 4027b04:	948ffc34 	orhi	r18,r18,16368
 4027b08:	90c6b03a 	or	r3,r18,r3
 4027b0c:	89800e2e 	bgeu	r17,r6,4027b48 <__b2d+0x104>
 4027b10:	81bffd17 	ldw	r6,-12(r16)
 4027b14:	1144983a 	sll	r2,r2,r5
 4027b18:	310ad83a 	srl	r5,r6,r4
 4027b1c:	2884b03a 	or	r2,r5,r2
 4027b20:	003fe806 	br	4027ac4 <_gp+0xfffed360>
 4027b24:	10bffd44 	addi	r2,r2,-11
 4027b28:	1000041e 	bne	r2,zero,4027b3c <__b2d+0xf8>
 4027b2c:	90cffc34 	orhi	r3,r18,16368
 4027b30:	003fe406 	br	4027ac4 <_gp+0xfffed360>
 4027b34:	000d883a 	mov	r6,zero
 4027b38:	003fdf06 	br	4027ab8 <_gp+0xfffed354>
 4027b3c:	90a4983a 	sll	r18,r18,r2
 4027b40:	0005883a 	mov	r2,zero
 4027b44:	003ff906 	br	4027b2c <_gp+0xfffed3c8>
 4027b48:	1144983a 	sll	r2,r2,r5
 4027b4c:	003fdd06 	br	4027ac4 <_gp+0xfffed360>

04027b50 <__d2b>:
 4027b50:	defff804 	addi	sp,sp,-32
 4027b54:	dc000215 	stw	r16,8(sp)
 4027b58:	3021883a 	mov	r16,r6
 4027b5c:	dc400315 	stw	r17,12(sp)
 4027b60:	8022907a 	slli	r17,r16,1
 4027b64:	dd000615 	stw	r20,24(sp)
 4027b68:	2829883a 	mov	r20,r5
 4027b6c:	01400044 	movi	r5,1
 4027b70:	dcc00515 	stw	r19,20(sp)
 4027b74:	dc800415 	stw	r18,16(sp)
 4027b78:	dfc00715 	stw	ra,28(sp)
 4027b7c:	3825883a 	mov	r18,r7
 4027b80:	8822d57a 	srli	r17,r17,21
 4027b84:	4026e000 	call	4026e00 <_Balloc>
 4027b88:	1027883a 	mov	r19,r2
 4027b8c:	00800434 	movhi	r2,16
 4027b90:	10bfffc4 	addi	r2,r2,-1
 4027b94:	808c703a 	and	r6,r16,r2
 4027b98:	88000126 	beq	r17,zero,4027ba0 <__d2b+0x50>
 4027b9c:	31800434 	orhi	r6,r6,16
 4027ba0:	d9800015 	stw	r6,0(sp)
 4027ba4:	a0002426 	beq	r20,zero,4027c38 <__d2b+0xe8>
 4027ba8:	d9000104 	addi	r4,sp,4
 4027bac:	dd000115 	stw	r20,4(sp)
 4027bb0:	40271840 	call	4027184 <__lo0bits>
 4027bb4:	d8c00017 	ldw	r3,0(sp)
 4027bb8:	10002f1e 	bne	r2,zero,4027c78 <__d2b+0x128>
 4027bbc:	d9000117 	ldw	r4,4(sp)
 4027bc0:	99000515 	stw	r4,20(r19)
 4027bc4:	1821003a 	cmpeq	r16,r3,zero
 4027bc8:	01000084 	movi	r4,2
 4027bcc:	2421c83a 	sub	r16,r4,r16
 4027bd0:	98c00615 	stw	r3,24(r19)
 4027bd4:	9c000415 	stw	r16,16(r19)
 4027bd8:	88001f1e 	bne	r17,zero,4027c58 <__d2b+0x108>
 4027bdc:	10bef384 	addi	r2,r2,-1074
 4027be0:	90800015 	stw	r2,0(r18)
 4027be4:	00900034 	movhi	r2,16384
 4027be8:	10bfffc4 	addi	r2,r2,-1
 4027bec:	8085883a 	add	r2,r16,r2
 4027bf0:	1085883a 	add	r2,r2,r2
 4027bf4:	1085883a 	add	r2,r2,r2
 4027bf8:	9885883a 	add	r2,r19,r2
 4027bfc:	11000517 	ldw	r4,20(r2)
 4027c00:	8020917a 	slli	r16,r16,5
 4027c04:	402711c0 	call	402711c <__hi0bits>
 4027c08:	d8c00817 	ldw	r3,32(sp)
 4027c0c:	8085c83a 	sub	r2,r16,r2
 4027c10:	18800015 	stw	r2,0(r3)
 4027c14:	9805883a 	mov	r2,r19
 4027c18:	dfc00717 	ldw	ra,28(sp)
 4027c1c:	dd000617 	ldw	r20,24(sp)
 4027c20:	dcc00517 	ldw	r19,20(sp)
 4027c24:	dc800417 	ldw	r18,16(sp)
 4027c28:	dc400317 	ldw	r17,12(sp)
 4027c2c:	dc000217 	ldw	r16,8(sp)
 4027c30:	dec00804 	addi	sp,sp,32
 4027c34:	f800283a 	ret
 4027c38:	d809883a 	mov	r4,sp
 4027c3c:	40271840 	call	4027184 <__lo0bits>
 4027c40:	d8c00017 	ldw	r3,0(sp)
 4027c44:	04000044 	movi	r16,1
 4027c48:	9c000415 	stw	r16,16(r19)
 4027c4c:	98c00515 	stw	r3,20(r19)
 4027c50:	10800804 	addi	r2,r2,32
 4027c54:	883fe126 	beq	r17,zero,4027bdc <_gp+0xfffed478>
 4027c58:	00c00d44 	movi	r3,53
 4027c5c:	8c7ef344 	addi	r17,r17,-1075
 4027c60:	88a3883a 	add	r17,r17,r2
 4027c64:	1885c83a 	sub	r2,r3,r2
 4027c68:	d8c00817 	ldw	r3,32(sp)
 4027c6c:	94400015 	stw	r17,0(r18)
 4027c70:	18800015 	stw	r2,0(r3)
 4027c74:	003fe706 	br	4027c14 <_gp+0xfffed4b0>
 4027c78:	01000804 	movi	r4,32
 4027c7c:	2089c83a 	sub	r4,r4,r2
 4027c80:	1908983a 	sll	r4,r3,r4
 4027c84:	d9400117 	ldw	r5,4(sp)
 4027c88:	1886d83a 	srl	r3,r3,r2
 4027c8c:	2148b03a 	or	r4,r4,r5
 4027c90:	99000515 	stw	r4,20(r19)
 4027c94:	d8c00015 	stw	r3,0(sp)
 4027c98:	003fca06 	br	4027bc4 <_gp+0xfffed460>

04027c9c <__ratio>:
 4027c9c:	defff904 	addi	sp,sp,-28
 4027ca0:	dc400315 	stw	r17,12(sp)
 4027ca4:	2823883a 	mov	r17,r5
 4027ca8:	d9400104 	addi	r5,sp,4
 4027cac:	dfc00615 	stw	ra,24(sp)
 4027cb0:	dcc00515 	stw	r19,20(sp)
 4027cb4:	dc800415 	stw	r18,16(sp)
 4027cb8:	2027883a 	mov	r19,r4
 4027cbc:	dc000215 	stw	r16,8(sp)
 4027cc0:	4027a440 	call	4027a44 <__b2d>
 4027cc4:	d80b883a 	mov	r5,sp
 4027cc8:	8809883a 	mov	r4,r17
 4027ccc:	1025883a 	mov	r18,r2
 4027cd0:	1821883a 	mov	r16,r3
 4027cd4:	4027a440 	call	4027a44 <__b2d>
 4027cd8:	8a000417 	ldw	r8,16(r17)
 4027cdc:	99000417 	ldw	r4,16(r19)
 4027ce0:	d9400117 	ldw	r5,4(sp)
 4027ce4:	2209c83a 	sub	r4,r4,r8
 4027ce8:	2010917a 	slli	r8,r4,5
 4027cec:	d9000017 	ldw	r4,0(sp)
 4027cf0:	2909c83a 	sub	r4,r5,r4
 4027cf4:	4109883a 	add	r4,r8,r4
 4027cf8:	01000e0e 	bge	zero,r4,4027d34 <__ratio+0x98>
 4027cfc:	2008953a 	slli	r4,r4,20
 4027d00:	2421883a 	add	r16,r4,r16
 4027d04:	100d883a 	mov	r6,r2
 4027d08:	180f883a 	mov	r7,r3
 4027d0c:	9009883a 	mov	r4,r18
 4027d10:	800b883a 	mov	r5,r16
 4027d14:	402be200 	call	402be20 <__divdf3>
 4027d18:	dfc00617 	ldw	ra,24(sp)
 4027d1c:	dcc00517 	ldw	r19,20(sp)
 4027d20:	dc800417 	ldw	r18,16(sp)
 4027d24:	dc400317 	ldw	r17,12(sp)
 4027d28:	dc000217 	ldw	r16,8(sp)
 4027d2c:	dec00704 	addi	sp,sp,28
 4027d30:	f800283a 	ret
 4027d34:	2008953a 	slli	r4,r4,20
 4027d38:	1907c83a 	sub	r3,r3,r4
 4027d3c:	003ff106 	br	4027d04 <_gp+0xfffed5a0>

04027d40 <_mprec_log10>:
 4027d40:	defffe04 	addi	sp,sp,-8
 4027d44:	dc000015 	stw	r16,0(sp)
 4027d48:	dfc00115 	stw	ra,4(sp)
 4027d4c:	008005c4 	movi	r2,23
 4027d50:	2021883a 	mov	r16,r4
 4027d54:	11000d0e 	bge	r2,r4,4027d8c <_mprec_log10+0x4c>
 4027d58:	0005883a 	mov	r2,zero
 4027d5c:	00cffc34 	movhi	r3,16368
 4027d60:	843fffc4 	addi	r16,r16,-1
 4027d64:	000d883a 	mov	r6,zero
 4027d68:	01d00934 	movhi	r7,16420
 4027d6c:	1009883a 	mov	r4,r2
 4027d70:	180b883a 	mov	r5,r3
 4027d74:	402ca480 	call	402ca48 <__muldf3>
 4027d78:	803ff91e 	bne	r16,zero,4027d60 <_gp+0xfffed5fc>
 4027d7c:	dfc00117 	ldw	ra,4(sp)
 4027d80:	dc000017 	ldw	r16,0(sp)
 4027d84:	dec00204 	addi	sp,sp,8
 4027d88:	f800283a 	ret
 4027d8c:	202090fa 	slli	r16,r4,3
 4027d90:	008100f4 	movhi	r2,1027
 4027d94:	1082a904 	addi	r2,r2,2724
 4027d98:	1421883a 	add	r16,r2,r16
 4027d9c:	80800017 	ldw	r2,0(r16)
 4027da0:	80c00117 	ldw	r3,4(r16)
 4027da4:	dfc00117 	ldw	ra,4(sp)
 4027da8:	dc000017 	ldw	r16,0(sp)
 4027dac:	dec00204 	addi	sp,sp,8
 4027db0:	f800283a 	ret

04027db4 <__copybits>:
 4027db4:	297fffc4 	addi	r5,r5,-1
 4027db8:	280fd17a 	srai	r7,r5,5
 4027dbc:	30c00417 	ldw	r3,16(r6)
 4027dc0:	30800504 	addi	r2,r6,20
 4027dc4:	39c00044 	addi	r7,r7,1
 4027dc8:	18c7883a 	add	r3,r3,r3
 4027dcc:	39cf883a 	add	r7,r7,r7
 4027dd0:	18c7883a 	add	r3,r3,r3
 4027dd4:	39cf883a 	add	r7,r7,r7
 4027dd8:	10c7883a 	add	r3,r2,r3
 4027ddc:	21cf883a 	add	r7,r4,r7
 4027de0:	10c00d2e 	bgeu	r2,r3,4027e18 <__copybits+0x64>
 4027de4:	200b883a 	mov	r5,r4
 4027de8:	12000017 	ldw	r8,0(r2)
 4027dec:	29400104 	addi	r5,r5,4
 4027df0:	10800104 	addi	r2,r2,4
 4027df4:	2a3fff15 	stw	r8,-4(r5)
 4027df8:	10fffb36 	bltu	r2,r3,4027de8 <_gp+0xfffed684>
 4027dfc:	1985c83a 	sub	r2,r3,r6
 4027e00:	10bffac4 	addi	r2,r2,-21
 4027e04:	1004d0ba 	srli	r2,r2,2
 4027e08:	10800044 	addi	r2,r2,1
 4027e0c:	1085883a 	add	r2,r2,r2
 4027e10:	1085883a 	add	r2,r2,r2
 4027e14:	2089883a 	add	r4,r4,r2
 4027e18:	21c0032e 	bgeu	r4,r7,4027e28 <__copybits+0x74>
 4027e1c:	20000015 	stw	zero,0(r4)
 4027e20:	21000104 	addi	r4,r4,4
 4027e24:	21fffd36 	bltu	r4,r7,4027e1c <_gp+0xfffed6b8>
 4027e28:	f800283a 	ret

04027e2c <__any_on>:
 4027e2c:	20c00417 	ldw	r3,16(r4)
 4027e30:	2805d17a 	srai	r2,r5,5
 4027e34:	21000504 	addi	r4,r4,20
 4027e38:	18800d0e 	bge	r3,r2,4027e70 <__any_on+0x44>
 4027e3c:	18c7883a 	add	r3,r3,r3
 4027e40:	18c7883a 	add	r3,r3,r3
 4027e44:	20c7883a 	add	r3,r4,r3
 4027e48:	20c0192e 	bgeu	r4,r3,4027eb0 <__any_on+0x84>
 4027e4c:	18bfff17 	ldw	r2,-4(r3)
 4027e50:	18ffff04 	addi	r3,r3,-4
 4027e54:	1000041e 	bne	r2,zero,4027e68 <__any_on+0x3c>
 4027e58:	20c0142e 	bgeu	r4,r3,4027eac <__any_on+0x80>
 4027e5c:	18ffff04 	addi	r3,r3,-4
 4027e60:	19400017 	ldw	r5,0(r3)
 4027e64:	283ffc26 	beq	r5,zero,4027e58 <_gp+0xfffed6f4>
 4027e68:	00800044 	movi	r2,1
 4027e6c:	f800283a 	ret
 4027e70:	10c00a0e 	bge	r2,r3,4027e9c <__any_on+0x70>
 4027e74:	1085883a 	add	r2,r2,r2
 4027e78:	1085883a 	add	r2,r2,r2
 4027e7c:	294007cc 	andi	r5,r5,31
 4027e80:	2087883a 	add	r3,r4,r2
 4027e84:	283ff026 	beq	r5,zero,4027e48 <_gp+0xfffed6e4>
 4027e88:	19800017 	ldw	r6,0(r3)
 4027e8c:	3144d83a 	srl	r2,r6,r5
 4027e90:	114a983a 	sll	r5,r2,r5
 4027e94:	317ff41e 	bne	r6,r5,4027e68 <_gp+0xfffed704>
 4027e98:	003feb06 	br	4027e48 <_gp+0xfffed6e4>
 4027e9c:	1085883a 	add	r2,r2,r2
 4027ea0:	1085883a 	add	r2,r2,r2
 4027ea4:	2087883a 	add	r3,r4,r2
 4027ea8:	003fe706 	br	4027e48 <_gp+0xfffed6e4>
 4027eac:	f800283a 	ret
 4027eb0:	0005883a 	mov	r2,zero
 4027eb4:	f800283a 	ret

04027eb8 <_putc_r>:
 4027eb8:	defffc04 	addi	sp,sp,-16
 4027ebc:	dc000215 	stw	r16,8(sp)
 4027ec0:	dfc00315 	stw	ra,12(sp)
 4027ec4:	2021883a 	mov	r16,r4
 4027ec8:	20000226 	beq	r4,zero,4027ed4 <_putc_r+0x1c>
 4027ecc:	20800e17 	ldw	r2,56(r4)
 4027ed0:	10001b26 	beq	r2,zero,4027f40 <_putc_r+0x88>
 4027ed4:	30800217 	ldw	r2,8(r6)
 4027ed8:	10bfffc4 	addi	r2,r2,-1
 4027edc:	30800215 	stw	r2,8(r6)
 4027ee0:	10000a16 	blt	r2,zero,4027f0c <_putc_r+0x54>
 4027ee4:	30800017 	ldw	r2,0(r6)
 4027ee8:	11400005 	stb	r5,0(r2)
 4027eec:	30800017 	ldw	r2,0(r6)
 4027ef0:	10c00044 	addi	r3,r2,1
 4027ef4:	30c00015 	stw	r3,0(r6)
 4027ef8:	10800003 	ldbu	r2,0(r2)
 4027efc:	dfc00317 	ldw	ra,12(sp)
 4027f00:	dc000217 	ldw	r16,8(sp)
 4027f04:	dec00404 	addi	sp,sp,16
 4027f08:	f800283a 	ret
 4027f0c:	30c00617 	ldw	r3,24(r6)
 4027f10:	10c00616 	blt	r2,r3,4027f2c <_putc_r+0x74>
 4027f14:	30800017 	ldw	r2,0(r6)
 4027f18:	00c00284 	movi	r3,10
 4027f1c:	11400005 	stb	r5,0(r2)
 4027f20:	30800017 	ldw	r2,0(r6)
 4027f24:	11400003 	ldbu	r5,0(r2)
 4027f28:	28fff11e 	bne	r5,r3,4027ef0 <_gp+0xfffed78c>
 4027f2c:	8009883a 	mov	r4,r16
 4027f30:	dfc00317 	ldw	ra,12(sp)
 4027f34:	dc000217 	ldw	r16,8(sp)
 4027f38:	dec00404 	addi	sp,sp,16
 4027f3c:	4029f5c1 	jmpi	4029f5c <__swbuf_r>
 4027f40:	d9400015 	stw	r5,0(sp)
 4027f44:	d9800115 	stw	r6,4(sp)
 4027f48:	40255200 	call	4025520 <__sinit>
 4027f4c:	d9800117 	ldw	r6,4(sp)
 4027f50:	d9400017 	ldw	r5,0(sp)
 4027f54:	003fdf06 	br	4027ed4 <_gp+0xfffed770>

04027f58 <putc>:
 4027f58:	008100f4 	movhi	r2,1027
 4027f5c:	defffc04 	addi	sp,sp,-16
 4027f60:	1089da04 	addi	r2,r2,10088
 4027f64:	dc000115 	stw	r16,4(sp)
 4027f68:	14000017 	ldw	r16,0(r2)
 4027f6c:	dc400215 	stw	r17,8(sp)
 4027f70:	dfc00315 	stw	ra,12(sp)
 4027f74:	2023883a 	mov	r17,r4
 4027f78:	80000226 	beq	r16,zero,4027f84 <putc+0x2c>
 4027f7c:	80800e17 	ldw	r2,56(r16)
 4027f80:	10001a26 	beq	r2,zero,4027fec <putc+0x94>
 4027f84:	28800217 	ldw	r2,8(r5)
 4027f88:	10bfffc4 	addi	r2,r2,-1
 4027f8c:	28800215 	stw	r2,8(r5)
 4027f90:	10000b16 	blt	r2,zero,4027fc0 <putc+0x68>
 4027f94:	28800017 	ldw	r2,0(r5)
 4027f98:	14400005 	stb	r17,0(r2)
 4027f9c:	28800017 	ldw	r2,0(r5)
 4027fa0:	10c00044 	addi	r3,r2,1
 4027fa4:	28c00015 	stw	r3,0(r5)
 4027fa8:	10800003 	ldbu	r2,0(r2)
 4027fac:	dfc00317 	ldw	ra,12(sp)
 4027fb0:	dc400217 	ldw	r17,8(sp)
 4027fb4:	dc000117 	ldw	r16,4(sp)
 4027fb8:	dec00404 	addi	sp,sp,16
 4027fbc:	f800283a 	ret
 4027fc0:	28c00617 	ldw	r3,24(r5)
 4027fc4:	10c00e16 	blt	r2,r3,4028000 <putc+0xa8>
 4027fc8:	28800017 	ldw	r2,0(r5)
 4027fcc:	01000284 	movi	r4,10
 4027fd0:	14400005 	stb	r17,0(r2)
 4027fd4:	28800017 	ldw	r2,0(r5)
 4027fd8:	10c00003 	ldbu	r3,0(r2)
 4027fdc:	193ff01e 	bne	r3,r4,4027fa0 <_gp+0xfffed83c>
 4027fe0:	280d883a 	mov	r6,r5
 4027fe4:	180b883a 	mov	r5,r3
 4027fe8:	00000706 	br	4028008 <putc+0xb0>
 4027fec:	8009883a 	mov	r4,r16
 4027ff0:	d9400015 	stw	r5,0(sp)
 4027ff4:	40255200 	call	4025520 <__sinit>
 4027ff8:	d9400017 	ldw	r5,0(sp)
 4027ffc:	003fe106 	br	4027f84 <_gp+0xfffed820>
 4028000:	280d883a 	mov	r6,r5
 4028004:	880b883a 	mov	r5,r17
 4028008:	8009883a 	mov	r4,r16
 402800c:	dfc00317 	ldw	ra,12(sp)
 4028010:	dc400217 	ldw	r17,8(sp)
 4028014:	dc000117 	ldw	r16,4(sp)
 4028018:	dec00404 	addi	sp,sp,16
 402801c:	4029f5c1 	jmpi	4029f5c <__swbuf_r>

04028020 <_realloc_r>:
 4028020:	defff604 	addi	sp,sp,-40
 4028024:	dc800215 	stw	r18,8(sp)
 4028028:	dfc00915 	stw	ra,36(sp)
 402802c:	df000815 	stw	fp,32(sp)
 4028030:	ddc00715 	stw	r23,28(sp)
 4028034:	dd800615 	stw	r22,24(sp)
 4028038:	dd400515 	stw	r21,20(sp)
 402803c:	dd000415 	stw	r20,16(sp)
 4028040:	dcc00315 	stw	r19,12(sp)
 4028044:	dc400115 	stw	r17,4(sp)
 4028048:	dc000015 	stw	r16,0(sp)
 402804c:	3025883a 	mov	r18,r6
 4028050:	2800b726 	beq	r5,zero,4028330 <_realloc_r+0x310>
 4028054:	282b883a 	mov	r21,r5
 4028058:	2029883a 	mov	r20,r4
 402805c:	402e4240 	call	402e424 <__malloc_lock>
 4028060:	a8bfff17 	ldw	r2,-4(r21)
 4028064:	043fff04 	movi	r16,-4
 4028068:	90c002c4 	addi	r3,r18,11
 402806c:	01000584 	movi	r4,22
 4028070:	acfffe04 	addi	r19,r21,-8
 4028074:	1420703a 	and	r16,r2,r16
 4028078:	20c0332e 	bgeu	r4,r3,4028148 <_realloc_r+0x128>
 402807c:	047ffe04 	movi	r17,-8
 4028080:	1c62703a 	and	r17,r3,r17
 4028084:	8807883a 	mov	r3,r17
 4028088:	88005816 	blt	r17,zero,40281ec <_realloc_r+0x1cc>
 402808c:	8c805736 	bltu	r17,r18,40281ec <_realloc_r+0x1cc>
 4028090:	80c0300e 	bge	r16,r3,4028154 <_realloc_r+0x134>
 4028094:	070100f4 	movhi	fp,1027
 4028098:	e7045504 	addi	fp,fp,4436
 402809c:	e1c00217 	ldw	r7,8(fp)
 40280a0:	9c09883a 	add	r4,r19,r16
 40280a4:	22000117 	ldw	r8,4(r4)
 40280a8:	21c06326 	beq	r4,r7,4028238 <_realloc_r+0x218>
 40280ac:	017fff84 	movi	r5,-2
 40280b0:	414a703a 	and	r5,r8,r5
 40280b4:	214b883a 	add	r5,r4,r5
 40280b8:	29800117 	ldw	r6,4(r5)
 40280bc:	3180004c 	andi	r6,r6,1
 40280c0:	30003f26 	beq	r6,zero,40281c0 <_realloc_r+0x1a0>
 40280c4:	1080004c 	andi	r2,r2,1
 40280c8:	10008326 	beq	r2,zero,40282d8 <_realloc_r+0x2b8>
 40280cc:	900b883a 	mov	r5,r18
 40280d0:	a009883a 	mov	r4,r20
 40280d4:	402628c0 	call	402628c <_malloc_r>
 40280d8:	1025883a 	mov	r18,r2
 40280dc:	10011e26 	beq	r2,zero,4028558 <_realloc_r+0x538>
 40280e0:	a93fff17 	ldw	r4,-4(r21)
 40280e4:	10fffe04 	addi	r3,r2,-8
 40280e8:	00bfff84 	movi	r2,-2
 40280ec:	2084703a 	and	r2,r4,r2
 40280f0:	9885883a 	add	r2,r19,r2
 40280f4:	1880ee26 	beq	r3,r2,40284b0 <_realloc_r+0x490>
 40280f8:	81bfff04 	addi	r6,r16,-4
 40280fc:	00800904 	movi	r2,36
 4028100:	1180b836 	bltu	r2,r6,40283e4 <_realloc_r+0x3c4>
 4028104:	00c004c4 	movi	r3,19
 4028108:	19809636 	bltu	r3,r6,4028364 <_realloc_r+0x344>
 402810c:	9005883a 	mov	r2,r18
 4028110:	a807883a 	mov	r3,r21
 4028114:	19000017 	ldw	r4,0(r3)
 4028118:	11000015 	stw	r4,0(r2)
 402811c:	19000117 	ldw	r4,4(r3)
 4028120:	11000115 	stw	r4,4(r2)
 4028124:	18c00217 	ldw	r3,8(r3)
 4028128:	10c00215 	stw	r3,8(r2)
 402812c:	a80b883a 	mov	r5,r21
 4028130:	a009883a 	mov	r4,r20
 4028134:	40256940 	call	4025694 <_free_r>
 4028138:	a009883a 	mov	r4,r20
 402813c:	402e4480 	call	402e448 <__malloc_unlock>
 4028140:	9005883a 	mov	r2,r18
 4028144:	00001206 	br	4028190 <_realloc_r+0x170>
 4028148:	00c00404 	movi	r3,16
 402814c:	1823883a 	mov	r17,r3
 4028150:	003fce06 	br	402808c <_gp+0xfffed928>
 4028154:	a825883a 	mov	r18,r21
 4028158:	8445c83a 	sub	r2,r16,r17
 402815c:	00c003c4 	movi	r3,15
 4028160:	18802636 	bltu	r3,r2,40281fc <_realloc_r+0x1dc>
 4028164:	99800117 	ldw	r6,4(r19)
 4028168:	9c07883a 	add	r3,r19,r16
 402816c:	3180004c 	andi	r6,r6,1
 4028170:	3420b03a 	or	r16,r6,r16
 4028174:	9c000115 	stw	r16,4(r19)
 4028178:	18800117 	ldw	r2,4(r3)
 402817c:	10800054 	ori	r2,r2,1
 4028180:	18800115 	stw	r2,4(r3)
 4028184:	a009883a 	mov	r4,r20
 4028188:	402e4480 	call	402e448 <__malloc_unlock>
 402818c:	9005883a 	mov	r2,r18
 4028190:	dfc00917 	ldw	ra,36(sp)
 4028194:	df000817 	ldw	fp,32(sp)
 4028198:	ddc00717 	ldw	r23,28(sp)
 402819c:	dd800617 	ldw	r22,24(sp)
 40281a0:	dd400517 	ldw	r21,20(sp)
 40281a4:	dd000417 	ldw	r20,16(sp)
 40281a8:	dcc00317 	ldw	r19,12(sp)
 40281ac:	dc800217 	ldw	r18,8(sp)
 40281b0:	dc400117 	ldw	r17,4(sp)
 40281b4:	dc000017 	ldw	r16,0(sp)
 40281b8:	dec00a04 	addi	sp,sp,40
 40281bc:	f800283a 	ret
 40281c0:	017fff04 	movi	r5,-4
 40281c4:	414a703a 	and	r5,r8,r5
 40281c8:	814d883a 	add	r6,r16,r5
 40281cc:	30c01f16 	blt	r6,r3,402824c <_realloc_r+0x22c>
 40281d0:	20800317 	ldw	r2,12(r4)
 40281d4:	20c00217 	ldw	r3,8(r4)
 40281d8:	a825883a 	mov	r18,r21
 40281dc:	3021883a 	mov	r16,r6
 40281e0:	18800315 	stw	r2,12(r3)
 40281e4:	10c00215 	stw	r3,8(r2)
 40281e8:	003fdb06 	br	4028158 <_gp+0xfffed9f4>
 40281ec:	00800304 	movi	r2,12
 40281f0:	a0800015 	stw	r2,0(r20)
 40281f4:	0005883a 	mov	r2,zero
 40281f8:	003fe506 	br	4028190 <_gp+0xfffeda2c>
 40281fc:	98c00117 	ldw	r3,4(r19)
 4028200:	9c4b883a 	add	r5,r19,r17
 4028204:	11000054 	ori	r4,r2,1
 4028208:	18c0004c 	andi	r3,r3,1
 402820c:	1c62b03a 	or	r17,r3,r17
 4028210:	9c400115 	stw	r17,4(r19)
 4028214:	29000115 	stw	r4,4(r5)
 4028218:	2885883a 	add	r2,r5,r2
 402821c:	10c00117 	ldw	r3,4(r2)
 4028220:	29400204 	addi	r5,r5,8
 4028224:	a009883a 	mov	r4,r20
 4028228:	18c00054 	ori	r3,r3,1
 402822c:	10c00115 	stw	r3,4(r2)
 4028230:	40256940 	call	4025694 <_free_r>
 4028234:	003fd306 	br	4028184 <_gp+0xfffeda20>
 4028238:	017fff04 	movi	r5,-4
 402823c:	414a703a 	and	r5,r8,r5
 4028240:	89800404 	addi	r6,r17,16
 4028244:	8151883a 	add	r8,r16,r5
 4028248:	4180590e 	bge	r8,r6,40283b0 <_realloc_r+0x390>
 402824c:	1080004c 	andi	r2,r2,1
 4028250:	103f9e1e 	bne	r2,zero,40280cc <_gp+0xfffed968>
 4028254:	adbffe17 	ldw	r22,-8(r21)
 4028258:	00bfff04 	movi	r2,-4
 402825c:	9dadc83a 	sub	r22,r19,r22
 4028260:	b1800117 	ldw	r6,4(r22)
 4028264:	3084703a 	and	r2,r6,r2
 4028268:	20002026 	beq	r4,zero,40282ec <_realloc_r+0x2cc>
 402826c:	80af883a 	add	r23,r16,r2
 4028270:	b96f883a 	add	r23,r23,r5
 4028274:	21c05f26 	beq	r4,r7,40283f4 <_realloc_r+0x3d4>
 4028278:	b8c01c16 	blt	r23,r3,40282ec <_realloc_r+0x2cc>
 402827c:	20800317 	ldw	r2,12(r4)
 4028280:	20c00217 	ldw	r3,8(r4)
 4028284:	81bfff04 	addi	r6,r16,-4
 4028288:	01000904 	movi	r4,36
 402828c:	18800315 	stw	r2,12(r3)
 4028290:	10c00215 	stw	r3,8(r2)
 4028294:	b0c00217 	ldw	r3,8(r22)
 4028298:	b0800317 	ldw	r2,12(r22)
 402829c:	b4800204 	addi	r18,r22,8
 40282a0:	18800315 	stw	r2,12(r3)
 40282a4:	10c00215 	stw	r3,8(r2)
 40282a8:	21801b36 	bltu	r4,r6,4028318 <_realloc_r+0x2f8>
 40282ac:	008004c4 	movi	r2,19
 40282b0:	1180352e 	bgeu	r2,r6,4028388 <_realloc_r+0x368>
 40282b4:	a8800017 	ldw	r2,0(r21)
 40282b8:	b0800215 	stw	r2,8(r22)
 40282bc:	a8800117 	ldw	r2,4(r21)
 40282c0:	b0800315 	stw	r2,12(r22)
 40282c4:	008006c4 	movi	r2,27
 40282c8:	11807f36 	bltu	r2,r6,40284c8 <_realloc_r+0x4a8>
 40282cc:	b0800404 	addi	r2,r22,16
 40282d0:	ad400204 	addi	r21,r21,8
 40282d4:	00002d06 	br	402838c <_realloc_r+0x36c>
 40282d8:	adbffe17 	ldw	r22,-8(r21)
 40282dc:	00bfff04 	movi	r2,-4
 40282e0:	9dadc83a 	sub	r22,r19,r22
 40282e4:	b1000117 	ldw	r4,4(r22)
 40282e8:	2084703a 	and	r2,r4,r2
 40282ec:	b03f7726 	beq	r22,zero,40280cc <_gp+0xfffed968>
 40282f0:	80af883a 	add	r23,r16,r2
 40282f4:	b8ff7516 	blt	r23,r3,40280cc <_gp+0xfffed968>
 40282f8:	b0800317 	ldw	r2,12(r22)
 40282fc:	b0c00217 	ldw	r3,8(r22)
 4028300:	81bfff04 	addi	r6,r16,-4
 4028304:	01000904 	movi	r4,36
 4028308:	18800315 	stw	r2,12(r3)
 402830c:	10c00215 	stw	r3,8(r2)
 4028310:	b4800204 	addi	r18,r22,8
 4028314:	21bfe52e 	bgeu	r4,r6,40282ac <_gp+0xfffedb48>
 4028318:	a80b883a 	mov	r5,r21
 402831c:	9009883a 	mov	r4,r18
 4028320:	4026b7c0 	call	4026b7c <memmove>
 4028324:	b821883a 	mov	r16,r23
 4028328:	b027883a 	mov	r19,r22
 402832c:	003f8a06 	br	4028158 <_gp+0xfffed9f4>
 4028330:	300b883a 	mov	r5,r6
 4028334:	dfc00917 	ldw	ra,36(sp)
 4028338:	df000817 	ldw	fp,32(sp)
 402833c:	ddc00717 	ldw	r23,28(sp)
 4028340:	dd800617 	ldw	r22,24(sp)
 4028344:	dd400517 	ldw	r21,20(sp)
 4028348:	dd000417 	ldw	r20,16(sp)
 402834c:	dcc00317 	ldw	r19,12(sp)
 4028350:	dc800217 	ldw	r18,8(sp)
 4028354:	dc400117 	ldw	r17,4(sp)
 4028358:	dc000017 	ldw	r16,0(sp)
 402835c:	dec00a04 	addi	sp,sp,40
 4028360:	402628c1 	jmpi	402628c <_malloc_r>
 4028364:	a8c00017 	ldw	r3,0(r21)
 4028368:	90c00015 	stw	r3,0(r18)
 402836c:	a8c00117 	ldw	r3,4(r21)
 4028370:	90c00115 	stw	r3,4(r18)
 4028374:	00c006c4 	movi	r3,27
 4028378:	19804536 	bltu	r3,r6,4028490 <_realloc_r+0x470>
 402837c:	90800204 	addi	r2,r18,8
 4028380:	a8c00204 	addi	r3,r21,8
 4028384:	003f6306 	br	4028114 <_gp+0xfffed9b0>
 4028388:	9005883a 	mov	r2,r18
 402838c:	a8c00017 	ldw	r3,0(r21)
 4028390:	b821883a 	mov	r16,r23
 4028394:	b027883a 	mov	r19,r22
 4028398:	10c00015 	stw	r3,0(r2)
 402839c:	a8c00117 	ldw	r3,4(r21)
 40283a0:	10c00115 	stw	r3,4(r2)
 40283a4:	a8c00217 	ldw	r3,8(r21)
 40283a8:	10c00215 	stw	r3,8(r2)
 40283ac:	003f6a06 	br	4028158 <_gp+0xfffed9f4>
 40283b0:	9c67883a 	add	r19,r19,r17
 40283b4:	4445c83a 	sub	r2,r8,r17
 40283b8:	e4c00215 	stw	r19,8(fp)
 40283bc:	10800054 	ori	r2,r2,1
 40283c0:	98800115 	stw	r2,4(r19)
 40283c4:	a8bfff17 	ldw	r2,-4(r21)
 40283c8:	a009883a 	mov	r4,r20
 40283cc:	1080004c 	andi	r2,r2,1
 40283d0:	1462b03a 	or	r17,r2,r17
 40283d4:	ac7fff15 	stw	r17,-4(r21)
 40283d8:	402e4480 	call	402e448 <__malloc_unlock>
 40283dc:	a805883a 	mov	r2,r21
 40283e0:	003f6b06 	br	4028190 <_gp+0xfffeda2c>
 40283e4:	a80b883a 	mov	r5,r21
 40283e8:	9009883a 	mov	r4,r18
 40283ec:	4026b7c0 	call	4026b7c <memmove>
 40283f0:	003f4e06 	br	402812c <_gp+0xfffed9c8>
 40283f4:	89000404 	addi	r4,r17,16
 40283f8:	b93fbc16 	blt	r23,r4,40282ec <_gp+0xfffedb88>
 40283fc:	b0800317 	ldw	r2,12(r22)
 4028400:	b0c00217 	ldw	r3,8(r22)
 4028404:	81bfff04 	addi	r6,r16,-4
 4028408:	01000904 	movi	r4,36
 402840c:	18800315 	stw	r2,12(r3)
 4028410:	10c00215 	stw	r3,8(r2)
 4028414:	b4800204 	addi	r18,r22,8
 4028418:	21804336 	bltu	r4,r6,4028528 <_realloc_r+0x508>
 402841c:	008004c4 	movi	r2,19
 4028420:	11803f2e 	bgeu	r2,r6,4028520 <_realloc_r+0x500>
 4028424:	a8800017 	ldw	r2,0(r21)
 4028428:	b0800215 	stw	r2,8(r22)
 402842c:	a8800117 	ldw	r2,4(r21)
 4028430:	b0800315 	stw	r2,12(r22)
 4028434:	008006c4 	movi	r2,27
 4028438:	11803f36 	bltu	r2,r6,4028538 <_realloc_r+0x518>
 402843c:	b0800404 	addi	r2,r22,16
 4028440:	ad400204 	addi	r21,r21,8
 4028444:	a8c00017 	ldw	r3,0(r21)
 4028448:	10c00015 	stw	r3,0(r2)
 402844c:	a8c00117 	ldw	r3,4(r21)
 4028450:	10c00115 	stw	r3,4(r2)
 4028454:	a8c00217 	ldw	r3,8(r21)
 4028458:	10c00215 	stw	r3,8(r2)
 402845c:	b447883a 	add	r3,r22,r17
 4028460:	bc45c83a 	sub	r2,r23,r17
 4028464:	e0c00215 	stw	r3,8(fp)
 4028468:	10800054 	ori	r2,r2,1
 402846c:	18800115 	stw	r2,4(r3)
 4028470:	b0800117 	ldw	r2,4(r22)
 4028474:	a009883a 	mov	r4,r20
 4028478:	1080004c 	andi	r2,r2,1
 402847c:	1462b03a 	or	r17,r2,r17
 4028480:	b4400115 	stw	r17,4(r22)
 4028484:	402e4480 	call	402e448 <__malloc_unlock>
 4028488:	9005883a 	mov	r2,r18
 402848c:	003f4006 	br	4028190 <_gp+0xfffeda2c>
 4028490:	a8c00217 	ldw	r3,8(r21)
 4028494:	90c00215 	stw	r3,8(r18)
 4028498:	a8c00317 	ldw	r3,12(r21)
 402849c:	90c00315 	stw	r3,12(r18)
 40284a0:	30801126 	beq	r6,r2,40284e8 <_realloc_r+0x4c8>
 40284a4:	90800404 	addi	r2,r18,16
 40284a8:	a8c00404 	addi	r3,r21,16
 40284ac:	003f1906 	br	4028114 <_gp+0xfffed9b0>
 40284b0:	90ffff17 	ldw	r3,-4(r18)
 40284b4:	00bfff04 	movi	r2,-4
 40284b8:	a825883a 	mov	r18,r21
 40284bc:	1884703a 	and	r2,r3,r2
 40284c0:	80a1883a 	add	r16,r16,r2
 40284c4:	003f2406 	br	4028158 <_gp+0xfffed9f4>
 40284c8:	a8800217 	ldw	r2,8(r21)
 40284cc:	b0800415 	stw	r2,16(r22)
 40284d0:	a8800317 	ldw	r2,12(r21)
 40284d4:	b0800515 	stw	r2,20(r22)
 40284d8:	31000a26 	beq	r6,r4,4028504 <_realloc_r+0x4e4>
 40284dc:	b0800604 	addi	r2,r22,24
 40284e0:	ad400404 	addi	r21,r21,16
 40284e4:	003fa906 	br	402838c <_gp+0xfffedc28>
 40284e8:	a9000417 	ldw	r4,16(r21)
 40284ec:	90800604 	addi	r2,r18,24
 40284f0:	a8c00604 	addi	r3,r21,24
 40284f4:	91000415 	stw	r4,16(r18)
 40284f8:	a9000517 	ldw	r4,20(r21)
 40284fc:	91000515 	stw	r4,20(r18)
 4028500:	003f0406 	br	4028114 <_gp+0xfffed9b0>
 4028504:	a8c00417 	ldw	r3,16(r21)
 4028508:	ad400604 	addi	r21,r21,24
 402850c:	b0800804 	addi	r2,r22,32
 4028510:	b0c00615 	stw	r3,24(r22)
 4028514:	a8ffff17 	ldw	r3,-4(r21)
 4028518:	b0c00715 	stw	r3,28(r22)
 402851c:	003f9b06 	br	402838c <_gp+0xfffedc28>
 4028520:	9005883a 	mov	r2,r18
 4028524:	003fc706 	br	4028444 <_gp+0xfffedce0>
 4028528:	a80b883a 	mov	r5,r21
 402852c:	9009883a 	mov	r4,r18
 4028530:	4026b7c0 	call	4026b7c <memmove>
 4028534:	003fc906 	br	402845c <_gp+0xfffedcf8>
 4028538:	a8800217 	ldw	r2,8(r21)
 402853c:	b0800415 	stw	r2,16(r22)
 4028540:	a8800317 	ldw	r2,12(r21)
 4028544:	b0800515 	stw	r2,20(r22)
 4028548:	31000726 	beq	r6,r4,4028568 <_realloc_r+0x548>
 402854c:	b0800604 	addi	r2,r22,24
 4028550:	ad400404 	addi	r21,r21,16
 4028554:	003fbb06 	br	4028444 <_gp+0xfffedce0>
 4028558:	a009883a 	mov	r4,r20
 402855c:	402e4480 	call	402e448 <__malloc_unlock>
 4028560:	0005883a 	mov	r2,zero
 4028564:	003f0a06 	br	4028190 <_gp+0xfffeda2c>
 4028568:	a8c00417 	ldw	r3,16(r21)
 402856c:	ad400604 	addi	r21,r21,24
 4028570:	b0800804 	addi	r2,r22,32
 4028574:	b0c00615 	stw	r3,24(r22)
 4028578:	a8ffff17 	ldw	r3,-4(r21)
 402857c:	b0c00715 	stw	r3,28(r22)
 4028580:	003fb006 	br	4028444 <_gp+0xfffedce0>

04028584 <__fpclassifyd>:
 4028584:	00a00034 	movhi	r2,32768
 4028588:	10bfffc4 	addi	r2,r2,-1
 402858c:	2884703a 	and	r2,r5,r2
 4028590:	10000726 	beq	r2,zero,40285b0 <__fpclassifyd+0x2c>
 4028594:	00fffc34 	movhi	r3,65520
 4028598:	019ff834 	movhi	r6,32736
 402859c:	28c7883a 	add	r3,r5,r3
 40285a0:	31bfffc4 	addi	r6,r6,-1
 40285a4:	30c00536 	bltu	r6,r3,40285bc <__fpclassifyd+0x38>
 40285a8:	00800104 	movi	r2,4
 40285ac:	f800283a 	ret
 40285b0:	2000021e 	bne	r4,zero,40285bc <__fpclassifyd+0x38>
 40285b4:	00800084 	movi	r2,2
 40285b8:	f800283a 	ret
 40285bc:	00dffc34 	movhi	r3,32752
 40285c0:	019ff834 	movhi	r6,32736
 40285c4:	28cb883a 	add	r5,r5,r3
 40285c8:	31bfffc4 	addi	r6,r6,-1
 40285cc:	317ff62e 	bgeu	r6,r5,40285a8 <_gp+0xfffede44>
 40285d0:	01400434 	movhi	r5,16
 40285d4:	297fffc4 	addi	r5,r5,-1
 40285d8:	28800236 	bltu	r5,r2,40285e4 <__fpclassifyd+0x60>
 40285dc:	008000c4 	movi	r2,3
 40285e0:	f800283a 	ret
 40285e4:	10c00226 	beq	r2,r3,40285f0 <__fpclassifyd+0x6c>
 40285e8:	0005883a 	mov	r2,zero
 40285ec:	f800283a 	ret
 40285f0:	2005003a 	cmpeq	r2,r4,zero
 40285f4:	f800283a 	ret

040285f8 <_sbrk_r>:
 40285f8:	defffd04 	addi	sp,sp,-12
 40285fc:	dc000015 	stw	r16,0(sp)
 4028600:	040100f4 	movhi	r16,1027
 4028604:	dc400115 	stw	r17,4(sp)
 4028608:	8410aa04 	addi	r16,r16,17064
 402860c:	2023883a 	mov	r17,r4
 4028610:	2809883a 	mov	r4,r5
 4028614:	dfc00215 	stw	ra,8(sp)
 4028618:	80000015 	stw	zero,0(r16)
 402861c:	402e6440 	call	402e644 <sbrk>
 4028620:	00ffffc4 	movi	r3,-1
 4028624:	10c00526 	beq	r2,r3,402863c <_sbrk_r+0x44>
 4028628:	dfc00217 	ldw	ra,8(sp)
 402862c:	dc400117 	ldw	r17,4(sp)
 4028630:	dc000017 	ldw	r16,0(sp)
 4028634:	dec00304 	addi	sp,sp,12
 4028638:	f800283a 	ret
 402863c:	80c00017 	ldw	r3,0(r16)
 4028640:	183ff926 	beq	r3,zero,4028628 <_gp+0xfffedec4>
 4028644:	88c00015 	stw	r3,0(r17)
 4028648:	003ff706 	br	4028628 <_gp+0xfffedec4>

0402864c <__sread>:
 402864c:	defffe04 	addi	sp,sp,-8
 4028650:	dc000015 	stw	r16,0(sp)
 4028654:	2821883a 	mov	r16,r5
 4028658:	2940038f 	ldh	r5,14(r5)
 402865c:	dfc00115 	stw	ra,4(sp)
 4028660:	402a6600 	call	402a660 <_read_r>
 4028664:	10000716 	blt	r2,zero,4028684 <__sread+0x38>
 4028668:	80c01417 	ldw	r3,80(r16)
 402866c:	1887883a 	add	r3,r3,r2
 4028670:	80c01415 	stw	r3,80(r16)
 4028674:	dfc00117 	ldw	ra,4(sp)
 4028678:	dc000017 	ldw	r16,0(sp)
 402867c:	dec00204 	addi	sp,sp,8
 4028680:	f800283a 	ret
 4028684:	80c0030b 	ldhu	r3,12(r16)
 4028688:	18fbffcc 	andi	r3,r3,61439
 402868c:	80c0030d 	sth	r3,12(r16)
 4028690:	dfc00117 	ldw	ra,4(sp)
 4028694:	dc000017 	ldw	r16,0(sp)
 4028698:	dec00204 	addi	sp,sp,8
 402869c:	f800283a 	ret

040286a0 <__seofread>:
 40286a0:	0005883a 	mov	r2,zero
 40286a4:	f800283a 	ret

040286a8 <__swrite>:
 40286a8:	2880030b 	ldhu	r2,12(r5)
 40286ac:	defffb04 	addi	sp,sp,-20
 40286b0:	dcc00315 	stw	r19,12(sp)
 40286b4:	dc800215 	stw	r18,8(sp)
 40286b8:	dc400115 	stw	r17,4(sp)
 40286bc:	dc000015 	stw	r16,0(sp)
 40286c0:	dfc00415 	stw	ra,16(sp)
 40286c4:	10c0400c 	andi	r3,r2,256
 40286c8:	2821883a 	mov	r16,r5
 40286cc:	2023883a 	mov	r17,r4
 40286d0:	3025883a 	mov	r18,r6
 40286d4:	3827883a 	mov	r19,r7
 40286d8:	18000526 	beq	r3,zero,40286f0 <__swrite+0x48>
 40286dc:	2940038f 	ldh	r5,14(r5)
 40286e0:	01c00084 	movi	r7,2
 40286e4:	000d883a 	mov	r6,zero
 40286e8:	402a6000 	call	402a600 <_lseek_r>
 40286ec:	8080030b 	ldhu	r2,12(r16)
 40286f0:	8140038f 	ldh	r5,14(r16)
 40286f4:	10bbffcc 	andi	r2,r2,61439
 40286f8:	980f883a 	mov	r7,r19
 40286fc:	900d883a 	mov	r6,r18
 4028700:	8809883a 	mov	r4,r17
 4028704:	8080030d 	sth	r2,12(r16)
 4028708:	dfc00417 	ldw	ra,16(sp)
 402870c:	dcc00317 	ldw	r19,12(sp)
 4028710:	dc800217 	ldw	r18,8(sp)
 4028714:	dc400117 	ldw	r17,4(sp)
 4028718:	dc000017 	ldw	r16,0(sp)
 402871c:	dec00504 	addi	sp,sp,20
 4028720:	402a0b41 	jmpi	402a0b4 <_write_r>

04028724 <__sseek>:
 4028724:	defffe04 	addi	sp,sp,-8
 4028728:	dc000015 	stw	r16,0(sp)
 402872c:	2821883a 	mov	r16,r5
 4028730:	2940038f 	ldh	r5,14(r5)
 4028734:	dfc00115 	stw	ra,4(sp)
 4028738:	402a6000 	call	402a600 <_lseek_r>
 402873c:	00ffffc4 	movi	r3,-1
 4028740:	10c00826 	beq	r2,r3,4028764 <__sseek+0x40>
 4028744:	80c0030b 	ldhu	r3,12(r16)
 4028748:	80801415 	stw	r2,80(r16)
 402874c:	18c40014 	ori	r3,r3,4096
 4028750:	80c0030d 	sth	r3,12(r16)
 4028754:	dfc00117 	ldw	ra,4(sp)
 4028758:	dc000017 	ldw	r16,0(sp)
 402875c:	dec00204 	addi	sp,sp,8
 4028760:	f800283a 	ret
 4028764:	80c0030b 	ldhu	r3,12(r16)
 4028768:	18fbffcc 	andi	r3,r3,61439
 402876c:	80c0030d 	sth	r3,12(r16)
 4028770:	dfc00117 	ldw	ra,4(sp)
 4028774:	dc000017 	ldw	r16,0(sp)
 4028778:	dec00204 	addi	sp,sp,8
 402877c:	f800283a 	ret

04028780 <__sclose>:
 4028780:	2940038f 	ldh	r5,14(r5)
 4028784:	402a1141 	jmpi	402a114 <_close_r>

04028788 <strcmp>:
 4028788:	2144b03a 	or	r2,r4,r5
 402878c:	108000cc 	andi	r2,r2,3
 4028790:	1000171e 	bne	r2,zero,40287f0 <strcmp+0x68>
 4028794:	20800017 	ldw	r2,0(r4)
 4028798:	28c00017 	ldw	r3,0(r5)
 402879c:	10c0141e 	bne	r2,r3,40287f0 <strcmp+0x68>
 40287a0:	027fbff4 	movhi	r9,65279
 40287a4:	4a7fbfc4 	addi	r9,r9,-257
 40287a8:	0086303a 	nor	r3,zero,r2
 40287ac:	02202074 	movhi	r8,32897
 40287b0:	1245883a 	add	r2,r2,r9
 40287b4:	42202004 	addi	r8,r8,-32640
 40287b8:	10c4703a 	and	r2,r2,r3
 40287bc:	1204703a 	and	r2,r2,r8
 40287c0:	10000226 	beq	r2,zero,40287cc <strcmp+0x44>
 40287c4:	00002306 	br	4028854 <strcmp+0xcc>
 40287c8:	1000221e 	bne	r2,zero,4028854 <strcmp+0xcc>
 40287cc:	21000104 	addi	r4,r4,4
 40287d0:	20c00017 	ldw	r3,0(r4)
 40287d4:	29400104 	addi	r5,r5,4
 40287d8:	29800017 	ldw	r6,0(r5)
 40287dc:	1a4f883a 	add	r7,r3,r9
 40287e0:	00c4303a 	nor	r2,zero,r3
 40287e4:	3884703a 	and	r2,r7,r2
 40287e8:	1204703a 	and	r2,r2,r8
 40287ec:	19bff626 	beq	r3,r6,40287c8 <_gp+0xfffee064>
 40287f0:	20800003 	ldbu	r2,0(r4)
 40287f4:	10c03fcc 	andi	r3,r2,255
 40287f8:	18c0201c 	xori	r3,r3,128
 40287fc:	18ffe004 	addi	r3,r3,-128
 4028800:	18000c26 	beq	r3,zero,4028834 <strcmp+0xac>
 4028804:	29800007 	ldb	r6,0(r5)
 4028808:	19800326 	beq	r3,r6,4028818 <strcmp+0x90>
 402880c:	00001306 	br	402885c <strcmp+0xd4>
 4028810:	29800007 	ldb	r6,0(r5)
 4028814:	11800b1e 	bne	r2,r6,4028844 <strcmp+0xbc>
 4028818:	21000044 	addi	r4,r4,1
 402881c:	20c00003 	ldbu	r3,0(r4)
 4028820:	29400044 	addi	r5,r5,1
 4028824:	18803fcc 	andi	r2,r3,255
 4028828:	1080201c 	xori	r2,r2,128
 402882c:	10bfe004 	addi	r2,r2,-128
 4028830:	103ff71e 	bne	r2,zero,4028810 <_gp+0xfffee0ac>
 4028834:	0007883a 	mov	r3,zero
 4028838:	28800003 	ldbu	r2,0(r5)
 402883c:	1885c83a 	sub	r2,r3,r2
 4028840:	f800283a 	ret
 4028844:	28800003 	ldbu	r2,0(r5)
 4028848:	18c03fcc 	andi	r3,r3,255
 402884c:	1885c83a 	sub	r2,r3,r2
 4028850:	f800283a 	ret
 4028854:	0005883a 	mov	r2,zero
 4028858:	f800283a 	ret
 402885c:	10c03fcc 	andi	r3,r2,255
 4028860:	003ff506 	br	4028838 <_gp+0xfffee0d4>

04028864 <__sprint_r.part.0>:
 4028864:	28801917 	ldw	r2,100(r5)
 4028868:	defff604 	addi	sp,sp,-40
 402886c:	dd400515 	stw	r21,20(sp)
 4028870:	dfc00915 	stw	ra,36(sp)
 4028874:	df000815 	stw	fp,32(sp)
 4028878:	ddc00715 	stw	r23,28(sp)
 402887c:	dd800615 	stw	r22,24(sp)
 4028880:	dd000415 	stw	r20,16(sp)
 4028884:	dcc00315 	stw	r19,12(sp)
 4028888:	dc800215 	stw	r18,8(sp)
 402888c:	dc400115 	stw	r17,4(sp)
 4028890:	dc000015 	stw	r16,0(sp)
 4028894:	1088000c 	andi	r2,r2,8192
 4028898:	302b883a 	mov	r21,r6
 402889c:	10002e26 	beq	r2,zero,4028958 <__sprint_r.part.0+0xf4>
 40288a0:	30800217 	ldw	r2,8(r6)
 40288a4:	35800017 	ldw	r22,0(r6)
 40288a8:	10002926 	beq	r2,zero,4028950 <__sprint_r.part.0+0xec>
 40288ac:	2827883a 	mov	r19,r5
 40288b0:	2029883a 	mov	r20,r4
 40288b4:	b5c00104 	addi	r23,r22,4
 40288b8:	04bfffc4 	movi	r18,-1
 40288bc:	bc400017 	ldw	r17,0(r23)
 40288c0:	b4000017 	ldw	r16,0(r22)
 40288c4:	0039883a 	mov	fp,zero
 40288c8:	8822d0ba 	srli	r17,r17,2
 40288cc:	8800031e 	bne	r17,zero,40288dc <__sprint_r.part.0+0x78>
 40288d0:	00001806 	br	4028934 <__sprint_r.part.0+0xd0>
 40288d4:	84000104 	addi	r16,r16,4
 40288d8:	8f001526 	beq	r17,fp,4028930 <__sprint_r.part.0+0xcc>
 40288dc:	81400017 	ldw	r5,0(r16)
 40288e0:	980d883a 	mov	r6,r19
 40288e4:	a009883a 	mov	r4,r20
 40288e8:	402a4ac0 	call	402a4ac <_fputwc_r>
 40288ec:	e7000044 	addi	fp,fp,1
 40288f0:	14bff81e 	bne	r2,r18,40288d4 <_gp+0xfffee170>
 40288f4:	9005883a 	mov	r2,r18
 40288f8:	a8000215 	stw	zero,8(r21)
 40288fc:	a8000115 	stw	zero,4(r21)
 4028900:	dfc00917 	ldw	ra,36(sp)
 4028904:	df000817 	ldw	fp,32(sp)
 4028908:	ddc00717 	ldw	r23,28(sp)
 402890c:	dd800617 	ldw	r22,24(sp)
 4028910:	dd400517 	ldw	r21,20(sp)
 4028914:	dd000417 	ldw	r20,16(sp)
 4028918:	dcc00317 	ldw	r19,12(sp)
 402891c:	dc800217 	ldw	r18,8(sp)
 4028920:	dc400117 	ldw	r17,4(sp)
 4028924:	dc000017 	ldw	r16,0(sp)
 4028928:	dec00a04 	addi	sp,sp,40
 402892c:	f800283a 	ret
 4028930:	a8800217 	ldw	r2,8(r21)
 4028934:	8c63883a 	add	r17,r17,r17
 4028938:	8c63883a 	add	r17,r17,r17
 402893c:	1445c83a 	sub	r2,r2,r17
 4028940:	a8800215 	stw	r2,8(r21)
 4028944:	b5800204 	addi	r22,r22,8
 4028948:	bdc00204 	addi	r23,r23,8
 402894c:	103fdb1e 	bne	r2,zero,40288bc <_gp+0xfffee158>
 4028950:	0005883a 	mov	r2,zero
 4028954:	003fe806 	br	40288f8 <_gp+0xfffee194>
 4028958:	40259a40 	call	40259a4 <__sfvwrite_r>
 402895c:	003fe606 	br	40288f8 <_gp+0xfffee194>

04028960 <__sprint_r>:
 4028960:	30c00217 	ldw	r3,8(r6)
 4028964:	18000126 	beq	r3,zero,402896c <__sprint_r+0xc>
 4028968:	40288641 	jmpi	4028864 <__sprint_r.part.0>
 402896c:	30000115 	stw	zero,4(r6)
 4028970:	0005883a 	mov	r2,zero
 4028974:	f800283a 	ret

04028978 <___vfiprintf_internal_r>:
 4028978:	deffca04 	addi	sp,sp,-216
 402897c:	dd403115 	stw	r21,196(sp)
 4028980:	dfc03515 	stw	ra,212(sp)
 4028984:	df003415 	stw	fp,208(sp)
 4028988:	ddc03315 	stw	r23,204(sp)
 402898c:	dd803215 	stw	r22,200(sp)
 4028990:	dd003015 	stw	r20,192(sp)
 4028994:	dcc02f15 	stw	r19,188(sp)
 4028998:	dc802e15 	stw	r18,184(sp)
 402899c:	dc402d15 	stw	r17,180(sp)
 40289a0:	dc002c15 	stw	r16,176(sp)
 40289a4:	d9002115 	stw	r4,132(sp)
 40289a8:	d9402015 	stw	r5,128(sp)
 40289ac:	d9c02215 	stw	r7,136(sp)
 40289b0:	302b883a 	mov	r21,r6
 40289b4:	20000226 	beq	r4,zero,40289c0 <___vfiprintf_internal_r+0x48>
 40289b8:	20800e17 	ldw	r2,56(r4)
 40289bc:	1000cf26 	beq	r2,zero,4028cfc <___vfiprintf_internal_r+0x384>
 40289c0:	d8c02017 	ldw	r3,128(sp)
 40289c4:	1880030b 	ldhu	r2,12(r3)
 40289c8:	10c8000c 	andi	r3,r2,8192
 40289cc:	1800071e 	bne	r3,zero,40289ec <___vfiprintf_internal_r+0x74>
 40289d0:	d9402017 	ldw	r5,128(sp)
 40289d4:	00f7ffc4 	movi	r3,-8193
 40289d8:	10880014 	ori	r2,r2,8192
 40289dc:	29001917 	ldw	r4,100(r5)
 40289e0:	2880030d 	sth	r2,12(r5)
 40289e4:	20c6703a 	and	r3,r4,r3
 40289e8:	28c01915 	stw	r3,100(r5)
 40289ec:	10c0020c 	andi	r3,r2,8
 40289f0:	1800a526 	beq	r3,zero,4028c88 <___vfiprintf_internal_r+0x310>
 40289f4:	d9002017 	ldw	r4,128(sp)
 40289f8:	20c00417 	ldw	r3,16(r4)
 40289fc:	1800a226 	beq	r3,zero,4028c88 <___vfiprintf_internal_r+0x310>
 4028a00:	1080068c 	andi	r2,r2,26
 4028a04:	00c00284 	movi	r3,10
 4028a08:	10c0a826 	beq	r2,r3,4028cac <___vfiprintf_internal_r+0x334>
 4028a0c:	d9001a04 	addi	r4,sp,104
 4028a10:	d94019c4 	addi	r5,sp,103
 4028a14:	048100f4 	movhi	r18,1027
 4028a18:	2145c83a 	sub	r2,r4,r5
 4028a1c:	9482db04 	addi	r18,r18,2924
 4028a20:	d9001e15 	stw	r4,120(sp)
 4028a24:	d9401f15 	stw	r5,124(sp)
 4028a28:	dec01a15 	stw	sp,104(sp)
 4028a2c:	d8001c15 	stw	zero,112(sp)
 4028a30:	d8001b15 	stw	zero,108(sp)
 4028a34:	d811883a 	mov	r8,sp
 4028a38:	d8002615 	stw	zero,152(sp)
 4028a3c:	d8002415 	stw	zero,144(sp)
 4028a40:	d8802815 	stw	r2,160(sp)
 4028a44:	a82d883a 	mov	r22,r21
 4028a48:	b0800007 	ldb	r2,0(r22)
 4028a4c:	10040d26 	beq	r2,zero,4029a84 <___vfiprintf_internal_r+0x110c>
 4028a50:	00c00944 	movi	r3,37
 4028a54:	b029883a 	mov	r20,r22
 4028a58:	10c0021e 	bne	r2,r3,4028a64 <___vfiprintf_internal_r+0xec>
 4028a5c:	00001606 	br	4028ab8 <___vfiprintf_internal_r+0x140>
 4028a60:	10c00326 	beq	r2,r3,4028a70 <___vfiprintf_internal_r+0xf8>
 4028a64:	a5000044 	addi	r20,r20,1
 4028a68:	a0800007 	ldb	r2,0(r20)
 4028a6c:	103ffc1e 	bne	r2,zero,4028a60 <_gp+0xfffee2fc>
 4028a70:	a5a1c83a 	sub	r16,r20,r22
 4028a74:	80001026 	beq	r16,zero,4028ab8 <___vfiprintf_internal_r+0x140>
 4028a78:	d8c01c17 	ldw	r3,112(sp)
 4028a7c:	d8801b17 	ldw	r2,108(sp)
 4028a80:	45800015 	stw	r22,0(r8)
 4028a84:	80c7883a 	add	r3,r16,r3
 4028a88:	10800044 	addi	r2,r2,1
 4028a8c:	44000115 	stw	r16,4(r8)
 4028a90:	d8c01c15 	stw	r3,112(sp)
 4028a94:	d8801b15 	stw	r2,108(sp)
 4028a98:	010001c4 	movi	r4,7
 4028a9c:	2080750e 	bge	r4,r2,4028c74 <___vfiprintf_internal_r+0x2fc>
 4028aa0:	1803951e 	bne	r3,zero,40298f8 <___vfiprintf_internal_r+0xf80>
 4028aa4:	d8c02417 	ldw	r3,144(sp)
 4028aa8:	d8001b15 	stw	zero,108(sp)
 4028aac:	d811883a 	mov	r8,sp
 4028ab0:	1c07883a 	add	r3,r3,r16
 4028ab4:	d8c02415 	stw	r3,144(sp)
 4028ab8:	a0800007 	ldb	r2,0(r20)
 4028abc:	1002e026 	beq	r2,zero,4029640 <___vfiprintf_internal_r+0xcc8>
 4028ac0:	a5800044 	addi	r22,r20,1
 4028ac4:	a0c00047 	ldb	r3,1(r20)
 4028ac8:	d8001d85 	stb	zero,118(sp)
 4028acc:	0027883a 	mov	r19,zero
 4028ad0:	d8002305 	stb	zero,140(sp)
 4028ad4:	043fffc4 	movi	r16,-1
 4028ad8:	d8002515 	stw	zero,148(sp)
 4028adc:	0023883a 	mov	r17,zero
 4028ae0:	05001604 	movi	r20,88
 4028ae4:	05400244 	movi	r21,9
 4028ae8:	402f883a 	mov	r23,r8
 4028aec:	b5800044 	addi	r22,r22,1
 4028af0:	18bff804 	addi	r2,r3,-32
 4028af4:	a0827736 	bltu	r20,r2,40294d4 <___vfiprintf_internal_r+0xb5c>
 4028af8:	100490ba 	slli	r2,r2,2
 4028afc:	010100f4 	movhi	r4,1027
 4028b00:	2122c404 	addi	r4,r4,-29936
 4028b04:	1105883a 	add	r2,r2,r4
 4028b08:	10800017 	ldw	r2,0(r2)
 4028b0c:	1000683a 	jmp	r2
 4028b10:	040291d4 	movui	r16,2631
 4028b14:	040294d4 	movui	r16,2643
 4028b18:	040294d4 	movui	r16,2643
 4028b1c:	040291f0 	cmpltui	r16,zero,2631
 4028b20:	040294d4 	movui	r16,2643
 4028b24:	040294d4 	movui	r16,2643
 4028b28:	040294d4 	movui	r16,2643
 4028b2c:	040294d4 	movui	r16,2643
 4028b30:	040294d4 	movui	r16,2643
 4028b34:	040294d4 	movui	r16,2643
 4028b38:	040293f8 	rdprs	r16,zero,2639
 4028b3c:	0402941c 	xori	r16,zero,2640
 4028b40:	040294d4 	movui	r16,2643
 4028b44:	04028d14 	movui	r16,2612
 4028b48:	04029430 	cmpltui	r16,zero,2640
 4028b4c:	040294d4 	movui	r16,2643
 4028b50:	040291fc 	xorhi	r16,zero,2631
 4028b54:	04029208 	cmpgei	r16,zero,2632
 4028b58:	04029208 	cmpgei	r16,zero,2632
 4028b5c:	04029208 	cmpgei	r16,zero,2632
 4028b60:	04029208 	cmpgei	r16,zero,2632
 4028b64:	04029208 	cmpgei	r16,zero,2632
 4028b68:	04029208 	cmpgei	r16,zero,2632
 4028b6c:	04029208 	cmpgei	r16,zero,2632
 4028b70:	04029208 	cmpgei	r16,zero,2632
 4028b74:	04029208 	cmpgei	r16,zero,2632
 4028b78:	040294d4 	movui	r16,2643
 4028b7c:	040294d4 	movui	r16,2643
 4028b80:	040294d4 	movui	r16,2643
 4028b84:	040294d4 	movui	r16,2643
 4028b88:	040294d4 	movui	r16,2643
 4028b8c:	040294d4 	movui	r16,2643
 4028b90:	040294d4 	movui	r16,2643
 4028b94:	040294d4 	movui	r16,2643
 4028b98:	040294d4 	movui	r16,2643
 4028b9c:	040294d4 	movui	r16,2643
 4028ba0:	04029248 	cmpgei	r16,zero,2633
 4028ba4:	040294d4 	movui	r16,2643
 4028ba8:	040294d4 	movui	r16,2643
 4028bac:	040294d4 	movui	r16,2643
 4028bb0:	040294d4 	movui	r16,2643
 4028bb4:	040294d4 	movui	r16,2643
 4028bb8:	040294d4 	movui	r16,2643
 4028bbc:	040294d4 	movui	r16,2643
 4028bc0:	040294d4 	movui	r16,2643
 4028bc4:	040294d4 	movui	r16,2643
 4028bc8:	040294d4 	movui	r16,2643
 4028bcc:	04029284 	movi	r16,2634
 4028bd0:	040294d4 	movui	r16,2643
 4028bd4:	040294d4 	movui	r16,2643
 4028bd8:	040294d4 	movui	r16,2643
 4028bdc:	040294d4 	movui	r16,2643
 4028be0:	040294d4 	movui	r16,2643
 4028be4:	040292e0 	cmpeqi	r16,zero,2635
 4028be8:	040294d4 	movui	r16,2643
 4028bec:	040294d4 	movui	r16,2643
 4028bf0:	04029354 	movui	r16,2637
 4028bf4:	040294d4 	movui	r16,2643
 4028bf8:	040294d4 	movui	r16,2643
 4028bfc:	040294d4 	movui	r16,2643
 4028c00:	040294d4 	movui	r16,2643
 4028c04:	040294d4 	movui	r16,2643
 4028c08:	040294d4 	movui	r16,2643
 4028c0c:	040294d4 	movui	r16,2643
 4028c10:	040294d4 	movui	r16,2643
 4028c14:	040294d4 	movui	r16,2643
 4028c18:	040294d4 	movui	r16,2643
 4028c1c:	040290fc 	xorhi	r16,zero,2627
 4028c20:	0402912c 	andhi	r16,zero,2628
 4028c24:	040294d4 	movui	r16,2643
 4028c28:	040294d4 	movui	r16,2643
 4028c2c:	040294d4 	movui	r16,2643
 4028c30:	0402947c 	xorhi	r16,zero,2641
 4028c34:	0402912c 	andhi	r16,zero,2628
 4028c38:	040294d4 	movui	r16,2643
 4028c3c:	040294d4 	movui	r16,2643
 4028c40:	04028fd4 	movui	r16,2623
 4028c44:	040294d4 	movui	r16,2643
 4028c48:	04028fe8 	cmpgeui	r16,zero,2623
 4028c4c:	04029020 	cmpeqi	r16,zero,2624
 4028c50:	04028d20 	cmpeqi	r16,zero,2612
 4028c54:	04028fc8 	cmpgei	r16,zero,2623
 4028c58:	040294d4 	movui	r16,2643
 4028c5c:	04029394 	movui	r16,2638
 4028c60:	040294d4 	movui	r16,2643
 4028c64:	040293e0 	cmpeqi	r16,zero,2639
 4028c68:	040294d4 	movui	r16,2643
 4028c6c:	040294d4 	movui	r16,2643
 4028c70:	040290a4 	muli	r16,zero,2626
 4028c74:	42000204 	addi	r8,r8,8
 4028c78:	d8c02417 	ldw	r3,144(sp)
 4028c7c:	1c07883a 	add	r3,r3,r16
 4028c80:	d8c02415 	stw	r3,144(sp)
 4028c84:	003f8c06 	br	4028ab8 <_gp+0xfffee354>
 4028c88:	d9402017 	ldw	r5,128(sp)
 4028c8c:	d9002117 	ldw	r4,132(sp)
 4028c90:	40235140 	call	4023514 <__swsetup_r>
 4028c94:	1003c11e 	bne	r2,zero,4029b9c <___vfiprintf_internal_r+0x1224>
 4028c98:	d9402017 	ldw	r5,128(sp)
 4028c9c:	00c00284 	movi	r3,10
 4028ca0:	2880030b 	ldhu	r2,12(r5)
 4028ca4:	1080068c 	andi	r2,r2,26
 4028ca8:	10ff581e 	bne	r2,r3,4028a0c <_gp+0xfffee2a8>
 4028cac:	d8c02017 	ldw	r3,128(sp)
 4028cb0:	1880038f 	ldh	r2,14(r3)
 4028cb4:	103f5516 	blt	r2,zero,4028a0c <_gp+0xfffee2a8>
 4028cb8:	d9c02217 	ldw	r7,136(sp)
 4028cbc:	d9002117 	ldw	r4,132(sp)
 4028cc0:	a80d883a 	mov	r6,r21
 4028cc4:	180b883a 	mov	r5,r3
 4028cc8:	4029ea00 	call	4029ea0 <__sbprintf>
 4028ccc:	dfc03517 	ldw	ra,212(sp)
 4028cd0:	df003417 	ldw	fp,208(sp)
 4028cd4:	ddc03317 	ldw	r23,204(sp)
 4028cd8:	dd803217 	ldw	r22,200(sp)
 4028cdc:	dd403117 	ldw	r21,196(sp)
 4028ce0:	dd003017 	ldw	r20,192(sp)
 4028ce4:	dcc02f17 	ldw	r19,188(sp)
 4028ce8:	dc802e17 	ldw	r18,184(sp)
 4028cec:	dc402d17 	ldw	r17,180(sp)
 4028cf0:	dc002c17 	ldw	r16,176(sp)
 4028cf4:	dec03604 	addi	sp,sp,216
 4028cf8:	f800283a 	ret
 4028cfc:	40255200 	call	4025520 <__sinit>
 4028d00:	003f2f06 	br	40289c0 <_gp+0xfffee25c>
 4028d04:	d8c02517 	ldw	r3,148(sp)
 4028d08:	d8802215 	stw	r2,136(sp)
 4028d0c:	00c7c83a 	sub	r3,zero,r3
 4028d10:	d8c02515 	stw	r3,148(sp)
 4028d14:	8c400114 	ori	r17,r17,4
 4028d18:	b0c00007 	ldb	r3,0(r22)
 4028d1c:	003f7306 	br	4028aec <_gp+0xfffee388>
 4028d20:	00800c04 	movi	r2,48
 4028d24:	d9402217 	ldw	r5,136(sp)
 4028d28:	d8801d05 	stb	r2,116(sp)
 4028d2c:	00801e04 	movi	r2,120
 4028d30:	d8801d45 	stb	r2,117(sp)
 4028d34:	d8001d85 	stb	zero,118(sp)
 4028d38:	b811883a 	mov	r8,r23
 4028d3c:	28c00104 	addi	r3,r5,4
 4028d40:	2cc00017 	ldw	r19,0(r5)
 4028d44:	0029883a 	mov	r20,zero
 4028d48:	88800094 	ori	r2,r17,2
 4028d4c:	80032516 	blt	r16,zero,40299e4 <___vfiprintf_internal_r+0x106c>
 4028d50:	00bfdfc4 	movi	r2,-129
 4028d54:	88a2703a 	and	r17,r17,r2
 4028d58:	d8c02215 	stw	r3,136(sp)
 4028d5c:	8c400094 	ori	r17,r17,2
 4028d60:	98032a1e 	bne	r19,zero,4029a0c <___vfiprintf_internal_r+0x1094>
 4028d64:	008100f4 	movhi	r2,1027
 4028d68:	10827a04 	addi	r2,r2,2536
 4028d6c:	d8802615 	stw	r2,152(sp)
 4028d70:	002b883a 	mov	r21,zero
 4028d74:	8001741e 	bne	r16,zero,4029348 <___vfiprintf_internal_r+0x9d0>
 4028d78:	0021883a 	mov	r16,zero
 4028d7c:	0029883a 	mov	r20,zero
 4028d80:	ddc01a04 	addi	r23,sp,104
 4028d84:	8027883a 	mov	r19,r16
 4028d88:	8500010e 	bge	r16,r20,4028d90 <___vfiprintf_internal_r+0x418>
 4028d8c:	a027883a 	mov	r19,r20
 4028d90:	ad403fcc 	andi	r21,r21,255
 4028d94:	ad40201c 	xori	r21,r21,128
 4028d98:	ad7fe004 	addi	r21,r21,-128
 4028d9c:	a8000126 	beq	r21,zero,4028da4 <___vfiprintf_internal_r+0x42c>
 4028da0:	9cc00044 	addi	r19,r19,1
 4028da4:	89c0008c 	andi	r7,r17,2
 4028da8:	38000126 	beq	r7,zero,4028db0 <___vfiprintf_internal_r+0x438>
 4028dac:	9cc00084 	addi	r19,r19,2
 4028db0:	88c0210c 	andi	r3,r17,132
 4028db4:	1801dd1e 	bne	r3,zero,402952c <___vfiprintf_internal_r+0xbb4>
 4028db8:	d9402517 	ldw	r5,148(sp)
 4028dbc:	2cebc83a 	sub	r21,r5,r19
 4028dc0:	0541da0e 	bge	zero,r21,402952c <___vfiprintf_internal_r+0xbb4>
 4028dc4:	07000404 	movi	fp,16
 4028dc8:	d8801c17 	ldw	r2,112(sp)
 4028dcc:	e543be0e 	bge	fp,r21,4029cc8 <___vfiprintf_internal_r+0x1350>
 4028dd0:	014100f4 	movhi	r5,1027
 4028dd4:	2942df04 	addi	r5,r5,2940
 4028dd8:	dc002715 	stw	r16,156(sp)
 4028ddc:	d9801b17 	ldw	r6,108(sp)
 4028de0:	a821883a 	mov	r16,r21
 4028de4:	d9402315 	stw	r5,140(sp)
 4028de8:	028001c4 	movi	r10,7
 4028dec:	d9c02915 	stw	r7,164(sp)
 4028df0:	182b883a 	mov	r21,r3
 4028df4:	00000506 	br	4028e0c <___vfiprintf_internal_r+0x494>
 4028df8:	31000084 	addi	r4,r6,2
 4028dfc:	42000204 	addi	r8,r8,8
 4028e00:	180d883a 	mov	r6,r3
 4028e04:	843ffc04 	addi	r16,r16,-16
 4028e08:	e4000f0e 	bge	fp,r16,4028e48 <___vfiprintf_internal_r+0x4d0>
 4028e0c:	010100f4 	movhi	r4,1027
 4028e10:	10800404 	addi	r2,r2,16
 4028e14:	30c00044 	addi	r3,r6,1
 4028e18:	2102df04 	addi	r4,r4,2940
 4028e1c:	41000015 	stw	r4,0(r8)
 4028e20:	47000115 	stw	fp,4(r8)
 4028e24:	d8801c15 	stw	r2,112(sp)
 4028e28:	d8c01b15 	stw	r3,108(sp)
 4028e2c:	50fff20e 	bge	r10,r3,4028df8 <_gp+0xfffee694>
 4028e30:	1001b21e 	bne	r2,zero,40294fc <___vfiprintf_internal_r+0xb84>
 4028e34:	843ffc04 	addi	r16,r16,-16
 4028e38:	000d883a 	mov	r6,zero
 4028e3c:	01000044 	movi	r4,1
 4028e40:	d811883a 	mov	r8,sp
 4028e44:	e43ff116 	blt	fp,r16,4028e0c <_gp+0xfffee6a8>
 4028e48:	a807883a 	mov	r3,r21
 4028e4c:	d9c02917 	ldw	r7,164(sp)
 4028e50:	802b883a 	mov	r21,r16
 4028e54:	dc002717 	ldw	r16,156(sp)
 4028e58:	d9402317 	ldw	r5,140(sp)
 4028e5c:	a885883a 	add	r2,r21,r2
 4028e60:	45400115 	stw	r21,4(r8)
 4028e64:	41400015 	stw	r5,0(r8)
 4028e68:	d8801c15 	stw	r2,112(sp)
 4028e6c:	d9001b15 	stw	r4,108(sp)
 4028e70:	014001c4 	movi	r5,7
 4028e74:	29026216 	blt	r5,r4,4029800 <___vfiprintf_internal_r+0xe88>
 4028e78:	d9801d87 	ldb	r6,118(sp)
 4028e7c:	42000204 	addi	r8,r8,8
 4028e80:	21400044 	addi	r5,r4,1
 4028e84:	3001ae1e 	bne	r6,zero,4029540 <___vfiprintf_internal_r+0xbc8>
 4028e88:	3801bb26 	beq	r7,zero,4029578 <___vfiprintf_internal_r+0xc00>
 4028e8c:	d9001d04 	addi	r4,sp,116
 4028e90:	10800084 	addi	r2,r2,2
 4028e94:	41000015 	stw	r4,0(r8)
 4028e98:	01000084 	movi	r4,2
 4028e9c:	41000115 	stw	r4,4(r8)
 4028ea0:	d8801c15 	stw	r2,112(sp)
 4028ea4:	d9401b15 	stw	r5,108(sp)
 4028ea8:	010001c4 	movi	r4,7
 4028eac:	2142680e 	bge	r4,r5,4029850 <___vfiprintf_internal_r+0xed8>
 4028eb0:	1002b11e 	bne	r2,zero,4029978 <___vfiprintf_internal_r+0x1000>
 4028eb4:	01802004 	movi	r6,128
 4028eb8:	01400044 	movi	r5,1
 4028ebc:	0009883a 	mov	r4,zero
 4028ec0:	d811883a 	mov	r8,sp
 4028ec4:	1981ae1e 	bne	r3,r6,4029580 <___vfiprintf_internal_r+0xc08>
 4028ec8:	d8c02517 	ldw	r3,148(sp)
 4028ecc:	1cf9c83a 	sub	fp,r3,r19
 4028ed0:	0701ab0e 	bge	zero,fp,4029580 <___vfiprintf_internal_r+0xc08>
 4028ed4:	05400404 	movi	r21,16
 4028ed8:	af03a90e 	bge	r21,fp,4029d80 <___vfiprintf_internal_r+0x1408>
 4028edc:	014100f4 	movhi	r5,1027
 4028ee0:	2942db04 	addi	r5,r5,2924
 4028ee4:	d9402315 	stw	r5,140(sp)
 4028ee8:	01c001c4 	movi	r7,7
 4028eec:	00000506 	br	4028f04 <___vfiprintf_internal_r+0x58c>
 4028ef0:	21800084 	addi	r6,r4,2
 4028ef4:	42000204 	addi	r8,r8,8
 4028ef8:	1809883a 	mov	r4,r3
 4028efc:	e73ffc04 	addi	fp,fp,-16
 4028f00:	af000d0e 	bge	r21,fp,4028f38 <___vfiprintf_internal_r+0x5c0>
 4028f04:	10800404 	addi	r2,r2,16
 4028f08:	20c00044 	addi	r3,r4,1
 4028f0c:	44800015 	stw	r18,0(r8)
 4028f10:	45400115 	stw	r21,4(r8)
 4028f14:	d8801c15 	stw	r2,112(sp)
 4028f18:	d8c01b15 	stw	r3,108(sp)
 4028f1c:	38fff40e 	bge	r7,r3,4028ef0 <_gp+0xfffee78c>
 4028f20:	10022b1e 	bne	r2,zero,40297d0 <___vfiprintf_internal_r+0xe58>
 4028f24:	e73ffc04 	addi	fp,fp,-16
 4028f28:	01800044 	movi	r6,1
 4028f2c:	0009883a 	mov	r4,zero
 4028f30:	d811883a 	mov	r8,sp
 4028f34:	af3ff316 	blt	r21,fp,4028f04 <_gp+0xfffee7a0>
 4028f38:	d8c02317 	ldw	r3,140(sp)
 4028f3c:	1705883a 	add	r2,r2,fp
 4028f40:	47000115 	stw	fp,4(r8)
 4028f44:	40c00015 	stw	r3,0(r8)
 4028f48:	d8801c15 	stw	r2,112(sp)
 4028f4c:	d9801b15 	stw	r6,108(sp)
 4028f50:	00c001c4 	movi	r3,7
 4028f54:	19829416 	blt	r3,r6,40299a8 <___vfiprintf_internal_r+0x1030>
 4028f58:	8521c83a 	sub	r16,r16,r20
 4028f5c:	42000204 	addi	r8,r8,8
 4028f60:	31400044 	addi	r5,r6,1
 4028f64:	3009883a 	mov	r4,r6
 4028f68:	04018716 	blt	zero,r16,4029588 <___vfiprintf_internal_r+0xc10>
 4028f6c:	a085883a 	add	r2,r20,r2
 4028f70:	45c00015 	stw	r23,0(r8)
 4028f74:	45000115 	stw	r20,4(r8)
 4028f78:	d8801c15 	stw	r2,112(sp)
 4028f7c:	d9401b15 	stw	r5,108(sp)
 4028f80:	00c001c4 	movi	r3,7
 4028f84:	1941c20e 	bge	r3,r5,4029690 <___vfiprintf_internal_r+0xd18>
 4028f88:	1002531e 	bne	r2,zero,40298d8 <___vfiprintf_internal_r+0xf60>
 4028f8c:	d8001b15 	stw	zero,108(sp)
 4028f90:	8c40010c 	andi	r17,r17,4
 4028f94:	88023226 	beq	r17,zero,4029860 <___vfiprintf_internal_r+0xee8>
 4028f98:	d9002517 	ldw	r4,148(sp)
 4028f9c:	24e3c83a 	sub	r17,r4,r19
 4028fa0:	04432916 	blt	zero,r17,4029c48 <___vfiprintf_internal_r+0x12d0>
 4028fa4:	d8802517 	ldw	r2,148(sp)
 4028fa8:	14c0010e 	bge	r2,r19,4028fb0 <___vfiprintf_internal_r+0x638>
 4028fac:	9805883a 	mov	r2,r19
 4028fb0:	d8c02417 	ldw	r3,144(sp)
 4028fb4:	1887883a 	add	r3,r3,r2
 4028fb8:	d8c02415 	stw	r3,144(sp)
 4028fbc:	d8001b15 	stw	zero,108(sp)
 4028fc0:	d811883a 	mov	r8,sp
 4028fc4:	003ea006 	br	4028a48 <_gp+0xfffee2e4>
 4028fc8:	8c400814 	ori	r17,r17,32
 4028fcc:	b0c00007 	ldb	r3,0(r22)
 4028fd0:	003ec606 	br	4028aec <_gp+0xfffee388>
 4028fd4:	b0c00007 	ldb	r3,0(r22)
 4028fd8:	00801b04 	movi	r2,108
 4028fdc:	18832026 	beq	r3,r2,4029c60 <___vfiprintf_internal_r+0x12e8>
 4028fe0:	8c400414 	ori	r17,r17,16
 4028fe4:	003ec106 	br	4028aec <_gp+0xfffee388>
 4028fe8:	9cc03fcc 	andi	r19,r19,255
 4028fec:	b811883a 	mov	r8,r23
 4028ff0:	9803981e 	bne	r19,zero,4029e54 <___vfiprintf_internal_r+0x14dc>
 4028ff4:	8880080c 	andi	r2,r17,32
 4028ff8:	1002be26 	beq	r2,zero,4029af4 <___vfiprintf_internal_r+0x117c>
 4028ffc:	d9002217 	ldw	r4,136(sp)
 4029000:	d9402417 	ldw	r5,144(sp)
 4029004:	20800017 	ldw	r2,0(r4)
 4029008:	2807d7fa 	srai	r3,r5,31
 402900c:	21000104 	addi	r4,r4,4
 4029010:	d9002215 	stw	r4,136(sp)
 4029014:	11400015 	stw	r5,0(r2)
 4029018:	10c00115 	stw	r3,4(r2)
 402901c:	003e8a06 	br	4028a48 <_gp+0xfffee2e4>
 4029020:	9cc03fcc 	andi	r19,r19,255
 4029024:	b811883a 	mov	r8,r23
 4029028:	9803871e 	bne	r19,zero,4029e48 <___vfiprintf_internal_r+0x14d0>
 402902c:	8880080c 	andi	r2,r17,32
 4029030:	10009a26 	beq	r2,zero,402929c <___vfiprintf_internal_r+0x924>
 4029034:	d9002217 	ldw	r4,136(sp)
 4029038:	d8001d85 	stb	zero,118(sp)
 402903c:	20800204 	addi	r2,r4,8
 4029040:	24c00017 	ldw	r19,0(r4)
 4029044:	25000117 	ldw	r20,4(r4)
 4029048:	8002a416 	blt	r16,zero,4029adc <___vfiprintf_internal_r+0x1164>
 402904c:	013fdfc4 	movi	r4,-129
 4029050:	9d06b03a 	or	r3,r19,r20
 4029054:	d8802215 	stw	r2,136(sp)
 4029058:	8922703a 	and	r17,r17,r4
 402905c:	18009b26 	beq	r3,zero,40292cc <___vfiprintf_internal_r+0x954>
 4029060:	002b883a 	mov	r21,zero
 4029064:	ddc01a04 	addi	r23,sp,104
 4029068:	9806d0fa 	srli	r3,r19,3
 402906c:	a008977a 	slli	r4,r20,29
 4029070:	a028d0fa 	srli	r20,r20,3
 4029074:	9cc001cc 	andi	r19,r19,7
 4029078:	98800c04 	addi	r2,r19,48
 402907c:	bdffffc4 	addi	r23,r23,-1
 4029080:	20e6b03a 	or	r19,r4,r3
 4029084:	b8800005 	stb	r2,0(r23)
 4029088:	9d06b03a 	or	r3,r19,r20
 402908c:	183ff61e 	bne	r3,zero,4029068 <_gp+0xfffee904>
 4029090:	88c0004c 	andi	r3,r17,1
 4029094:	18021f1e 	bne	r3,zero,4029914 <___vfiprintf_internal_r+0xf9c>
 4029098:	d9401e17 	ldw	r5,120(sp)
 402909c:	2de9c83a 	sub	r20,r5,r23
 40290a0:	003f3806 	br	4028d84 <_gp+0xfffee620>
 40290a4:	9cc03fcc 	andi	r19,r19,255
 40290a8:	b811883a 	mov	r8,r23
 40290ac:	98034f1e 	bne	r19,zero,4029dec <___vfiprintf_internal_r+0x1474>
 40290b0:	008100f4 	movhi	r2,1027
 40290b4:	10827a04 	addi	r2,r2,2536
 40290b8:	d8802615 	stw	r2,152(sp)
 40290bc:	8880080c 	andi	r2,r17,32
 40290c0:	1000ac26 	beq	r2,zero,4029374 <___vfiprintf_internal_r+0x9fc>
 40290c4:	d9002217 	ldw	r4,136(sp)
 40290c8:	24c00017 	ldw	r19,0(r4)
 40290cc:	25000117 	ldw	r20,4(r4)
 40290d0:	21000204 	addi	r4,r4,8
 40290d4:	d9002215 	stw	r4,136(sp)
 40290d8:	8880004c 	andi	r2,r17,1
 40290dc:	1001e726 	beq	r2,zero,402987c <___vfiprintf_internal_r+0xf04>
 40290e0:	9d04b03a 	or	r2,r19,r20
 40290e4:	10025c1e 	bne	r2,zero,4029a58 <___vfiprintf_internal_r+0x10e0>
 40290e8:	d8001d85 	stb	zero,118(sp)
 40290ec:	80024416 	blt	r16,zero,4029a00 <___vfiprintf_internal_r+0x1088>
 40290f0:	00bfdfc4 	movi	r2,-129
 40290f4:	88a2703a 	and	r17,r17,r2
 40290f8:	003f1d06 	br	4028d70 <_gp+0xfffee60c>
 40290fc:	d8c02217 	ldw	r3,136(sp)
 4029100:	04c00044 	movi	r19,1
 4029104:	b811883a 	mov	r8,r23
 4029108:	18800017 	ldw	r2,0(r3)
 402910c:	18c00104 	addi	r3,r3,4
 4029110:	d8001d85 	stb	zero,118(sp)
 4029114:	d8801005 	stb	r2,64(sp)
 4029118:	d8c02215 	stw	r3,136(sp)
 402911c:	9829883a 	mov	r20,r19
 4029120:	ddc01004 	addi	r23,sp,64
 4029124:	0021883a 	mov	r16,zero
 4029128:	003f1e06 	br	4028da4 <_gp+0xfffee640>
 402912c:	9cc03fcc 	andi	r19,r19,255
 4029130:	b811883a 	mov	r8,r23
 4029134:	9803331e 	bne	r19,zero,4029e04 <___vfiprintf_internal_r+0x148c>
 4029138:	8880080c 	andi	r2,r17,32
 402913c:	10004826 	beq	r2,zero,4029260 <___vfiprintf_internal_r+0x8e8>
 4029140:	d9002217 	ldw	r4,136(sp)
 4029144:	20800117 	ldw	r2,4(r4)
 4029148:	24c00017 	ldw	r19,0(r4)
 402914c:	21000204 	addi	r4,r4,8
 4029150:	d9002215 	stw	r4,136(sp)
 4029154:	1029883a 	mov	r20,r2
 4029158:	10024c16 	blt	r2,zero,4029a8c <___vfiprintf_internal_r+0x1114>
 402915c:	dd401d83 	ldbu	r21,118(sp)
 4029160:	80007116 	blt	r16,zero,4029328 <___vfiprintf_internal_r+0x9b0>
 4029164:	00ffdfc4 	movi	r3,-129
 4029168:	9d04b03a 	or	r2,r19,r20
 402916c:	88e2703a 	and	r17,r17,r3
 4029170:	1000d126 	beq	r2,zero,40294b8 <___vfiprintf_internal_r+0xb40>
 4029174:	a0023526 	beq	r20,zero,4029a4c <___vfiprintf_internal_r+0x10d4>
 4029178:	ddc01a04 	addi	r23,sp,104
 402917c:	4039883a 	mov	fp,r8
 4029180:	9809883a 	mov	r4,r19
 4029184:	a00b883a 	mov	r5,r20
 4029188:	01800284 	movi	r6,10
 402918c:	000f883a 	mov	r7,zero
 4029190:	402afb00 	call	402afb0 <__umoddi3>
 4029194:	10800c04 	addi	r2,r2,48
 4029198:	bdffffc4 	addi	r23,r23,-1
 402919c:	9809883a 	mov	r4,r19
 40291a0:	a00b883a 	mov	r5,r20
 40291a4:	b8800005 	stb	r2,0(r23)
 40291a8:	01800284 	movi	r6,10
 40291ac:	000f883a 	mov	r7,zero
 40291b0:	402a9b40 	call	402a9b4 <__udivdi3>
 40291b4:	1027883a 	mov	r19,r2
 40291b8:	10c4b03a 	or	r2,r2,r3
 40291bc:	1829883a 	mov	r20,r3
 40291c0:	103fef1e 	bne	r2,zero,4029180 <_gp+0xfffeea1c>
 40291c4:	d9001e17 	ldw	r4,120(sp)
 40291c8:	e011883a 	mov	r8,fp
 40291cc:	25e9c83a 	sub	r20,r4,r23
 40291d0:	003eec06 	br	4028d84 <_gp+0xfffee620>
 40291d4:	d8802307 	ldb	r2,140(sp)
 40291d8:	1002361e 	bne	r2,zero,4029ab4 <___vfiprintf_internal_r+0x113c>
 40291dc:	00c00804 	movi	r3,32
 40291e0:	d8c02305 	stb	r3,140(sp)
 40291e4:	04c00044 	movi	r19,1
 40291e8:	b0c00007 	ldb	r3,0(r22)
 40291ec:	003e3f06 	br	4028aec <_gp+0xfffee388>
 40291f0:	8c400054 	ori	r17,r17,1
 40291f4:	b0c00007 	ldb	r3,0(r22)
 40291f8:	003e3c06 	br	4028aec <_gp+0xfffee388>
 40291fc:	8c402014 	ori	r17,r17,128
 4029200:	b0c00007 	ldb	r3,0(r22)
 4029204:	003e3906 	br	4028aec <_gp+0xfffee388>
 4029208:	dc002715 	stw	r16,156(sp)
 402920c:	d8002515 	stw	zero,148(sp)
 4029210:	1f3ff404 	addi	fp,r3,-48
 4029214:	0009883a 	mov	r4,zero
 4029218:	b021883a 	mov	r16,r22
 402921c:	01400284 	movi	r5,10
 4029220:	4020d7c0 	call	4020d7c <__mulsi3>
 4029224:	80c00007 	ldb	r3,0(r16)
 4029228:	e089883a 	add	r4,fp,r2
 402922c:	b5800044 	addi	r22,r22,1
 4029230:	1f3ff404 	addi	fp,r3,-48
 4029234:	b021883a 	mov	r16,r22
 4029238:	af3ff82e 	bgeu	r21,fp,402921c <_gp+0xfffeeab8>
 402923c:	d9002515 	stw	r4,148(sp)
 4029240:	dc002717 	ldw	r16,156(sp)
 4029244:	003e2a06 	br	4028af0 <_gp+0xfffee38c>
 4029248:	9cc03fcc 	andi	r19,r19,255
 402924c:	b811883a 	mov	r8,r23
 4029250:	9802e91e 	bne	r19,zero,4029df8 <___vfiprintf_internal_r+0x1480>
 4029254:	8c400414 	ori	r17,r17,16
 4029258:	8880080c 	andi	r2,r17,32
 402925c:	103fb81e 	bne	r2,zero,4029140 <_gp+0xfffee9dc>
 4029260:	8880040c 	andi	r2,r17,16
 4029264:	10022e26 	beq	r2,zero,4029b20 <___vfiprintf_internal_r+0x11a8>
 4029268:	d9402217 	ldw	r5,136(sp)
 402926c:	2cc00017 	ldw	r19,0(r5)
 4029270:	29400104 	addi	r5,r5,4
 4029274:	d9402215 	stw	r5,136(sp)
 4029278:	9829d7fa 	srai	r20,r19,31
 402927c:	a005883a 	mov	r2,r20
 4029280:	003fb506 	br	4029158 <_gp+0xfffee9f4>
 4029284:	9cc03fcc 	andi	r19,r19,255
 4029288:	b811883a 	mov	r8,r23
 402928c:	9802fa1e 	bne	r19,zero,4029e78 <___vfiprintf_internal_r+0x1500>
 4029290:	8c400414 	ori	r17,r17,16
 4029294:	8880080c 	andi	r2,r17,32
 4029298:	103f661e 	bne	r2,zero,4029034 <_gp+0xfffee8d0>
 402929c:	8880040c 	andi	r2,r17,16
 40292a0:	10020626 	beq	r2,zero,4029abc <___vfiprintf_internal_r+0x1144>
 40292a4:	d9402217 	ldw	r5,136(sp)
 40292a8:	d8001d85 	stb	zero,118(sp)
 40292ac:	0029883a 	mov	r20,zero
 40292b0:	28800104 	addi	r2,r5,4
 40292b4:	2cc00017 	ldw	r19,0(r5)
 40292b8:	80020816 	blt	r16,zero,4029adc <___vfiprintf_internal_r+0x1164>
 40292bc:	00ffdfc4 	movi	r3,-129
 40292c0:	d8802215 	stw	r2,136(sp)
 40292c4:	88e2703a 	and	r17,r17,r3
 40292c8:	983f651e 	bne	r19,zero,4029060 <_gp+0xfffee8fc>
 40292cc:	002b883a 	mov	r21,zero
 40292d0:	8002cf26 	beq	r16,zero,4029e10 <___vfiprintf_internal_r+0x1498>
 40292d4:	0027883a 	mov	r19,zero
 40292d8:	0029883a 	mov	r20,zero
 40292dc:	003f6106 	br	4029064 <_gp+0xfffee900>
 40292e0:	9cc03fcc 	andi	r19,r19,255
 40292e4:	b811883a 	mov	r8,r23
 40292e8:	9802e01e 	bne	r19,zero,4029e6c <___vfiprintf_internal_r+0x14f4>
 40292ec:	8c400414 	ori	r17,r17,16
 40292f0:	8880080c 	andi	r2,r17,32
 40292f4:	1000641e 	bne	r2,zero,4029488 <___vfiprintf_internal_r+0xb10>
 40292f8:	8880040c 	andi	r2,r17,16
 40292fc:	1001c81e 	bne	r2,zero,4029a20 <___vfiprintf_internal_r+0x10a8>
 4029300:	8880100c 	andi	r2,r17,64
 4029304:	d8001d85 	stb	zero,118(sp)
 4029308:	1002281e 	bne	r2,zero,4029bac <___vfiprintf_internal_r+0x1234>
 402930c:	d9002217 	ldw	r4,136(sp)
 4029310:	0029883a 	mov	r20,zero
 4029314:	20800104 	addi	r2,r4,4
 4029318:	24c00017 	ldw	r19,0(r4)
 402931c:	8001c60e 	bge	r16,zero,4029a38 <___vfiprintf_internal_r+0x10c0>
 4029320:	d8802215 	stw	r2,136(sp)
 4029324:	002b883a 	mov	r21,zero
 4029328:	9d04b03a 	or	r2,r19,r20
 402932c:	103f911e 	bne	r2,zero,4029174 <_gp+0xfffeea10>
 4029330:	00800044 	movi	r2,1
 4029334:	10803fcc 	andi	r2,r2,255
 4029338:	00c00044 	movi	r3,1
 402933c:	10c05f26 	beq	r2,r3,40294bc <___vfiprintf_internal_r+0xb44>
 4029340:	00c00084 	movi	r3,2
 4029344:	10ffe31e 	bne	r2,r3,40292d4 <_gp+0xfffeeb70>
 4029348:	0027883a 	mov	r19,zero
 402934c:	0029883a 	mov	r20,zero
 4029350:	00015106 	br	4029898 <___vfiprintf_internal_r+0xf20>
 4029354:	9cc03fcc 	andi	r19,r19,255
 4029358:	b811883a 	mov	r8,r23
 402935c:	9802c01e 	bne	r19,zero,4029e60 <___vfiprintf_internal_r+0x14e8>
 4029360:	014100f4 	movhi	r5,1027
 4029364:	29427504 	addi	r5,r5,2516
 4029368:	d9402615 	stw	r5,152(sp)
 402936c:	8880080c 	andi	r2,r17,32
 4029370:	103f541e 	bne	r2,zero,40290c4 <_gp+0xfffee960>
 4029374:	8880040c 	andi	r2,r17,16
 4029378:	1001f226 	beq	r2,zero,4029b44 <___vfiprintf_internal_r+0x11cc>
 402937c:	d9402217 	ldw	r5,136(sp)
 4029380:	0029883a 	mov	r20,zero
 4029384:	2cc00017 	ldw	r19,0(r5)
 4029388:	29400104 	addi	r5,r5,4
 402938c:	d9402215 	stw	r5,136(sp)
 4029390:	003f5106 	br	40290d8 <_gp+0xfffee974>
 4029394:	d8c02217 	ldw	r3,136(sp)
 4029398:	b811883a 	mov	r8,r23
 402939c:	d8001d85 	stb	zero,118(sp)
 40293a0:	1dc00017 	ldw	r23,0(r3)
 40293a4:	1f000104 	addi	fp,r3,4
 40293a8:	b8025926 	beq	r23,zero,4029d10 <___vfiprintf_internal_r+0x1398>
 40293ac:	80023316 	blt	r16,zero,4029c7c <___vfiprintf_internal_r+0x1304>
 40293b0:	800d883a 	mov	r6,r16
 40293b4:	000b883a 	mov	r5,zero
 40293b8:	b809883a 	mov	r4,r23
 40293bc:	da002a15 	stw	r8,168(sp)
 40293c0:	4026a980 	call	4026a98 <memchr>
 40293c4:	da002a17 	ldw	r8,168(sp)
 40293c8:	10026826 	beq	r2,zero,4029d6c <___vfiprintf_internal_r+0x13f4>
 40293cc:	15e9c83a 	sub	r20,r2,r23
 40293d0:	dd401d83 	ldbu	r21,118(sp)
 40293d4:	df002215 	stw	fp,136(sp)
 40293d8:	0021883a 	mov	r16,zero
 40293dc:	003e6906 	br	4028d84 <_gp+0xfffee620>
 40293e0:	9cc03fcc 	andi	r19,r19,255
 40293e4:	b811883a 	mov	r8,r23
 40293e8:	983fc126 	beq	r19,zero,40292f0 <_gp+0xfffeeb8c>
 40293ec:	d8c02303 	ldbu	r3,140(sp)
 40293f0:	d8c01d85 	stb	r3,118(sp)
 40293f4:	003fbe06 	br	40292f0 <_gp+0xfffeeb8c>
 40293f8:	d9002217 	ldw	r4,136(sp)
 40293fc:	d9402217 	ldw	r5,136(sp)
 4029400:	21000017 	ldw	r4,0(r4)
 4029404:	28800104 	addi	r2,r5,4
 4029408:	d9002515 	stw	r4,148(sp)
 402940c:	203e3d16 	blt	r4,zero,4028d04 <_gp+0xfffee5a0>
 4029410:	d8802215 	stw	r2,136(sp)
 4029414:	b0c00007 	ldb	r3,0(r22)
 4029418:	003db406 	br	4028aec <_gp+0xfffee388>
 402941c:	00c00ac4 	movi	r3,43
 4029420:	d8c02305 	stb	r3,140(sp)
 4029424:	04c00044 	movi	r19,1
 4029428:	b0c00007 	ldb	r3,0(r22)
 402942c:	003daf06 	br	4028aec <_gp+0xfffee388>
 4029430:	b0c00007 	ldb	r3,0(r22)
 4029434:	01000a84 	movi	r4,42
 4029438:	b4000044 	addi	r16,r22,1
 402943c:	19025e26 	beq	r3,r4,4029db8 <___vfiprintf_internal_r+0x1440>
 4029440:	1f3ff404 	addi	fp,r3,-48
 4029444:	0009883a 	mov	r4,zero
 4029448:	af025236 	bltu	r21,fp,4029d94 <___vfiprintf_internal_r+0x141c>
 402944c:	01400284 	movi	r5,10
 4029450:	4020d7c0 	call	4020d7c <__mulsi3>
 4029454:	80c00007 	ldb	r3,0(r16)
 4029458:	1709883a 	add	r4,r2,fp
 402945c:	85800044 	addi	r22,r16,1
 4029460:	1f3ff404 	addi	fp,r3,-48
 4029464:	b021883a 	mov	r16,r22
 4029468:	af3ff82e 	bgeu	r21,fp,402944c <_gp+0xfffeece8>
 402946c:	2021883a 	mov	r16,r4
 4029470:	203d9f0e 	bge	r4,zero,4028af0 <_gp+0xfffee38c>
 4029474:	043fffc4 	movi	r16,-1
 4029478:	003d9d06 	br	4028af0 <_gp+0xfffee38c>
 402947c:	8c401014 	ori	r17,r17,64
 4029480:	b0c00007 	ldb	r3,0(r22)
 4029484:	003d9906 	br	4028aec <_gp+0xfffee388>
 4029488:	d9002217 	ldw	r4,136(sp)
 402948c:	d8001d85 	stb	zero,118(sp)
 4029490:	20c00204 	addi	r3,r4,8
 4029494:	24c00017 	ldw	r19,0(r4)
 4029498:	25000117 	ldw	r20,4(r4)
 402949c:	8001e716 	blt	r16,zero,4029c3c <___vfiprintf_internal_r+0x12c4>
 40294a0:	013fdfc4 	movi	r4,-129
 40294a4:	9d04b03a 	or	r2,r19,r20
 40294a8:	d8c02215 	stw	r3,136(sp)
 40294ac:	8922703a 	and	r17,r17,r4
 40294b0:	002b883a 	mov	r21,zero
 40294b4:	103f2f1e 	bne	r2,zero,4029174 <_gp+0xfffeea10>
 40294b8:	803e2f26 	beq	r16,zero,4028d78 <_gp+0xfffee614>
 40294bc:	0027883a 	mov	r19,zero
 40294c0:	9cc00c04 	addi	r19,r19,48
 40294c4:	dcc019c5 	stb	r19,103(sp)
 40294c8:	dd002817 	ldw	r20,160(sp)
 40294cc:	ddc019c4 	addi	r23,sp,103
 40294d0:	003e2c06 	br	4028d84 <_gp+0xfffee620>
 40294d4:	9cc03fcc 	andi	r19,r19,255
 40294d8:	b811883a 	mov	r8,r23
 40294dc:	9802571e 	bne	r19,zero,4029e3c <___vfiprintf_internal_r+0x14c4>
 40294e0:	18005726 	beq	r3,zero,4029640 <___vfiprintf_internal_r+0xcc8>
 40294e4:	04c00044 	movi	r19,1
 40294e8:	d8c01005 	stb	r3,64(sp)
 40294ec:	d8001d85 	stb	zero,118(sp)
 40294f0:	9829883a 	mov	r20,r19
 40294f4:	ddc01004 	addi	r23,sp,64
 40294f8:	003f0a06 	br	4029124 <_gp+0xfffee9c0>
 40294fc:	d9402017 	ldw	r5,128(sp)
 4029500:	d9002117 	ldw	r4,132(sp)
 4029504:	d9801a04 	addi	r6,sp,104
 4029508:	da802a15 	stw	r10,168(sp)
 402950c:	40288640 	call	4028864 <__sprint_r.part.0>
 4029510:	da802a17 	ldw	r10,168(sp)
 4029514:	1000501e 	bne	r2,zero,4029658 <___vfiprintf_internal_r+0xce0>
 4029518:	d9801b17 	ldw	r6,108(sp)
 402951c:	d8801c17 	ldw	r2,112(sp)
 4029520:	d811883a 	mov	r8,sp
 4029524:	31000044 	addi	r4,r6,1
 4029528:	003e3606 	br	4028e04 <_gp+0xfffee6a0>
 402952c:	d9001b17 	ldw	r4,108(sp)
 4029530:	d8801c17 	ldw	r2,112(sp)
 4029534:	21400044 	addi	r5,r4,1
 4029538:	d9801d87 	ldb	r6,118(sp)
 402953c:	303e5226 	beq	r6,zero,4028e88 <_gp+0xfffee724>
 4029540:	01800044 	movi	r6,1
 4029544:	d9001d84 	addi	r4,sp,118
 4029548:	1185883a 	add	r2,r2,r6
 402954c:	41000015 	stw	r4,0(r8)
 4029550:	41800115 	stw	r6,4(r8)
 4029554:	d8801c15 	stw	r2,112(sp)
 4029558:	d9401b15 	stw	r5,108(sp)
 402955c:	010001c4 	movi	r4,7
 4029560:	2140b00e 	bge	r4,r5,4029824 <___vfiprintf_internal_r+0xeac>
 4029564:	1000f61e 	bne	r2,zero,4029940 <___vfiprintf_internal_r+0xfc8>
 4029568:	3800b31e 	bne	r7,zero,4029838 <___vfiprintf_internal_r+0xec0>
 402956c:	0009883a 	mov	r4,zero
 4029570:	300b883a 	mov	r5,r6
 4029574:	d811883a 	mov	r8,sp
 4029578:	01802004 	movi	r6,128
 402957c:	19be5226 	beq	r3,r6,4028ec8 <_gp+0xfffee764>
 4029580:	8521c83a 	sub	r16,r16,r20
 4029584:	043e790e 	bge	zero,r16,4028f6c <_gp+0xfffee808>
 4029588:	05400404 	movi	r21,16
 402958c:	ac01b00e 	bge	r21,r16,4029c50 <___vfiprintf_internal_r+0x12d8>
 4029590:	014100f4 	movhi	r5,1027
 4029594:	2942db04 	addi	r5,r5,2924
 4029598:	d9402315 	stw	r5,140(sp)
 402959c:	070001c4 	movi	fp,7
 40295a0:	00000506 	br	40295b8 <___vfiprintf_internal_r+0xc40>
 40295a4:	21400084 	addi	r5,r4,2
 40295a8:	42000204 	addi	r8,r8,8
 40295ac:	1809883a 	mov	r4,r3
 40295b0:	843ffc04 	addi	r16,r16,-16
 40295b4:	ac000d0e 	bge	r21,r16,40295ec <___vfiprintf_internal_r+0xc74>
 40295b8:	10800404 	addi	r2,r2,16
 40295bc:	20c00044 	addi	r3,r4,1
 40295c0:	44800015 	stw	r18,0(r8)
 40295c4:	45400115 	stw	r21,4(r8)
 40295c8:	d8801c15 	stw	r2,112(sp)
 40295cc:	d8c01b15 	stw	r3,108(sp)
 40295d0:	e0fff40e 	bge	fp,r3,40295a4 <_gp+0xfffeee40>
 40295d4:	1000101e 	bne	r2,zero,4029618 <___vfiprintf_internal_r+0xca0>
 40295d8:	843ffc04 	addi	r16,r16,-16
 40295dc:	01400044 	movi	r5,1
 40295e0:	0009883a 	mov	r4,zero
 40295e4:	d811883a 	mov	r8,sp
 40295e8:	ac3ff316 	blt	r21,r16,40295b8 <_gp+0xfffeee54>
 40295ec:	d8c02317 	ldw	r3,140(sp)
 40295f0:	1405883a 	add	r2,r2,r16
 40295f4:	44000115 	stw	r16,4(r8)
 40295f8:	40c00015 	stw	r3,0(r8)
 40295fc:	d8801c15 	stw	r2,112(sp)
 4029600:	d9401b15 	stw	r5,108(sp)
 4029604:	00c001c4 	movi	r3,7
 4029608:	19401916 	blt	r3,r5,4029670 <___vfiprintf_internal_r+0xcf8>
 402960c:	42000204 	addi	r8,r8,8
 4029610:	29400044 	addi	r5,r5,1
 4029614:	003e5506 	br	4028f6c <_gp+0xfffee808>
 4029618:	d9402017 	ldw	r5,128(sp)
 402961c:	d9002117 	ldw	r4,132(sp)
 4029620:	d9801a04 	addi	r6,sp,104
 4029624:	40288640 	call	4028864 <__sprint_r.part.0>
 4029628:	10000b1e 	bne	r2,zero,4029658 <___vfiprintf_internal_r+0xce0>
 402962c:	d9001b17 	ldw	r4,108(sp)
 4029630:	d8801c17 	ldw	r2,112(sp)
 4029634:	d811883a 	mov	r8,sp
 4029638:	21400044 	addi	r5,r4,1
 402963c:	003fdc06 	br	40295b0 <_gp+0xfffeee4c>
 4029640:	d8801c17 	ldw	r2,112(sp)
 4029644:	10000426 	beq	r2,zero,4029658 <___vfiprintf_internal_r+0xce0>
 4029648:	d9402017 	ldw	r5,128(sp)
 402964c:	d9002117 	ldw	r4,132(sp)
 4029650:	d9801a04 	addi	r6,sp,104
 4029654:	40288640 	call	4028864 <__sprint_r.part.0>
 4029658:	d9402017 	ldw	r5,128(sp)
 402965c:	2880030b 	ldhu	r2,12(r5)
 4029660:	1080100c 	andi	r2,r2,64
 4029664:	10014d1e 	bne	r2,zero,4029b9c <___vfiprintf_internal_r+0x1224>
 4029668:	d8802417 	ldw	r2,144(sp)
 402966c:	003d9706 	br	4028ccc <_gp+0xfffee568>
 4029670:	1000d21e 	bne	r2,zero,40299bc <___vfiprintf_internal_r+0x1044>
 4029674:	00c00044 	movi	r3,1
 4029678:	a005883a 	mov	r2,r20
 402967c:	ddc00015 	stw	r23,0(sp)
 4029680:	dd000115 	stw	r20,4(sp)
 4029684:	dd001c15 	stw	r20,112(sp)
 4029688:	d8c01b15 	stw	r3,108(sp)
 402968c:	d811883a 	mov	r8,sp
 4029690:	42000204 	addi	r8,r8,8
 4029694:	8c40010c 	andi	r17,r17,4
 4029698:	88004026 	beq	r17,zero,402979c <___vfiprintf_internal_r+0xe24>
 402969c:	d9002517 	ldw	r4,148(sp)
 40296a0:	24e3c83a 	sub	r17,r4,r19
 40296a4:	04403d0e 	bge	zero,r17,402979c <___vfiprintf_internal_r+0xe24>
 40296a8:	04000404 	movi	r16,16
 40296ac:	8441a90e 	bge	r16,r17,4029d54 <___vfiprintf_internal_r+0x13dc>
 40296b0:	00c100f4 	movhi	r3,1027
 40296b4:	18c2df04 	addi	r3,r3,2940
 40296b8:	d9001b17 	ldw	r4,108(sp)
 40296bc:	d8c02315 	stw	r3,140(sp)
 40296c0:	050001c4 	movi	r20,7
 40296c4:	dd402117 	ldw	r21,132(sp)
 40296c8:	ddc02017 	ldw	r23,128(sp)
 40296cc:	00000506 	br	40296e4 <___vfiprintf_internal_r+0xd6c>
 40296d0:	21400084 	addi	r5,r4,2
 40296d4:	42000204 	addi	r8,r8,8
 40296d8:	1809883a 	mov	r4,r3
 40296dc:	8c7ffc04 	addi	r17,r17,-16
 40296e0:	84400f0e 	bge	r16,r17,4029720 <___vfiprintf_internal_r+0xda8>
 40296e4:	014100f4 	movhi	r5,1027
 40296e8:	10800404 	addi	r2,r2,16
 40296ec:	20c00044 	addi	r3,r4,1
 40296f0:	2942df04 	addi	r5,r5,2940
 40296f4:	41400015 	stw	r5,0(r8)
 40296f8:	44000115 	stw	r16,4(r8)
 40296fc:	d8801c15 	stw	r2,112(sp)
 4029700:	d8c01b15 	stw	r3,108(sp)
 4029704:	a0fff20e 	bge	r20,r3,40296d0 <_gp+0xfffeef6c>
 4029708:	1000141e 	bne	r2,zero,402975c <___vfiprintf_internal_r+0xde4>
 402970c:	8c7ffc04 	addi	r17,r17,-16
 4029710:	01400044 	movi	r5,1
 4029714:	0009883a 	mov	r4,zero
 4029718:	d811883a 	mov	r8,sp
 402971c:	847ff116 	blt	r16,r17,40296e4 <_gp+0xfffeef80>
 4029720:	d8c02317 	ldw	r3,140(sp)
 4029724:	1445883a 	add	r2,r2,r17
 4029728:	44400115 	stw	r17,4(r8)
 402972c:	40c00015 	stw	r3,0(r8)
 4029730:	d8801c15 	stw	r2,112(sp)
 4029734:	d9401b15 	stw	r5,108(sp)
 4029738:	00c001c4 	movi	r3,7
 402973c:	1940170e 	bge	r3,r5,402979c <___vfiprintf_internal_r+0xe24>
 4029740:	1000101e 	bne	r2,zero,4029784 <___vfiprintf_internal_r+0xe0c>
 4029744:	d8802517 	ldw	r2,148(sp)
 4029748:	14c11616 	blt	r2,r19,4029ba4 <___vfiprintf_internal_r+0x122c>
 402974c:	d9002417 	ldw	r4,144(sp)
 4029750:	2089883a 	add	r4,r4,r2
 4029754:	d9002415 	stw	r4,144(sp)
 4029758:	003e1806 	br	4028fbc <_gp+0xfffee858>
 402975c:	d9801a04 	addi	r6,sp,104
 4029760:	b80b883a 	mov	r5,r23
 4029764:	a809883a 	mov	r4,r21
 4029768:	40288640 	call	4028864 <__sprint_r.part.0>
 402976c:	103fba1e 	bne	r2,zero,4029658 <_gp+0xfffeeef4>
 4029770:	d9001b17 	ldw	r4,108(sp)
 4029774:	d8801c17 	ldw	r2,112(sp)
 4029778:	d811883a 	mov	r8,sp
 402977c:	21400044 	addi	r5,r4,1
 4029780:	003fd606 	br	40296dc <_gp+0xfffeef78>
 4029784:	d9402017 	ldw	r5,128(sp)
 4029788:	d9002117 	ldw	r4,132(sp)
 402978c:	d9801a04 	addi	r6,sp,104
 4029790:	40288640 	call	4028864 <__sprint_r.part.0>
 4029794:	103fb01e 	bne	r2,zero,4029658 <_gp+0xfffeeef4>
 4029798:	d8801c17 	ldw	r2,112(sp)
 402979c:	d8c02517 	ldw	r3,148(sp)
 40297a0:	1cc0010e 	bge	r3,r19,40297a8 <___vfiprintf_internal_r+0xe30>
 40297a4:	9807883a 	mov	r3,r19
 40297a8:	d9002417 	ldw	r4,144(sp)
 40297ac:	20c9883a 	add	r4,r4,r3
 40297b0:	d9002415 	stw	r4,144(sp)
 40297b4:	103e0126 	beq	r2,zero,4028fbc <_gp+0xfffee858>
 40297b8:	d9402017 	ldw	r5,128(sp)
 40297bc:	d9002117 	ldw	r4,132(sp)
 40297c0:	d9801a04 	addi	r6,sp,104
 40297c4:	40288640 	call	4028864 <__sprint_r.part.0>
 40297c8:	103dfc26 	beq	r2,zero,4028fbc <_gp+0xfffee858>
 40297cc:	003fa206 	br	4029658 <_gp+0xfffeeef4>
 40297d0:	d9402017 	ldw	r5,128(sp)
 40297d4:	d9002117 	ldw	r4,132(sp)
 40297d8:	d9801a04 	addi	r6,sp,104
 40297dc:	d9c02b15 	stw	r7,172(sp)
 40297e0:	40288640 	call	4028864 <__sprint_r.part.0>
 40297e4:	d9c02b17 	ldw	r7,172(sp)
 40297e8:	103f9b1e 	bne	r2,zero,4029658 <_gp+0xfffeeef4>
 40297ec:	d9001b17 	ldw	r4,108(sp)
 40297f0:	d8801c17 	ldw	r2,112(sp)
 40297f4:	d811883a 	mov	r8,sp
 40297f8:	21800044 	addi	r6,r4,1
 40297fc:	003dbf06 	br	4028efc <_gp+0xfffee798>
 4029800:	1000d81e 	bne	r2,zero,4029b64 <___vfiprintf_internal_r+0x11ec>
 4029804:	d9001d87 	ldb	r4,118(sp)
 4029808:	20000a26 	beq	r4,zero,4029834 <___vfiprintf_internal_r+0xebc>
 402980c:	00800044 	movi	r2,1
 4029810:	d9001d84 	addi	r4,sp,118
 4029814:	100b883a 	mov	r5,r2
 4029818:	d9000015 	stw	r4,0(sp)
 402981c:	d8800115 	stw	r2,4(sp)
 4029820:	d811883a 	mov	r8,sp
 4029824:	2809883a 	mov	r4,r5
 4029828:	42000204 	addi	r8,r8,8
 402982c:	29400044 	addi	r5,r5,1
 4029830:	003d9506 	br	4028e88 <_gp+0xfffee724>
 4029834:	3800fd26 	beq	r7,zero,4029c2c <___vfiprintf_internal_r+0x12b4>
 4029838:	00800084 	movi	r2,2
 402983c:	d9001d04 	addi	r4,sp,116
 4029840:	d9000015 	stw	r4,0(sp)
 4029844:	d8800115 	stw	r2,4(sp)
 4029848:	01400044 	movi	r5,1
 402984c:	d811883a 	mov	r8,sp
 4029850:	2809883a 	mov	r4,r5
 4029854:	42000204 	addi	r8,r8,8
 4029858:	29400044 	addi	r5,r5,1
 402985c:	003f4606 	br	4029578 <_gp+0xfffeee14>
 4029860:	d8802517 	ldw	r2,148(sp)
 4029864:	14c0010e 	bge	r2,r19,402986c <___vfiprintf_internal_r+0xef4>
 4029868:	9805883a 	mov	r2,r19
 402986c:	d9402417 	ldw	r5,144(sp)
 4029870:	288b883a 	add	r5,r5,r2
 4029874:	d9402415 	stw	r5,144(sp)
 4029878:	003dd006 	br	4028fbc <_gp+0xfffee858>
 402987c:	d8001d85 	stb	zero,118(sp)
 4029880:	80005d16 	blt	r16,zero,40299f8 <___vfiprintf_internal_r+0x1080>
 4029884:	00ffdfc4 	movi	r3,-129
 4029888:	9d04b03a 	or	r2,r19,r20
 402988c:	88e2703a 	and	r17,r17,r3
 4029890:	103d3726 	beq	r2,zero,4028d70 <_gp+0xfffee60c>
 4029894:	002b883a 	mov	r21,zero
 4029898:	d9002617 	ldw	r4,152(sp)
 402989c:	ddc01a04 	addi	r23,sp,104
 40298a0:	988003cc 	andi	r2,r19,15
 40298a4:	a006973a 	slli	r3,r20,28
 40298a8:	2085883a 	add	r2,r4,r2
 40298ac:	9826d13a 	srli	r19,r19,4
 40298b0:	10800003 	ldbu	r2,0(r2)
 40298b4:	a028d13a 	srli	r20,r20,4
 40298b8:	bdffffc4 	addi	r23,r23,-1
 40298bc:	1ce6b03a 	or	r19,r3,r19
 40298c0:	b8800005 	stb	r2,0(r23)
 40298c4:	9d04b03a 	or	r2,r19,r20
 40298c8:	103ff51e 	bne	r2,zero,40298a0 <_gp+0xfffef13c>
 40298cc:	d8801e17 	ldw	r2,120(sp)
 40298d0:	15e9c83a 	sub	r20,r2,r23
 40298d4:	003d2b06 	br	4028d84 <_gp+0xfffee620>
 40298d8:	d9402017 	ldw	r5,128(sp)
 40298dc:	d9002117 	ldw	r4,132(sp)
 40298e0:	d9801a04 	addi	r6,sp,104
 40298e4:	40288640 	call	4028864 <__sprint_r.part.0>
 40298e8:	103f5b1e 	bne	r2,zero,4029658 <_gp+0xfffeeef4>
 40298ec:	d8801c17 	ldw	r2,112(sp)
 40298f0:	d811883a 	mov	r8,sp
 40298f4:	003f6706 	br	4029694 <_gp+0xfffeef30>
 40298f8:	d9402017 	ldw	r5,128(sp)
 40298fc:	d9002117 	ldw	r4,132(sp)
 4029900:	d9801a04 	addi	r6,sp,104
 4029904:	40288640 	call	4028864 <__sprint_r.part.0>
 4029908:	103f531e 	bne	r2,zero,4029658 <_gp+0xfffeeef4>
 402990c:	d811883a 	mov	r8,sp
 4029910:	003cd906 	br	4028c78 <_gp+0xfffee514>
 4029914:	10803fcc 	andi	r2,r2,255
 4029918:	1080201c 	xori	r2,r2,128
 402991c:	10bfe004 	addi	r2,r2,-128
 4029920:	00c00c04 	movi	r3,48
 4029924:	10ffe926 	beq	r2,r3,40298cc <_gp+0xfffef168>
 4029928:	b8ffffc5 	stb	r3,-1(r23)
 402992c:	d8c01e17 	ldw	r3,120(sp)
 4029930:	b8bfffc4 	addi	r2,r23,-1
 4029934:	102f883a 	mov	r23,r2
 4029938:	18a9c83a 	sub	r20,r3,r2
 402993c:	003d1106 	br	4028d84 <_gp+0xfffee620>
 4029940:	d9402017 	ldw	r5,128(sp)
 4029944:	d9002117 	ldw	r4,132(sp)
 4029948:	d9801a04 	addi	r6,sp,104
 402994c:	d8c02a15 	stw	r3,168(sp)
 4029950:	d9c02b15 	stw	r7,172(sp)
 4029954:	40288640 	call	4028864 <__sprint_r.part.0>
 4029958:	d8c02a17 	ldw	r3,168(sp)
 402995c:	d9c02b17 	ldw	r7,172(sp)
 4029960:	103f3d1e 	bne	r2,zero,4029658 <_gp+0xfffeeef4>
 4029964:	d9001b17 	ldw	r4,108(sp)
 4029968:	d8801c17 	ldw	r2,112(sp)
 402996c:	d811883a 	mov	r8,sp
 4029970:	21400044 	addi	r5,r4,1
 4029974:	003d4406 	br	4028e88 <_gp+0xfffee724>
 4029978:	d9402017 	ldw	r5,128(sp)
 402997c:	d9002117 	ldw	r4,132(sp)
 4029980:	d9801a04 	addi	r6,sp,104
 4029984:	d8c02a15 	stw	r3,168(sp)
 4029988:	40288640 	call	4028864 <__sprint_r.part.0>
 402998c:	d8c02a17 	ldw	r3,168(sp)
 4029990:	103f311e 	bne	r2,zero,4029658 <_gp+0xfffeeef4>
 4029994:	d9001b17 	ldw	r4,108(sp)
 4029998:	d8801c17 	ldw	r2,112(sp)
 402999c:	d811883a 	mov	r8,sp
 40299a0:	21400044 	addi	r5,r4,1
 40299a4:	003ef406 	br	4029578 <_gp+0xfffeee14>
 40299a8:	1000bd1e 	bne	r2,zero,4029ca0 <___vfiprintf_internal_r+0x1328>
 40299ac:	01400044 	movi	r5,1
 40299b0:	0009883a 	mov	r4,zero
 40299b4:	d811883a 	mov	r8,sp
 40299b8:	003ef106 	br	4029580 <_gp+0xfffeee1c>
 40299bc:	d9402017 	ldw	r5,128(sp)
 40299c0:	d9002117 	ldw	r4,132(sp)
 40299c4:	d9801a04 	addi	r6,sp,104
 40299c8:	40288640 	call	4028864 <__sprint_r.part.0>
 40299cc:	103f221e 	bne	r2,zero,4029658 <_gp+0xfffeeef4>
 40299d0:	d9401b17 	ldw	r5,108(sp)
 40299d4:	d8801c17 	ldw	r2,112(sp)
 40299d8:	d811883a 	mov	r8,sp
 40299dc:	29400044 	addi	r5,r5,1
 40299e0:	003d6206 	br	4028f6c <_gp+0xfffee808>
 40299e4:	014100f4 	movhi	r5,1027
 40299e8:	29427a04 	addi	r5,r5,2536
 40299ec:	d9402615 	stw	r5,152(sp)
 40299f0:	d8c02215 	stw	r3,136(sp)
 40299f4:	1023883a 	mov	r17,r2
 40299f8:	9d04b03a 	or	r2,r19,r20
 40299fc:	103fa51e 	bne	r2,zero,4029894 <_gp+0xfffef130>
 4029a00:	002b883a 	mov	r21,zero
 4029a04:	00800084 	movi	r2,2
 4029a08:	003e4a06 	br	4029334 <_gp+0xfffeebd0>
 4029a0c:	014100f4 	movhi	r5,1027
 4029a10:	29427a04 	addi	r5,r5,2536
 4029a14:	002b883a 	mov	r21,zero
 4029a18:	d9402615 	stw	r5,152(sp)
 4029a1c:	003f9e06 	br	4029898 <_gp+0xfffef134>
 4029a20:	d9402217 	ldw	r5,136(sp)
 4029a24:	d8001d85 	stb	zero,118(sp)
 4029a28:	0029883a 	mov	r20,zero
 4029a2c:	28800104 	addi	r2,r5,4
 4029a30:	2cc00017 	ldw	r19,0(r5)
 4029a34:	803e3a16 	blt	r16,zero,4029320 <_gp+0xfffeebbc>
 4029a38:	00ffdfc4 	movi	r3,-129
 4029a3c:	d8802215 	stw	r2,136(sp)
 4029a40:	88e2703a 	and	r17,r17,r3
 4029a44:	002b883a 	mov	r21,zero
 4029a48:	983e9b26 	beq	r19,zero,40294b8 <_gp+0xfffeed54>
 4029a4c:	00800244 	movi	r2,9
 4029a50:	14fdc936 	bltu	r2,r19,4029178 <_gp+0xfffeea14>
 4029a54:	003e9a06 	br	40294c0 <_gp+0xfffeed5c>
 4029a58:	00800c04 	movi	r2,48
 4029a5c:	d8c01d45 	stb	r3,117(sp)
 4029a60:	d8801d05 	stb	r2,116(sp)
 4029a64:	d8001d85 	stb	zero,118(sp)
 4029a68:	88c00094 	ori	r3,r17,2
 4029a6c:	80009c16 	blt	r16,zero,4029ce0 <___vfiprintf_internal_r+0x1368>
 4029a70:	00bfdfc4 	movi	r2,-129
 4029a74:	88a2703a 	and	r17,r17,r2
 4029a78:	8c400094 	ori	r17,r17,2
 4029a7c:	002b883a 	mov	r21,zero
 4029a80:	003f8506 	br	4029898 <_gp+0xfffef134>
 4029a84:	b029883a 	mov	r20,r22
 4029a88:	003c0b06 	br	4028ab8 <_gp+0xfffee354>
 4029a8c:	04e7c83a 	sub	r19,zero,r19
 4029a90:	05400b44 	movi	r21,45
 4029a94:	9804c03a 	cmpne	r2,r19,zero
 4029a98:	0529c83a 	sub	r20,zero,r20
 4029a9c:	dd401d85 	stb	r21,118(sp)
 4029aa0:	a0a9c83a 	sub	r20,r20,r2
 4029aa4:	80009716 	blt	r16,zero,4029d04 <___vfiprintf_internal_r+0x138c>
 4029aa8:	00bfdfc4 	movi	r2,-129
 4029aac:	88a2703a 	and	r17,r17,r2
 4029ab0:	003db006 	br	4029174 <_gp+0xfffeea10>
 4029ab4:	b0c00007 	ldb	r3,0(r22)
 4029ab8:	003c0c06 	br	4028aec <_gp+0xfffee388>
 4029abc:	8880100c 	andi	r2,r17,64
 4029ac0:	d8001d85 	stb	zero,118(sp)
 4029ac4:	1000461e 	bne	r2,zero,4029be0 <___vfiprintf_internal_r+0x1268>
 4029ac8:	d9002217 	ldw	r4,136(sp)
 4029acc:	0029883a 	mov	r20,zero
 4029ad0:	20800104 	addi	r2,r4,4
 4029ad4:	24c00017 	ldw	r19,0(r4)
 4029ad8:	803df80e 	bge	r16,zero,40292bc <_gp+0xfffeeb58>
 4029adc:	9d06b03a 	or	r3,r19,r20
 4029ae0:	d8802215 	stw	r2,136(sp)
 4029ae4:	183d5e1e 	bne	r3,zero,4029060 <_gp+0xfffee8fc>
 4029ae8:	002b883a 	mov	r21,zero
 4029aec:	0005883a 	mov	r2,zero
 4029af0:	003e1006 	br	4029334 <_gp+0xfffeebd0>
 4029af4:	8880040c 	andi	r2,r17,16
 4029af8:	1000321e 	bne	r2,zero,4029bc4 <___vfiprintf_internal_r+0x124c>
 4029afc:	8c40100c 	andi	r17,r17,64
 4029b00:	88008d26 	beq	r17,zero,4029d38 <___vfiprintf_internal_r+0x13c0>
 4029b04:	d9402217 	ldw	r5,136(sp)
 4029b08:	d8c02417 	ldw	r3,144(sp)
 4029b0c:	28800017 	ldw	r2,0(r5)
 4029b10:	29400104 	addi	r5,r5,4
 4029b14:	d9402215 	stw	r5,136(sp)
 4029b18:	10c0000d 	sth	r3,0(r2)
 4029b1c:	003bca06 	br	4028a48 <_gp+0xfffee2e4>
 4029b20:	8880100c 	andi	r2,r17,64
 4029b24:	10003a26 	beq	r2,zero,4029c10 <___vfiprintf_internal_r+0x1298>
 4029b28:	d8802217 	ldw	r2,136(sp)
 4029b2c:	14c0000f 	ldh	r19,0(r2)
 4029b30:	10800104 	addi	r2,r2,4
 4029b34:	d8802215 	stw	r2,136(sp)
 4029b38:	9829d7fa 	srai	r20,r19,31
 4029b3c:	a005883a 	mov	r2,r20
 4029b40:	003d8506 	br	4029158 <_gp+0xfffee9f4>
 4029b44:	8880100c 	andi	r2,r17,64
 4029b48:	10002b26 	beq	r2,zero,4029bf8 <___vfiprintf_internal_r+0x1280>
 4029b4c:	d8802217 	ldw	r2,136(sp)
 4029b50:	0029883a 	mov	r20,zero
 4029b54:	14c0000b 	ldhu	r19,0(r2)
 4029b58:	10800104 	addi	r2,r2,4
 4029b5c:	d8802215 	stw	r2,136(sp)
 4029b60:	003d5d06 	br	40290d8 <_gp+0xfffee974>
 4029b64:	d9402017 	ldw	r5,128(sp)
 4029b68:	d9002117 	ldw	r4,132(sp)
 4029b6c:	d9801a04 	addi	r6,sp,104
 4029b70:	d8c02a15 	stw	r3,168(sp)
 4029b74:	d9c02b15 	stw	r7,172(sp)
 4029b78:	40288640 	call	4028864 <__sprint_r.part.0>
 4029b7c:	d8c02a17 	ldw	r3,168(sp)
 4029b80:	d9c02b17 	ldw	r7,172(sp)
 4029b84:	103eb41e 	bne	r2,zero,4029658 <_gp+0xfffeeef4>
 4029b88:	d9001b17 	ldw	r4,108(sp)
 4029b8c:	d8801c17 	ldw	r2,112(sp)
 4029b90:	d811883a 	mov	r8,sp
 4029b94:	21400044 	addi	r5,r4,1
 4029b98:	003e6706 	br	4029538 <_gp+0xfffeedd4>
 4029b9c:	00bfffc4 	movi	r2,-1
 4029ba0:	003c4a06 	br	4028ccc <_gp+0xfffee568>
 4029ba4:	9805883a 	mov	r2,r19
 4029ba8:	003ee806 	br	402974c <_gp+0xfffeefe8>
 4029bac:	d8c02217 	ldw	r3,136(sp)
 4029bb0:	0029883a 	mov	r20,zero
 4029bb4:	18800104 	addi	r2,r3,4
 4029bb8:	1cc0000b 	ldhu	r19,0(r3)
 4029bbc:	803f9e0e 	bge	r16,zero,4029a38 <_gp+0xfffef2d4>
 4029bc0:	003dd706 	br	4029320 <_gp+0xfffeebbc>
 4029bc4:	d8c02217 	ldw	r3,136(sp)
 4029bc8:	d9002417 	ldw	r4,144(sp)
 4029bcc:	18800017 	ldw	r2,0(r3)
 4029bd0:	18c00104 	addi	r3,r3,4
 4029bd4:	d8c02215 	stw	r3,136(sp)
 4029bd8:	11000015 	stw	r4,0(r2)
 4029bdc:	003b9a06 	br	4028a48 <_gp+0xfffee2e4>
 4029be0:	d8c02217 	ldw	r3,136(sp)
 4029be4:	0029883a 	mov	r20,zero
 4029be8:	18800104 	addi	r2,r3,4
 4029bec:	1cc0000b 	ldhu	r19,0(r3)
 4029bf0:	803db20e 	bge	r16,zero,40292bc <_gp+0xfffeeb58>
 4029bf4:	003fb906 	br	4029adc <_gp+0xfffef378>
 4029bf8:	d9002217 	ldw	r4,136(sp)
 4029bfc:	0029883a 	mov	r20,zero
 4029c00:	24c00017 	ldw	r19,0(r4)
 4029c04:	21000104 	addi	r4,r4,4
 4029c08:	d9002215 	stw	r4,136(sp)
 4029c0c:	003d3206 	br	40290d8 <_gp+0xfffee974>
 4029c10:	d8c02217 	ldw	r3,136(sp)
 4029c14:	1cc00017 	ldw	r19,0(r3)
 4029c18:	18c00104 	addi	r3,r3,4
 4029c1c:	d8c02215 	stw	r3,136(sp)
 4029c20:	9829d7fa 	srai	r20,r19,31
 4029c24:	a005883a 	mov	r2,r20
 4029c28:	003d4b06 	br	4029158 <_gp+0xfffee9f4>
 4029c2c:	0009883a 	mov	r4,zero
 4029c30:	01400044 	movi	r5,1
 4029c34:	d811883a 	mov	r8,sp
 4029c38:	003e4f06 	br	4029578 <_gp+0xfffeee14>
 4029c3c:	d8c02215 	stw	r3,136(sp)
 4029c40:	002b883a 	mov	r21,zero
 4029c44:	003db806 	br	4029328 <_gp+0xfffeebc4>
 4029c48:	d811883a 	mov	r8,sp
 4029c4c:	003e9606 	br	40296a8 <_gp+0xfffeef44>
 4029c50:	010100f4 	movhi	r4,1027
 4029c54:	2102db04 	addi	r4,r4,2924
 4029c58:	d9002315 	stw	r4,140(sp)
 4029c5c:	003e6306 	br	40295ec <_gp+0xfffeee88>
 4029c60:	b0c00043 	ldbu	r3,1(r22)
 4029c64:	8c400814 	ori	r17,r17,32
 4029c68:	b5800044 	addi	r22,r22,1
 4029c6c:	18c03fcc 	andi	r3,r3,255
 4029c70:	18c0201c 	xori	r3,r3,128
 4029c74:	18ffe004 	addi	r3,r3,-128
 4029c78:	003b9c06 	br	4028aec <_gp+0xfffee388>
 4029c7c:	b809883a 	mov	r4,r23
 4029c80:	da002a15 	stw	r8,168(sp)
 4029c84:	40210c80 	call	40210c8 <strlen>
 4029c88:	1029883a 	mov	r20,r2
 4029c8c:	dd401d83 	ldbu	r21,118(sp)
 4029c90:	df002215 	stw	fp,136(sp)
 4029c94:	0021883a 	mov	r16,zero
 4029c98:	da002a17 	ldw	r8,168(sp)
 4029c9c:	003c3906 	br	4028d84 <_gp+0xfffee620>
 4029ca0:	d9402017 	ldw	r5,128(sp)
 4029ca4:	d9002117 	ldw	r4,132(sp)
 4029ca8:	d9801a04 	addi	r6,sp,104
 4029cac:	40288640 	call	4028864 <__sprint_r.part.0>
 4029cb0:	103e691e 	bne	r2,zero,4029658 <_gp+0xfffeeef4>
 4029cb4:	d9001b17 	ldw	r4,108(sp)
 4029cb8:	d8801c17 	ldw	r2,112(sp)
 4029cbc:	d811883a 	mov	r8,sp
 4029cc0:	21400044 	addi	r5,r4,1
 4029cc4:	003e2e06 	br	4029580 <_gp+0xfffeee1c>
 4029cc8:	010100f4 	movhi	r4,1027
 4029ccc:	2102df04 	addi	r4,r4,2940
 4029cd0:	d9002315 	stw	r4,140(sp)
 4029cd4:	d9001b17 	ldw	r4,108(sp)
 4029cd8:	21000044 	addi	r4,r4,1
 4029cdc:	003c5e06 	br	4028e58 <_gp+0xfffee6f4>
 4029ce0:	002b883a 	mov	r21,zero
 4029ce4:	00800084 	movi	r2,2
 4029ce8:	10803fcc 	andi	r2,r2,255
 4029cec:	01000044 	movi	r4,1
 4029cf0:	11002b26 	beq	r2,r4,4029da0 <___vfiprintf_internal_r+0x1428>
 4029cf4:	01000084 	movi	r4,2
 4029cf8:	11002b1e 	bne	r2,r4,4029da8 <___vfiprintf_internal_r+0x1430>
 4029cfc:	1823883a 	mov	r17,r3
 4029d00:	003ee506 	br	4029898 <_gp+0xfffef134>
 4029d04:	8807883a 	mov	r3,r17
 4029d08:	00800044 	movi	r2,1
 4029d0c:	003ff606 	br	4029ce8 <_gp+0xfffef584>
 4029d10:	00800184 	movi	r2,6
 4029d14:	1400012e 	bgeu	r2,r16,4029d1c <___vfiprintf_internal_r+0x13a4>
 4029d18:	1021883a 	mov	r16,r2
 4029d1c:	8029883a 	mov	r20,r16
 4029d20:	8027883a 	mov	r19,r16
 4029d24:	80002216 	blt	r16,zero,4029db0 <___vfiprintf_internal_r+0x1438>
 4029d28:	05c100f4 	movhi	r23,1027
 4029d2c:	df002215 	stw	fp,136(sp)
 4029d30:	bdc27f04 	addi	r23,r23,2556
 4029d34:	003cfb06 	br	4029124 <_gp+0xfffee9c0>
 4029d38:	d9002217 	ldw	r4,136(sp)
 4029d3c:	d9402417 	ldw	r5,144(sp)
 4029d40:	20800017 	ldw	r2,0(r4)
 4029d44:	21000104 	addi	r4,r4,4
 4029d48:	d9002215 	stw	r4,136(sp)
 4029d4c:	11400015 	stw	r5,0(r2)
 4029d50:	003b3d06 	br	4028a48 <_gp+0xfffee2e4>
 4029d54:	014100f4 	movhi	r5,1027
 4029d58:	2942df04 	addi	r5,r5,2940
 4029d5c:	d9402315 	stw	r5,140(sp)
 4029d60:	d9401b17 	ldw	r5,108(sp)
 4029d64:	29400044 	addi	r5,r5,1
 4029d68:	003e6d06 	br	4029720 <_gp+0xfffeefbc>
 4029d6c:	8029883a 	mov	r20,r16
 4029d70:	dd401d83 	ldbu	r21,118(sp)
 4029d74:	df002215 	stw	fp,136(sp)
 4029d78:	0021883a 	mov	r16,zero
 4029d7c:	003c0106 	br	4028d84 <_gp+0xfffee620>
 4029d80:	00c100f4 	movhi	r3,1027
 4029d84:	18c2db04 	addi	r3,r3,2924
 4029d88:	d8c02315 	stw	r3,140(sp)
 4029d8c:	280d883a 	mov	r6,r5
 4029d90:	003c6906 	br	4028f38 <_gp+0xfffee7d4>
 4029d94:	802d883a 	mov	r22,r16
 4029d98:	0021883a 	mov	r16,zero
 4029d9c:	003b5406 	br	4028af0 <_gp+0xfffee38c>
 4029da0:	1823883a 	mov	r17,r3
 4029da4:	003cf306 	br	4029174 <_gp+0xfffeea10>
 4029da8:	1823883a 	mov	r17,r3
 4029dac:	003cad06 	br	4029064 <_gp+0xfffee900>
 4029db0:	0027883a 	mov	r19,zero
 4029db4:	003fdc06 	br	4029d28 <_gp+0xfffef5c4>
 4029db8:	d9402217 	ldw	r5,136(sp)
 4029dbc:	8005883a 	mov	r2,r16
 4029dc0:	b0c00043 	ldbu	r3,1(r22)
 4029dc4:	2c000017 	ldw	r16,0(r5)
 4029dc8:	29000104 	addi	r4,r5,4
 4029dcc:	d9002215 	stw	r4,136(sp)
 4029dd0:	102d883a 	mov	r22,r2
 4029dd4:	803fa50e 	bge	r16,zero,4029c6c <_gp+0xfffef508>
 4029dd8:	18c03fcc 	andi	r3,r3,255
 4029ddc:	18c0201c 	xori	r3,r3,128
 4029de0:	043fffc4 	movi	r16,-1
 4029de4:	18ffe004 	addi	r3,r3,-128
 4029de8:	003b4006 	br	4028aec <_gp+0xfffee388>
 4029dec:	d9402303 	ldbu	r5,140(sp)
 4029df0:	d9401d85 	stb	r5,118(sp)
 4029df4:	003cae06 	br	40290b0 <_gp+0xfffee94c>
 4029df8:	d8c02303 	ldbu	r3,140(sp)
 4029dfc:	d8c01d85 	stb	r3,118(sp)
 4029e00:	003d1406 	br	4029254 <_gp+0xfffeeaf0>
 4029e04:	d8c02303 	ldbu	r3,140(sp)
 4029e08:	d8c01d85 	stb	r3,118(sp)
 4029e0c:	003cca06 	br	4029138 <_gp+0xfffee9d4>
 4029e10:	8880004c 	andi	r2,r17,1
 4029e14:	002b883a 	mov	r21,zero
 4029e18:	10000526 	beq	r2,zero,4029e30 <___vfiprintf_internal_r+0x14b8>
 4029e1c:	00800c04 	movi	r2,48
 4029e20:	d88019c5 	stb	r2,103(sp)
 4029e24:	dd002817 	ldw	r20,160(sp)
 4029e28:	ddc019c4 	addi	r23,sp,103
 4029e2c:	003bd506 	br	4028d84 <_gp+0xfffee620>
 4029e30:	0029883a 	mov	r20,zero
 4029e34:	ddc01a04 	addi	r23,sp,104
 4029e38:	003bd206 	br	4028d84 <_gp+0xfffee620>
 4029e3c:	d9002303 	ldbu	r4,140(sp)
 4029e40:	d9001d85 	stb	r4,118(sp)
 4029e44:	003da606 	br	40294e0 <_gp+0xfffeed7c>
 4029e48:	d8c02303 	ldbu	r3,140(sp)
 4029e4c:	d8c01d85 	stb	r3,118(sp)
 4029e50:	003c7606 	br	402902c <_gp+0xfffee8c8>
 4029e54:	d8c02303 	ldbu	r3,140(sp)
 4029e58:	d8c01d85 	stb	r3,118(sp)
 4029e5c:	003c6506 	br	4028ff4 <_gp+0xfffee890>
 4029e60:	d9002303 	ldbu	r4,140(sp)
 4029e64:	d9001d85 	stb	r4,118(sp)
 4029e68:	003d3d06 	br	4029360 <_gp+0xfffeebfc>
 4029e6c:	d8c02303 	ldbu	r3,140(sp)
 4029e70:	d8c01d85 	stb	r3,118(sp)
 4029e74:	003d1d06 	br	40292ec <_gp+0xfffeeb88>
 4029e78:	d8c02303 	ldbu	r3,140(sp)
 4029e7c:	d8c01d85 	stb	r3,118(sp)
 4029e80:	003d0306 	br	4029290 <_gp+0xfffeeb2c>

04029e84 <__vfiprintf_internal>:
 4029e84:	008100f4 	movhi	r2,1027
 4029e88:	1089da04 	addi	r2,r2,10088
 4029e8c:	300f883a 	mov	r7,r6
 4029e90:	280d883a 	mov	r6,r5
 4029e94:	200b883a 	mov	r5,r4
 4029e98:	11000017 	ldw	r4,0(r2)
 4029e9c:	40289781 	jmpi	4028978 <___vfiprintf_internal_r>

04029ea0 <__sbprintf>:
 4029ea0:	2880030b 	ldhu	r2,12(r5)
 4029ea4:	2ac01917 	ldw	r11,100(r5)
 4029ea8:	2a80038b 	ldhu	r10,14(r5)
 4029eac:	2a400717 	ldw	r9,28(r5)
 4029eb0:	2a000917 	ldw	r8,36(r5)
 4029eb4:	defee204 	addi	sp,sp,-1144
 4029eb8:	00c10004 	movi	r3,1024
 4029ebc:	dc011a15 	stw	r16,1128(sp)
 4029ec0:	10bfff4c 	andi	r2,r2,65533
 4029ec4:	2821883a 	mov	r16,r5
 4029ec8:	d8cb883a 	add	r5,sp,r3
 4029ecc:	dc811c15 	stw	r18,1136(sp)
 4029ed0:	dc411b15 	stw	r17,1132(sp)
 4029ed4:	dfc11d15 	stw	ra,1140(sp)
 4029ed8:	2025883a 	mov	r18,r4
 4029edc:	d881030d 	sth	r2,1036(sp)
 4029ee0:	dac11915 	stw	r11,1124(sp)
 4029ee4:	da81038d 	sth	r10,1038(sp)
 4029ee8:	da410715 	stw	r9,1052(sp)
 4029eec:	da010915 	stw	r8,1060(sp)
 4029ef0:	dec10015 	stw	sp,1024(sp)
 4029ef4:	dec10415 	stw	sp,1040(sp)
 4029ef8:	d8c10215 	stw	r3,1032(sp)
 4029efc:	d8c10515 	stw	r3,1044(sp)
 4029f00:	d8010615 	stw	zero,1048(sp)
 4029f04:	40289780 	call	4028978 <___vfiprintf_internal_r>
 4029f08:	1023883a 	mov	r17,r2
 4029f0c:	10000416 	blt	r2,zero,4029f20 <__sbprintf+0x80>
 4029f10:	d9410004 	addi	r5,sp,1024
 4029f14:	9009883a 	mov	r4,r18
 4029f18:	40251340 	call	4025134 <_fflush_r>
 4029f1c:	10000d1e 	bne	r2,zero,4029f54 <__sbprintf+0xb4>
 4029f20:	d881030b 	ldhu	r2,1036(sp)
 4029f24:	1080100c 	andi	r2,r2,64
 4029f28:	10000326 	beq	r2,zero,4029f38 <__sbprintf+0x98>
 4029f2c:	8080030b 	ldhu	r2,12(r16)
 4029f30:	10801014 	ori	r2,r2,64
 4029f34:	8080030d 	sth	r2,12(r16)
 4029f38:	8805883a 	mov	r2,r17
 4029f3c:	dfc11d17 	ldw	ra,1140(sp)
 4029f40:	dc811c17 	ldw	r18,1136(sp)
 4029f44:	dc411b17 	ldw	r17,1132(sp)
 4029f48:	dc011a17 	ldw	r16,1128(sp)
 4029f4c:	dec11e04 	addi	sp,sp,1144
 4029f50:	f800283a 	ret
 4029f54:	047fffc4 	movi	r17,-1
 4029f58:	003ff106 	br	4029f20 <_gp+0xfffef7bc>

04029f5c <__swbuf_r>:
 4029f5c:	defffb04 	addi	sp,sp,-20
 4029f60:	dcc00315 	stw	r19,12(sp)
 4029f64:	dc800215 	stw	r18,8(sp)
 4029f68:	dc000015 	stw	r16,0(sp)
 4029f6c:	dfc00415 	stw	ra,16(sp)
 4029f70:	dc400115 	stw	r17,4(sp)
 4029f74:	2025883a 	mov	r18,r4
 4029f78:	2827883a 	mov	r19,r5
 4029f7c:	3021883a 	mov	r16,r6
 4029f80:	20000226 	beq	r4,zero,4029f8c <__swbuf_r+0x30>
 4029f84:	20800e17 	ldw	r2,56(r4)
 4029f88:	10004226 	beq	r2,zero,402a094 <__swbuf_r+0x138>
 4029f8c:	80800617 	ldw	r2,24(r16)
 4029f90:	8100030b 	ldhu	r4,12(r16)
 4029f94:	80800215 	stw	r2,8(r16)
 4029f98:	2080020c 	andi	r2,r4,8
 4029f9c:	10003626 	beq	r2,zero,402a078 <__swbuf_r+0x11c>
 4029fa0:	80c00417 	ldw	r3,16(r16)
 4029fa4:	18003426 	beq	r3,zero,402a078 <__swbuf_r+0x11c>
 4029fa8:	2088000c 	andi	r2,r4,8192
 4029fac:	9c403fcc 	andi	r17,r19,255
 4029fb0:	10001a26 	beq	r2,zero,402a01c <__swbuf_r+0xc0>
 4029fb4:	80800017 	ldw	r2,0(r16)
 4029fb8:	81000517 	ldw	r4,20(r16)
 4029fbc:	10c7c83a 	sub	r3,r2,r3
 4029fc0:	1900200e 	bge	r3,r4,402a044 <__swbuf_r+0xe8>
 4029fc4:	18c00044 	addi	r3,r3,1
 4029fc8:	81000217 	ldw	r4,8(r16)
 4029fcc:	11400044 	addi	r5,r2,1
 4029fd0:	81400015 	stw	r5,0(r16)
 4029fd4:	213fffc4 	addi	r4,r4,-1
 4029fd8:	81000215 	stw	r4,8(r16)
 4029fdc:	14c00005 	stb	r19,0(r2)
 4029fe0:	80800517 	ldw	r2,20(r16)
 4029fe4:	10c01e26 	beq	r2,r3,402a060 <__swbuf_r+0x104>
 4029fe8:	8080030b 	ldhu	r2,12(r16)
 4029fec:	1080004c 	andi	r2,r2,1
 4029ff0:	10000226 	beq	r2,zero,4029ffc <__swbuf_r+0xa0>
 4029ff4:	00800284 	movi	r2,10
 4029ff8:	88801926 	beq	r17,r2,402a060 <__swbuf_r+0x104>
 4029ffc:	8805883a 	mov	r2,r17
 402a000:	dfc00417 	ldw	ra,16(sp)
 402a004:	dcc00317 	ldw	r19,12(sp)
 402a008:	dc800217 	ldw	r18,8(sp)
 402a00c:	dc400117 	ldw	r17,4(sp)
 402a010:	dc000017 	ldw	r16,0(sp)
 402a014:	dec00504 	addi	sp,sp,20
 402a018:	f800283a 	ret
 402a01c:	81401917 	ldw	r5,100(r16)
 402a020:	00b7ffc4 	movi	r2,-8193
 402a024:	21080014 	ori	r4,r4,8192
 402a028:	2884703a 	and	r2,r5,r2
 402a02c:	80801915 	stw	r2,100(r16)
 402a030:	80800017 	ldw	r2,0(r16)
 402a034:	8100030d 	sth	r4,12(r16)
 402a038:	81000517 	ldw	r4,20(r16)
 402a03c:	10c7c83a 	sub	r3,r2,r3
 402a040:	193fe016 	blt	r3,r4,4029fc4 <_gp+0xfffef860>
 402a044:	800b883a 	mov	r5,r16
 402a048:	9009883a 	mov	r4,r18
 402a04c:	40251340 	call	4025134 <_fflush_r>
 402a050:	1000071e 	bne	r2,zero,402a070 <__swbuf_r+0x114>
 402a054:	80800017 	ldw	r2,0(r16)
 402a058:	00c00044 	movi	r3,1
 402a05c:	003fda06 	br	4029fc8 <_gp+0xfffef864>
 402a060:	800b883a 	mov	r5,r16
 402a064:	9009883a 	mov	r4,r18
 402a068:	40251340 	call	4025134 <_fflush_r>
 402a06c:	103fe326 	beq	r2,zero,4029ffc <_gp+0xfffef898>
 402a070:	00bfffc4 	movi	r2,-1
 402a074:	003fe206 	br	402a000 <_gp+0xfffef89c>
 402a078:	800b883a 	mov	r5,r16
 402a07c:	9009883a 	mov	r4,r18
 402a080:	40235140 	call	4023514 <__swsetup_r>
 402a084:	103ffa1e 	bne	r2,zero,402a070 <_gp+0xfffef90c>
 402a088:	8100030b 	ldhu	r4,12(r16)
 402a08c:	80c00417 	ldw	r3,16(r16)
 402a090:	003fc506 	br	4029fa8 <_gp+0xfffef844>
 402a094:	40255200 	call	4025520 <__sinit>
 402a098:	003fbc06 	br	4029f8c <_gp+0xfffef828>

0402a09c <__swbuf>:
 402a09c:	008100f4 	movhi	r2,1027
 402a0a0:	1089da04 	addi	r2,r2,10088
 402a0a4:	280d883a 	mov	r6,r5
 402a0a8:	200b883a 	mov	r5,r4
 402a0ac:	11000017 	ldw	r4,0(r2)
 402a0b0:	4029f5c1 	jmpi	4029f5c <__swbuf_r>

0402a0b4 <_write_r>:
 402a0b4:	defffd04 	addi	sp,sp,-12
 402a0b8:	2805883a 	mov	r2,r5
 402a0bc:	dc000015 	stw	r16,0(sp)
 402a0c0:	040100f4 	movhi	r16,1027
 402a0c4:	dc400115 	stw	r17,4(sp)
 402a0c8:	300b883a 	mov	r5,r6
 402a0cc:	8410aa04 	addi	r16,r16,17064
 402a0d0:	2023883a 	mov	r17,r4
 402a0d4:	380d883a 	mov	r6,r7
 402a0d8:	1009883a 	mov	r4,r2
 402a0dc:	dfc00215 	stw	ra,8(sp)
 402a0e0:	80000015 	stw	zero,0(r16)
 402a0e4:	402e9180 	call	402e918 <write>
 402a0e8:	00ffffc4 	movi	r3,-1
 402a0ec:	10c00526 	beq	r2,r3,402a104 <_write_r+0x50>
 402a0f0:	dfc00217 	ldw	ra,8(sp)
 402a0f4:	dc400117 	ldw	r17,4(sp)
 402a0f8:	dc000017 	ldw	r16,0(sp)
 402a0fc:	dec00304 	addi	sp,sp,12
 402a100:	f800283a 	ret
 402a104:	80c00017 	ldw	r3,0(r16)
 402a108:	183ff926 	beq	r3,zero,402a0f0 <_gp+0xfffef98c>
 402a10c:	88c00015 	stw	r3,0(r17)
 402a110:	003ff706 	br	402a0f0 <_gp+0xfffef98c>

0402a114 <_close_r>:
 402a114:	defffd04 	addi	sp,sp,-12
 402a118:	dc000015 	stw	r16,0(sp)
 402a11c:	040100f4 	movhi	r16,1027
 402a120:	dc400115 	stw	r17,4(sp)
 402a124:	8410aa04 	addi	r16,r16,17064
 402a128:	2023883a 	mov	r17,r4
 402a12c:	2809883a 	mov	r4,r5
 402a130:	dfc00215 	stw	ra,8(sp)
 402a134:	80000015 	stw	zero,0(r16)
 402a138:	402de680 	call	402de68 <close>
 402a13c:	00ffffc4 	movi	r3,-1
 402a140:	10c00526 	beq	r2,r3,402a158 <_close_r+0x44>
 402a144:	dfc00217 	ldw	ra,8(sp)
 402a148:	dc400117 	ldw	r17,4(sp)
 402a14c:	dc000017 	ldw	r16,0(sp)
 402a150:	dec00304 	addi	sp,sp,12
 402a154:	f800283a 	ret
 402a158:	80c00017 	ldw	r3,0(r16)
 402a15c:	183ff926 	beq	r3,zero,402a144 <_gp+0xfffef9e0>
 402a160:	88c00015 	stw	r3,0(r17)
 402a164:	003ff706 	br	402a144 <_gp+0xfffef9e0>

0402a168 <_calloc_r>:
 402a168:	defffe04 	addi	sp,sp,-8
 402a16c:	2805883a 	mov	r2,r5
 402a170:	dc000015 	stw	r16,0(sp)
 402a174:	300b883a 	mov	r5,r6
 402a178:	2021883a 	mov	r16,r4
 402a17c:	1009883a 	mov	r4,r2
 402a180:	dfc00115 	stw	ra,4(sp)
 402a184:	4020d7c0 	call	4020d7c <__mulsi3>
 402a188:	100b883a 	mov	r5,r2
 402a18c:	8009883a 	mov	r4,r16
 402a190:	402628c0 	call	402628c <_malloc_r>
 402a194:	10002926 	beq	r2,zero,402a23c <_calloc_r+0xd4>
 402a198:	11bfff17 	ldw	r6,-4(r2)
 402a19c:	1021883a 	mov	r16,r2
 402a1a0:	00bfff04 	movi	r2,-4
 402a1a4:	308c703a 	and	r6,r6,r2
 402a1a8:	00c00904 	movi	r3,36
 402a1ac:	308d883a 	add	r6,r6,r2
 402a1b0:	19801636 	bltu	r3,r6,402a20c <_calloc_r+0xa4>
 402a1b4:	008004c4 	movi	r2,19
 402a1b8:	11800b2e 	bgeu	r2,r6,402a1e8 <_calloc_r+0x80>
 402a1bc:	80000015 	stw	zero,0(r16)
 402a1c0:	80000115 	stw	zero,4(r16)
 402a1c4:	008006c4 	movi	r2,27
 402a1c8:	11801a2e 	bgeu	r2,r6,402a234 <_calloc_r+0xcc>
 402a1cc:	80000215 	stw	zero,8(r16)
 402a1d0:	80000315 	stw	zero,12(r16)
 402a1d4:	30c0151e 	bne	r6,r3,402a22c <_calloc_r+0xc4>
 402a1d8:	80000415 	stw	zero,16(r16)
 402a1dc:	80800604 	addi	r2,r16,24
 402a1e0:	80000515 	stw	zero,20(r16)
 402a1e4:	00000106 	br	402a1ec <_calloc_r+0x84>
 402a1e8:	8005883a 	mov	r2,r16
 402a1ec:	10000015 	stw	zero,0(r2)
 402a1f0:	10000115 	stw	zero,4(r2)
 402a1f4:	10000215 	stw	zero,8(r2)
 402a1f8:	8005883a 	mov	r2,r16
 402a1fc:	dfc00117 	ldw	ra,4(sp)
 402a200:	dc000017 	ldw	r16,0(sp)
 402a204:	dec00204 	addi	sp,sp,8
 402a208:	f800283a 	ret
 402a20c:	000b883a 	mov	r5,zero
 402a210:	8009883a 	mov	r4,r16
 402a214:	4026cd80 	call	4026cd8 <memset>
 402a218:	8005883a 	mov	r2,r16
 402a21c:	dfc00117 	ldw	ra,4(sp)
 402a220:	dc000017 	ldw	r16,0(sp)
 402a224:	dec00204 	addi	sp,sp,8
 402a228:	f800283a 	ret
 402a22c:	80800404 	addi	r2,r16,16
 402a230:	003fee06 	br	402a1ec <_gp+0xfffefa88>
 402a234:	80800204 	addi	r2,r16,8
 402a238:	003fec06 	br	402a1ec <_gp+0xfffefa88>
 402a23c:	0005883a 	mov	r2,zero
 402a240:	003fee06 	br	402a1fc <_gp+0xfffefa98>

0402a244 <_fclose_r>:
 402a244:	28003926 	beq	r5,zero,402a32c <_fclose_r+0xe8>
 402a248:	defffc04 	addi	sp,sp,-16
 402a24c:	dc400115 	stw	r17,4(sp)
 402a250:	dc000015 	stw	r16,0(sp)
 402a254:	dfc00315 	stw	ra,12(sp)
 402a258:	dc800215 	stw	r18,8(sp)
 402a25c:	2023883a 	mov	r17,r4
 402a260:	2821883a 	mov	r16,r5
 402a264:	20000226 	beq	r4,zero,402a270 <_fclose_r+0x2c>
 402a268:	20800e17 	ldw	r2,56(r4)
 402a26c:	10002726 	beq	r2,zero,402a30c <_fclose_r+0xc8>
 402a270:	8080030f 	ldh	r2,12(r16)
 402a274:	1000071e 	bne	r2,zero,402a294 <_fclose_r+0x50>
 402a278:	0005883a 	mov	r2,zero
 402a27c:	dfc00317 	ldw	ra,12(sp)
 402a280:	dc800217 	ldw	r18,8(sp)
 402a284:	dc400117 	ldw	r17,4(sp)
 402a288:	dc000017 	ldw	r16,0(sp)
 402a28c:	dec00404 	addi	sp,sp,16
 402a290:	f800283a 	ret
 402a294:	800b883a 	mov	r5,r16
 402a298:	8809883a 	mov	r4,r17
 402a29c:	4024f180 	call	4024f18 <__sflush_r>
 402a2a0:	1025883a 	mov	r18,r2
 402a2a4:	80800b17 	ldw	r2,44(r16)
 402a2a8:	10000426 	beq	r2,zero,402a2bc <_fclose_r+0x78>
 402a2ac:	81400717 	ldw	r5,28(r16)
 402a2b0:	8809883a 	mov	r4,r17
 402a2b4:	103ee83a 	callr	r2
 402a2b8:	10001616 	blt	r2,zero,402a314 <_fclose_r+0xd0>
 402a2bc:	8080030b 	ldhu	r2,12(r16)
 402a2c0:	1080200c 	andi	r2,r2,128
 402a2c4:	1000151e 	bne	r2,zero,402a31c <_fclose_r+0xd8>
 402a2c8:	81400c17 	ldw	r5,48(r16)
 402a2cc:	28000526 	beq	r5,zero,402a2e4 <_fclose_r+0xa0>
 402a2d0:	80801004 	addi	r2,r16,64
 402a2d4:	28800226 	beq	r5,r2,402a2e0 <_fclose_r+0x9c>
 402a2d8:	8809883a 	mov	r4,r17
 402a2dc:	40256940 	call	4025694 <_free_r>
 402a2e0:	80000c15 	stw	zero,48(r16)
 402a2e4:	81401117 	ldw	r5,68(r16)
 402a2e8:	28000326 	beq	r5,zero,402a2f8 <_fclose_r+0xb4>
 402a2ec:	8809883a 	mov	r4,r17
 402a2f0:	40256940 	call	4025694 <_free_r>
 402a2f4:	80001115 	stw	zero,68(r16)
 402a2f8:	40255300 	call	4025530 <__sfp_lock_acquire>
 402a2fc:	8000030d 	sth	zero,12(r16)
 402a300:	40255340 	call	4025534 <__sfp_lock_release>
 402a304:	9005883a 	mov	r2,r18
 402a308:	003fdc06 	br	402a27c <_gp+0xfffefb18>
 402a30c:	40255200 	call	4025520 <__sinit>
 402a310:	003fd706 	br	402a270 <_gp+0xfffefb0c>
 402a314:	04bfffc4 	movi	r18,-1
 402a318:	003fe806 	br	402a2bc <_gp+0xfffefb58>
 402a31c:	81400417 	ldw	r5,16(r16)
 402a320:	8809883a 	mov	r4,r17
 402a324:	40256940 	call	4025694 <_free_r>
 402a328:	003fe706 	br	402a2c8 <_gp+0xfffefb64>
 402a32c:	0005883a 	mov	r2,zero
 402a330:	f800283a 	ret

0402a334 <fclose>:
 402a334:	008100f4 	movhi	r2,1027
 402a338:	1089da04 	addi	r2,r2,10088
 402a33c:	200b883a 	mov	r5,r4
 402a340:	11000017 	ldw	r4,0(r2)
 402a344:	402a2441 	jmpi	402a244 <_fclose_r>

0402a348 <__fputwc>:
 402a348:	defff804 	addi	sp,sp,-32
 402a34c:	dcc00415 	stw	r19,16(sp)
 402a350:	dc800315 	stw	r18,12(sp)
 402a354:	dc000115 	stw	r16,4(sp)
 402a358:	dfc00715 	stw	ra,28(sp)
 402a35c:	dd400615 	stw	r21,24(sp)
 402a360:	dd000515 	stw	r20,20(sp)
 402a364:	dc400215 	stw	r17,8(sp)
 402a368:	2027883a 	mov	r19,r4
 402a36c:	2825883a 	mov	r18,r5
 402a370:	3021883a 	mov	r16,r6
 402a374:	402607c0 	call	402607c <__locale_mb_cur_max>
 402a378:	00c00044 	movi	r3,1
 402a37c:	10c03e26 	beq	r2,r3,402a478 <__fputwc+0x130>
 402a380:	81c01704 	addi	r7,r16,92
 402a384:	900d883a 	mov	r6,r18
 402a388:	d80b883a 	mov	r5,sp
 402a38c:	9809883a 	mov	r4,r19
 402a390:	402a6c00 	call	402a6c0 <_wcrtomb_r>
 402a394:	1029883a 	mov	r20,r2
 402a398:	00bfffc4 	movi	r2,-1
 402a39c:	a0802026 	beq	r20,r2,402a420 <__fputwc+0xd8>
 402a3a0:	d9400003 	ldbu	r5,0(sp)
 402a3a4:	a0001c26 	beq	r20,zero,402a418 <__fputwc+0xd0>
 402a3a8:	0023883a 	mov	r17,zero
 402a3ac:	05400284 	movi	r21,10
 402a3b0:	00000906 	br	402a3d8 <__fputwc+0x90>
 402a3b4:	80800017 	ldw	r2,0(r16)
 402a3b8:	11400005 	stb	r5,0(r2)
 402a3bc:	80c00017 	ldw	r3,0(r16)
 402a3c0:	18c00044 	addi	r3,r3,1
 402a3c4:	80c00015 	stw	r3,0(r16)
 402a3c8:	8c400044 	addi	r17,r17,1
 402a3cc:	dc45883a 	add	r2,sp,r17
 402a3d0:	8d00112e 	bgeu	r17,r20,402a418 <__fputwc+0xd0>
 402a3d4:	11400003 	ldbu	r5,0(r2)
 402a3d8:	80c00217 	ldw	r3,8(r16)
 402a3dc:	18ffffc4 	addi	r3,r3,-1
 402a3e0:	80c00215 	stw	r3,8(r16)
 402a3e4:	183ff30e 	bge	r3,zero,402a3b4 <_gp+0xfffefc50>
 402a3e8:	80800617 	ldw	r2,24(r16)
 402a3ec:	18801916 	blt	r3,r2,402a454 <__fputwc+0x10c>
 402a3f0:	80800017 	ldw	r2,0(r16)
 402a3f4:	11400005 	stb	r5,0(r2)
 402a3f8:	80800017 	ldw	r2,0(r16)
 402a3fc:	10c00003 	ldbu	r3,0(r2)
 402a400:	10800044 	addi	r2,r2,1
 402a404:	1d402326 	beq	r3,r21,402a494 <__fputwc+0x14c>
 402a408:	80800015 	stw	r2,0(r16)
 402a40c:	8c400044 	addi	r17,r17,1
 402a410:	dc45883a 	add	r2,sp,r17
 402a414:	8d3fef36 	bltu	r17,r20,402a3d4 <_gp+0xfffefc70>
 402a418:	9005883a 	mov	r2,r18
 402a41c:	00000406 	br	402a430 <__fputwc+0xe8>
 402a420:	80c0030b 	ldhu	r3,12(r16)
 402a424:	a005883a 	mov	r2,r20
 402a428:	18c01014 	ori	r3,r3,64
 402a42c:	80c0030d 	sth	r3,12(r16)
 402a430:	dfc00717 	ldw	ra,28(sp)
 402a434:	dd400617 	ldw	r21,24(sp)
 402a438:	dd000517 	ldw	r20,20(sp)
 402a43c:	dcc00417 	ldw	r19,16(sp)
 402a440:	dc800317 	ldw	r18,12(sp)
 402a444:	dc400217 	ldw	r17,8(sp)
 402a448:	dc000117 	ldw	r16,4(sp)
 402a44c:	dec00804 	addi	sp,sp,32
 402a450:	f800283a 	ret
 402a454:	800d883a 	mov	r6,r16
 402a458:	29403fcc 	andi	r5,r5,255
 402a45c:	9809883a 	mov	r4,r19
 402a460:	4029f5c0 	call	4029f5c <__swbuf_r>
 402a464:	10bfffe0 	cmpeqi	r2,r2,-1
 402a468:	10803fcc 	andi	r2,r2,255
 402a46c:	103fd626 	beq	r2,zero,402a3c8 <_gp+0xfffefc64>
 402a470:	00bfffc4 	movi	r2,-1
 402a474:	003fee06 	br	402a430 <_gp+0xfffefccc>
 402a478:	90ffffc4 	addi	r3,r18,-1
 402a47c:	01003f84 	movi	r4,254
 402a480:	20ffbf36 	bltu	r4,r3,402a380 <_gp+0xfffefc1c>
 402a484:	900b883a 	mov	r5,r18
 402a488:	dc800005 	stb	r18,0(sp)
 402a48c:	1029883a 	mov	r20,r2
 402a490:	003fc506 	br	402a3a8 <_gp+0xfffefc44>
 402a494:	800d883a 	mov	r6,r16
 402a498:	a80b883a 	mov	r5,r21
 402a49c:	9809883a 	mov	r4,r19
 402a4a0:	4029f5c0 	call	4029f5c <__swbuf_r>
 402a4a4:	10bfffe0 	cmpeqi	r2,r2,-1
 402a4a8:	003fef06 	br	402a468 <_gp+0xfffefd04>

0402a4ac <_fputwc_r>:
 402a4ac:	3080030b 	ldhu	r2,12(r6)
 402a4b0:	10c8000c 	andi	r3,r2,8192
 402a4b4:	1800051e 	bne	r3,zero,402a4cc <_fputwc_r+0x20>
 402a4b8:	30c01917 	ldw	r3,100(r6)
 402a4bc:	10880014 	ori	r2,r2,8192
 402a4c0:	3080030d 	sth	r2,12(r6)
 402a4c4:	18880014 	ori	r2,r3,8192
 402a4c8:	30801915 	stw	r2,100(r6)
 402a4cc:	402a3481 	jmpi	402a348 <__fputwc>

0402a4d0 <fputwc>:
 402a4d0:	008100f4 	movhi	r2,1027
 402a4d4:	defffc04 	addi	sp,sp,-16
 402a4d8:	1089da04 	addi	r2,r2,10088
 402a4dc:	dc000115 	stw	r16,4(sp)
 402a4e0:	14000017 	ldw	r16,0(r2)
 402a4e4:	dc400215 	stw	r17,8(sp)
 402a4e8:	dfc00315 	stw	ra,12(sp)
 402a4ec:	2023883a 	mov	r17,r4
 402a4f0:	80000226 	beq	r16,zero,402a4fc <fputwc+0x2c>
 402a4f4:	80800e17 	ldw	r2,56(r16)
 402a4f8:	10001026 	beq	r2,zero,402a53c <fputwc+0x6c>
 402a4fc:	2880030b 	ldhu	r2,12(r5)
 402a500:	10c8000c 	andi	r3,r2,8192
 402a504:	1800051e 	bne	r3,zero,402a51c <fputwc+0x4c>
 402a508:	28c01917 	ldw	r3,100(r5)
 402a50c:	10880014 	ori	r2,r2,8192
 402a510:	2880030d 	sth	r2,12(r5)
 402a514:	18880014 	ori	r2,r3,8192
 402a518:	28801915 	stw	r2,100(r5)
 402a51c:	280d883a 	mov	r6,r5
 402a520:	8009883a 	mov	r4,r16
 402a524:	880b883a 	mov	r5,r17
 402a528:	dfc00317 	ldw	ra,12(sp)
 402a52c:	dc400217 	ldw	r17,8(sp)
 402a530:	dc000117 	ldw	r16,4(sp)
 402a534:	dec00404 	addi	sp,sp,16
 402a538:	402a3481 	jmpi	402a348 <__fputwc>
 402a53c:	8009883a 	mov	r4,r16
 402a540:	d9400015 	stw	r5,0(sp)
 402a544:	40255200 	call	4025520 <__sinit>
 402a548:	d9400017 	ldw	r5,0(sp)
 402a54c:	003feb06 	br	402a4fc <_gp+0xfffefd98>

0402a550 <_fstat_r>:
 402a550:	defffd04 	addi	sp,sp,-12
 402a554:	2805883a 	mov	r2,r5
 402a558:	dc000015 	stw	r16,0(sp)
 402a55c:	040100f4 	movhi	r16,1027
 402a560:	dc400115 	stw	r17,4(sp)
 402a564:	8410aa04 	addi	r16,r16,17064
 402a568:	2023883a 	mov	r17,r4
 402a56c:	300b883a 	mov	r5,r6
 402a570:	1009883a 	mov	r4,r2
 402a574:	dfc00215 	stw	ra,8(sp)
 402a578:	80000015 	stw	zero,0(r16)
 402a57c:	402dfdc0 	call	402dfdc <fstat>
 402a580:	00ffffc4 	movi	r3,-1
 402a584:	10c00526 	beq	r2,r3,402a59c <_fstat_r+0x4c>
 402a588:	dfc00217 	ldw	ra,8(sp)
 402a58c:	dc400117 	ldw	r17,4(sp)
 402a590:	dc000017 	ldw	r16,0(sp)
 402a594:	dec00304 	addi	sp,sp,12
 402a598:	f800283a 	ret
 402a59c:	80c00017 	ldw	r3,0(r16)
 402a5a0:	183ff926 	beq	r3,zero,402a588 <_gp+0xfffefe24>
 402a5a4:	88c00015 	stw	r3,0(r17)
 402a5a8:	003ff706 	br	402a588 <_gp+0xfffefe24>

0402a5ac <_isatty_r>:
 402a5ac:	defffd04 	addi	sp,sp,-12
 402a5b0:	dc000015 	stw	r16,0(sp)
 402a5b4:	040100f4 	movhi	r16,1027
 402a5b8:	dc400115 	stw	r17,4(sp)
 402a5bc:	8410aa04 	addi	r16,r16,17064
 402a5c0:	2023883a 	mov	r17,r4
 402a5c4:	2809883a 	mov	r4,r5
 402a5c8:	dfc00215 	stw	ra,8(sp)
 402a5cc:	80000015 	stw	zero,0(r16)
 402a5d0:	402e0e40 	call	402e0e4 <isatty>
 402a5d4:	00ffffc4 	movi	r3,-1
 402a5d8:	10c00526 	beq	r2,r3,402a5f0 <_isatty_r+0x44>
 402a5dc:	dfc00217 	ldw	ra,8(sp)
 402a5e0:	dc400117 	ldw	r17,4(sp)
 402a5e4:	dc000017 	ldw	r16,0(sp)
 402a5e8:	dec00304 	addi	sp,sp,12
 402a5ec:	f800283a 	ret
 402a5f0:	80c00017 	ldw	r3,0(r16)
 402a5f4:	183ff926 	beq	r3,zero,402a5dc <_gp+0xfffefe78>
 402a5f8:	88c00015 	stw	r3,0(r17)
 402a5fc:	003ff706 	br	402a5dc <_gp+0xfffefe78>

0402a600 <_lseek_r>:
 402a600:	defffd04 	addi	sp,sp,-12
 402a604:	2805883a 	mov	r2,r5
 402a608:	dc000015 	stw	r16,0(sp)
 402a60c:	040100f4 	movhi	r16,1027
 402a610:	dc400115 	stw	r17,4(sp)
 402a614:	300b883a 	mov	r5,r6
 402a618:	8410aa04 	addi	r16,r16,17064
 402a61c:	2023883a 	mov	r17,r4
 402a620:	380d883a 	mov	r6,r7
 402a624:	1009883a 	mov	r4,r2
 402a628:	dfc00215 	stw	ra,8(sp)
 402a62c:	80000015 	stw	zero,0(r16)
 402a630:	402e2cc0 	call	402e2cc <lseek>
 402a634:	00ffffc4 	movi	r3,-1
 402a638:	10c00526 	beq	r2,r3,402a650 <_lseek_r+0x50>
 402a63c:	dfc00217 	ldw	ra,8(sp)
 402a640:	dc400117 	ldw	r17,4(sp)
 402a644:	dc000017 	ldw	r16,0(sp)
 402a648:	dec00304 	addi	sp,sp,12
 402a64c:	f800283a 	ret
 402a650:	80c00017 	ldw	r3,0(r16)
 402a654:	183ff926 	beq	r3,zero,402a63c <_gp+0xfffefed8>
 402a658:	88c00015 	stw	r3,0(r17)
 402a65c:	003ff706 	br	402a63c <_gp+0xfffefed8>

0402a660 <_read_r>:
 402a660:	defffd04 	addi	sp,sp,-12
 402a664:	2805883a 	mov	r2,r5
 402a668:	dc000015 	stw	r16,0(sp)
 402a66c:	040100f4 	movhi	r16,1027
 402a670:	dc400115 	stw	r17,4(sp)
 402a674:	300b883a 	mov	r5,r6
 402a678:	8410aa04 	addi	r16,r16,17064
 402a67c:	2023883a 	mov	r17,r4
 402a680:	380d883a 	mov	r6,r7
 402a684:	1009883a 	mov	r4,r2
 402a688:	dfc00215 	stw	ra,8(sp)
 402a68c:	80000015 	stw	zero,0(r16)
 402a690:	402e4bc0 	call	402e4bc <read>
 402a694:	00ffffc4 	movi	r3,-1
 402a698:	10c00526 	beq	r2,r3,402a6b0 <_read_r+0x50>
 402a69c:	dfc00217 	ldw	ra,8(sp)
 402a6a0:	dc400117 	ldw	r17,4(sp)
 402a6a4:	dc000017 	ldw	r16,0(sp)
 402a6a8:	dec00304 	addi	sp,sp,12
 402a6ac:	f800283a 	ret
 402a6b0:	80c00017 	ldw	r3,0(r16)
 402a6b4:	183ff926 	beq	r3,zero,402a69c <_gp+0xfffeff38>
 402a6b8:	88c00015 	stw	r3,0(r17)
 402a6bc:	003ff706 	br	402a69c <_gp+0xfffeff38>

0402a6c0 <_wcrtomb_r>:
 402a6c0:	defff604 	addi	sp,sp,-40
 402a6c4:	008100f4 	movhi	r2,1027
 402a6c8:	dc800815 	stw	r18,32(sp)
 402a6cc:	dc400715 	stw	r17,28(sp)
 402a6d0:	dc000615 	stw	r16,24(sp)
 402a6d4:	1089de04 	addi	r2,r2,10104
 402a6d8:	dfc00915 	stw	ra,36(sp)
 402a6dc:	2021883a 	mov	r16,r4
 402a6e0:	3823883a 	mov	r17,r7
 402a6e4:	14800017 	ldw	r18,0(r2)
 402a6e8:	28001426 	beq	r5,zero,402a73c <_wcrtomb_r+0x7c>
 402a6ec:	d9400415 	stw	r5,16(sp)
 402a6f0:	d9800515 	stw	r6,20(sp)
 402a6f4:	40260700 	call	4026070 <__locale_charset>
 402a6f8:	d9800517 	ldw	r6,20(sp)
 402a6fc:	d9400417 	ldw	r5,16(sp)
 402a700:	100f883a 	mov	r7,r2
 402a704:	dc400015 	stw	r17,0(sp)
 402a708:	8009883a 	mov	r4,r16
 402a70c:	903ee83a 	callr	r18
 402a710:	00ffffc4 	movi	r3,-1
 402a714:	10c0031e 	bne	r2,r3,402a724 <_wcrtomb_r+0x64>
 402a718:	88000015 	stw	zero,0(r17)
 402a71c:	00c02284 	movi	r3,138
 402a720:	80c00015 	stw	r3,0(r16)
 402a724:	dfc00917 	ldw	ra,36(sp)
 402a728:	dc800817 	ldw	r18,32(sp)
 402a72c:	dc400717 	ldw	r17,28(sp)
 402a730:	dc000617 	ldw	r16,24(sp)
 402a734:	dec00a04 	addi	sp,sp,40
 402a738:	f800283a 	ret
 402a73c:	40260700 	call	4026070 <__locale_charset>
 402a740:	100f883a 	mov	r7,r2
 402a744:	dc400015 	stw	r17,0(sp)
 402a748:	000d883a 	mov	r6,zero
 402a74c:	d9400104 	addi	r5,sp,4
 402a750:	8009883a 	mov	r4,r16
 402a754:	903ee83a 	callr	r18
 402a758:	003fed06 	br	402a710 <_gp+0xfffeffac>

0402a75c <wcrtomb>:
 402a75c:	defff604 	addi	sp,sp,-40
 402a760:	008100f4 	movhi	r2,1027
 402a764:	dc800615 	stw	r18,24(sp)
 402a768:	dc400515 	stw	r17,20(sp)
 402a76c:	1089da04 	addi	r2,r2,10088
 402a770:	dfc00915 	stw	ra,36(sp)
 402a774:	dd000815 	stw	r20,32(sp)
 402a778:	dcc00715 	stw	r19,28(sp)
 402a77c:	dc000415 	stw	r16,16(sp)
 402a780:	3025883a 	mov	r18,r6
 402a784:	14400017 	ldw	r17,0(r2)
 402a788:	20001926 	beq	r4,zero,402a7f0 <wcrtomb+0x94>
 402a78c:	008100f4 	movhi	r2,1027
 402a790:	1089de04 	addi	r2,r2,10104
 402a794:	15000017 	ldw	r20,0(r2)
 402a798:	2021883a 	mov	r16,r4
 402a79c:	2827883a 	mov	r19,r5
 402a7a0:	40260700 	call	4026070 <__locale_charset>
 402a7a4:	100f883a 	mov	r7,r2
 402a7a8:	dc800015 	stw	r18,0(sp)
 402a7ac:	980d883a 	mov	r6,r19
 402a7b0:	800b883a 	mov	r5,r16
 402a7b4:	8809883a 	mov	r4,r17
 402a7b8:	a03ee83a 	callr	r20
 402a7bc:	00ffffc4 	movi	r3,-1
 402a7c0:	10c0031e 	bne	r2,r3,402a7d0 <wcrtomb+0x74>
 402a7c4:	90000015 	stw	zero,0(r18)
 402a7c8:	00c02284 	movi	r3,138
 402a7cc:	88c00015 	stw	r3,0(r17)
 402a7d0:	dfc00917 	ldw	ra,36(sp)
 402a7d4:	dd000817 	ldw	r20,32(sp)
 402a7d8:	dcc00717 	ldw	r19,28(sp)
 402a7dc:	dc800617 	ldw	r18,24(sp)
 402a7e0:	dc400517 	ldw	r17,20(sp)
 402a7e4:	dc000417 	ldw	r16,16(sp)
 402a7e8:	dec00a04 	addi	sp,sp,40
 402a7ec:	f800283a 	ret
 402a7f0:	008100f4 	movhi	r2,1027
 402a7f4:	1089de04 	addi	r2,r2,10104
 402a7f8:	14000017 	ldw	r16,0(r2)
 402a7fc:	40260700 	call	4026070 <__locale_charset>
 402a800:	100f883a 	mov	r7,r2
 402a804:	dc800015 	stw	r18,0(sp)
 402a808:	000d883a 	mov	r6,zero
 402a80c:	d9400104 	addi	r5,sp,4
 402a810:	8809883a 	mov	r4,r17
 402a814:	803ee83a 	callr	r16
 402a818:	003fe806 	br	402a7bc <_gp+0xffff0058>

0402a81c <__ascii_wctomb>:
 402a81c:	28000526 	beq	r5,zero,402a834 <__ascii_wctomb+0x18>
 402a820:	00803fc4 	movi	r2,255
 402a824:	11800536 	bltu	r2,r6,402a83c <__ascii_wctomb+0x20>
 402a828:	29800005 	stb	r6,0(r5)
 402a82c:	00800044 	movi	r2,1
 402a830:	f800283a 	ret
 402a834:	0005883a 	mov	r2,zero
 402a838:	f800283a 	ret
 402a83c:	00802284 	movi	r2,138
 402a840:	20800015 	stw	r2,0(r4)
 402a844:	00bfffc4 	movi	r2,-1
 402a848:	f800283a 	ret

0402a84c <_wctomb_r>:
 402a84c:	008100f4 	movhi	r2,1027
 402a850:	defff904 	addi	sp,sp,-28
 402a854:	1089de04 	addi	r2,r2,10104
 402a858:	dfc00615 	stw	ra,24(sp)
 402a85c:	dc400515 	stw	r17,20(sp)
 402a860:	dc000415 	stw	r16,16(sp)
 402a864:	3823883a 	mov	r17,r7
 402a868:	14000017 	ldw	r16,0(r2)
 402a86c:	d9000115 	stw	r4,4(sp)
 402a870:	d9400215 	stw	r5,8(sp)
 402a874:	d9800315 	stw	r6,12(sp)
 402a878:	40260700 	call	4026070 <__locale_charset>
 402a87c:	d9800317 	ldw	r6,12(sp)
 402a880:	d9400217 	ldw	r5,8(sp)
 402a884:	d9000117 	ldw	r4,4(sp)
 402a888:	100f883a 	mov	r7,r2
 402a88c:	dc400015 	stw	r17,0(sp)
 402a890:	803ee83a 	callr	r16
 402a894:	dfc00617 	ldw	ra,24(sp)
 402a898:	dc400517 	ldw	r17,20(sp)
 402a89c:	dc000417 	ldw	r16,16(sp)
 402a8a0:	dec00704 	addi	sp,sp,28
 402a8a4:	f800283a 	ret

0402a8a8 <__muldi3>:
 402a8a8:	defff604 	addi	sp,sp,-40
 402a8ac:	dd800615 	stw	r22,24(sp)
 402a8b0:	dd400515 	stw	r21,20(sp)
 402a8b4:	dc400115 	stw	r17,4(sp)
 402a8b8:	357fffcc 	andi	r21,r6,65535
 402a8bc:	2022d43a 	srli	r17,r4,16
 402a8c0:	25bfffcc 	andi	r22,r4,65535
 402a8c4:	dcc00315 	stw	r19,12(sp)
 402a8c8:	dc800215 	stw	r18,8(sp)
 402a8cc:	2027883a 	mov	r19,r4
 402a8d0:	2825883a 	mov	r18,r5
 402a8d4:	b009883a 	mov	r4,r22
 402a8d8:	a80b883a 	mov	r5,r21
 402a8dc:	dfc00915 	stw	ra,36(sp)
 402a8e0:	df000815 	stw	fp,32(sp)
 402a8e4:	ddc00715 	stw	r23,28(sp)
 402a8e8:	3839883a 	mov	fp,r7
 402a8ec:	302ed43a 	srli	r23,r6,16
 402a8f0:	dd000415 	stw	r20,16(sp)
 402a8f4:	dc000015 	stw	r16,0(sp)
 402a8f8:	3029883a 	mov	r20,r6
 402a8fc:	4020d7c0 	call	4020d7c <__mulsi3>
 402a900:	a80b883a 	mov	r5,r21
 402a904:	8809883a 	mov	r4,r17
 402a908:	1021883a 	mov	r16,r2
 402a90c:	4020d7c0 	call	4020d7c <__mulsi3>
 402a910:	8809883a 	mov	r4,r17
 402a914:	b80b883a 	mov	r5,r23
 402a918:	102b883a 	mov	r21,r2
 402a91c:	4020d7c0 	call	4020d7c <__mulsi3>
 402a920:	b80b883a 	mov	r5,r23
 402a924:	b009883a 	mov	r4,r22
 402a928:	1023883a 	mov	r17,r2
 402a92c:	4020d7c0 	call	4020d7c <__mulsi3>
 402a930:	8006d43a 	srli	r3,r16,16
 402a934:	1545883a 	add	r2,r2,r21
 402a938:	1885883a 	add	r2,r3,r2
 402a93c:	1540022e 	bgeu	r2,r21,402a948 <__muldi3+0xa0>
 402a940:	00c00074 	movhi	r3,1
 402a944:	88e3883a 	add	r17,r17,r3
 402a948:	1006d43a 	srli	r3,r2,16
 402a94c:	1004943a 	slli	r2,r2,16
 402a950:	e00b883a 	mov	r5,fp
 402a954:	9809883a 	mov	r4,r19
 402a958:	843fffcc 	andi	r16,r16,65535
 402a95c:	1c63883a 	add	r17,r3,r17
 402a960:	1421883a 	add	r16,r2,r16
 402a964:	4020d7c0 	call	4020d7c <__mulsi3>
 402a968:	900b883a 	mov	r5,r18
 402a96c:	a009883a 	mov	r4,r20
 402a970:	1027883a 	mov	r19,r2
 402a974:	4020d7c0 	call	4020d7c <__mulsi3>
 402a978:	9885883a 	add	r2,r19,r2
 402a97c:	1447883a 	add	r3,r2,r17
 402a980:	8005883a 	mov	r2,r16
 402a984:	dfc00917 	ldw	ra,36(sp)
 402a988:	df000817 	ldw	fp,32(sp)
 402a98c:	ddc00717 	ldw	r23,28(sp)
 402a990:	dd800617 	ldw	r22,24(sp)
 402a994:	dd400517 	ldw	r21,20(sp)
 402a998:	dd000417 	ldw	r20,16(sp)
 402a99c:	dcc00317 	ldw	r19,12(sp)
 402a9a0:	dc800217 	ldw	r18,8(sp)
 402a9a4:	dc400117 	ldw	r17,4(sp)
 402a9a8:	dc000017 	ldw	r16,0(sp)
 402a9ac:	dec00a04 	addi	sp,sp,40
 402a9b0:	f800283a 	ret

0402a9b4 <__udivdi3>:
 402a9b4:	defff404 	addi	sp,sp,-48
 402a9b8:	dcc00515 	stw	r19,20(sp)
 402a9bc:	dc000215 	stw	r16,8(sp)
 402a9c0:	dfc00b15 	stw	ra,44(sp)
 402a9c4:	df000a15 	stw	fp,40(sp)
 402a9c8:	ddc00915 	stw	r23,36(sp)
 402a9cc:	dd800815 	stw	r22,32(sp)
 402a9d0:	dd400715 	stw	r21,28(sp)
 402a9d4:	dd000615 	stw	r20,24(sp)
 402a9d8:	dc800415 	stw	r18,16(sp)
 402a9dc:	dc400315 	stw	r17,12(sp)
 402a9e0:	2027883a 	mov	r19,r4
 402a9e4:	2821883a 	mov	r16,r5
 402a9e8:	3800461e 	bne	r7,zero,402ab04 <__udivdi3+0x150>
 402a9ec:	3023883a 	mov	r17,r6
 402a9f0:	2025883a 	mov	r18,r4
 402a9f4:	2980572e 	bgeu	r5,r6,402ab54 <__udivdi3+0x1a0>
 402a9f8:	00bfffd4 	movui	r2,65535
 402a9fc:	282d883a 	mov	r22,r5
 402aa00:	1180b236 	bltu	r2,r6,402accc <__udivdi3+0x318>
 402aa04:	00803fc4 	movi	r2,255
 402aa08:	1185803a 	cmpltu	r2,r2,r6
 402aa0c:	100490fa 	slli	r2,r2,3
 402aa10:	3086d83a 	srl	r3,r6,r2
 402aa14:	010100f4 	movhi	r4,1027
 402aa18:	2102e304 	addi	r4,r4,2956
 402aa1c:	20c7883a 	add	r3,r4,r3
 402aa20:	18c00003 	ldbu	r3,0(r3)
 402aa24:	1885883a 	add	r2,r3,r2
 402aa28:	00c00804 	movi	r3,32
 402aa2c:	1887c83a 	sub	r3,r3,r2
 402aa30:	18000526 	beq	r3,zero,402aa48 <__udivdi3+0x94>
 402aa34:	80e0983a 	sll	r16,r16,r3
 402aa38:	9884d83a 	srl	r2,r19,r2
 402aa3c:	30e2983a 	sll	r17,r6,r3
 402aa40:	98e4983a 	sll	r18,r19,r3
 402aa44:	142cb03a 	or	r22,r2,r16
 402aa48:	882ad43a 	srli	r21,r17,16
 402aa4c:	b009883a 	mov	r4,r22
 402aa50:	8d3fffcc 	andi	r20,r17,65535
 402aa54:	a80b883a 	mov	r5,r21
 402aa58:	4020d240 	call	4020d24 <__umodsi3>
 402aa5c:	b009883a 	mov	r4,r22
 402aa60:	a80b883a 	mov	r5,r21
 402aa64:	1027883a 	mov	r19,r2
 402aa68:	4020cc00 	call	4020cc0 <__udivsi3>
 402aa6c:	100b883a 	mov	r5,r2
 402aa70:	a009883a 	mov	r4,r20
 402aa74:	102d883a 	mov	r22,r2
 402aa78:	4020d7c0 	call	4020d7c <__mulsi3>
 402aa7c:	9826943a 	slli	r19,r19,16
 402aa80:	9006d43a 	srli	r3,r18,16
 402aa84:	1cc6b03a 	or	r3,r3,r19
 402aa88:	1880052e 	bgeu	r3,r2,402aaa0 <__udivdi3+0xec>
 402aa8c:	1c47883a 	add	r3,r3,r17
 402aa90:	b13fffc4 	addi	r4,r22,-1
 402aa94:	1c400136 	bltu	r3,r17,402aa9c <__udivdi3+0xe8>
 402aa98:	18814236 	bltu	r3,r2,402afa4 <__udivdi3+0x5f0>
 402aa9c:	202d883a 	mov	r22,r4
 402aaa0:	18a1c83a 	sub	r16,r3,r2
 402aaa4:	8009883a 	mov	r4,r16
 402aaa8:	a80b883a 	mov	r5,r21
 402aaac:	4020d240 	call	4020d24 <__umodsi3>
 402aab0:	1027883a 	mov	r19,r2
 402aab4:	8009883a 	mov	r4,r16
 402aab8:	a80b883a 	mov	r5,r21
 402aabc:	9826943a 	slli	r19,r19,16
 402aac0:	4020cc00 	call	4020cc0 <__udivsi3>
 402aac4:	100b883a 	mov	r5,r2
 402aac8:	a009883a 	mov	r4,r20
 402aacc:	94bfffcc 	andi	r18,r18,65535
 402aad0:	1021883a 	mov	r16,r2
 402aad4:	94e4b03a 	or	r18,r18,r19
 402aad8:	4020d7c0 	call	4020d7c <__mulsi3>
 402aadc:	9080052e 	bgeu	r18,r2,402aaf4 <__udivdi3+0x140>
 402aae0:	8ca5883a 	add	r18,r17,r18
 402aae4:	80ffffc4 	addi	r3,r16,-1
 402aae8:	94410c36 	bltu	r18,r17,402af1c <__udivdi3+0x568>
 402aaec:	90810b2e 	bgeu	r18,r2,402af1c <__udivdi3+0x568>
 402aaf0:	843fff84 	addi	r16,r16,-2
 402aaf4:	b004943a 	slli	r2,r22,16
 402aaf8:	0007883a 	mov	r3,zero
 402aafc:	1404b03a 	or	r2,r2,r16
 402ab00:	00005e06 	br	402ac7c <__udivdi3+0x2c8>
 402ab04:	29c05b36 	bltu	r5,r7,402ac74 <__udivdi3+0x2c0>
 402ab08:	00bfffd4 	movui	r2,65535
 402ab0c:	11c0672e 	bgeu	r2,r7,402acac <__udivdi3+0x2f8>
 402ab10:	00804034 	movhi	r2,256
 402ab14:	10bfffc4 	addi	r2,r2,-1
 402ab18:	11c10a36 	bltu	r2,r7,402af44 <__udivdi3+0x590>
 402ab1c:	00800404 	movi	r2,16
 402ab20:	3886d83a 	srl	r3,r7,r2
 402ab24:	010100f4 	movhi	r4,1027
 402ab28:	2102e304 	addi	r4,r4,2956
 402ab2c:	20c7883a 	add	r3,r4,r3
 402ab30:	18c00003 	ldbu	r3,0(r3)
 402ab34:	05c00804 	movi	r23,32
 402ab38:	1885883a 	add	r2,r3,r2
 402ab3c:	b8afc83a 	sub	r23,r23,r2
 402ab40:	b800671e 	bne	r23,zero,402ace0 <__udivdi3+0x32c>
 402ab44:	3c010536 	bltu	r7,r16,402af5c <__udivdi3+0x5a8>
 402ab48:	9985403a 	cmpgeu	r2,r19,r6
 402ab4c:	0007883a 	mov	r3,zero
 402ab50:	00004a06 	br	402ac7c <__udivdi3+0x2c8>
 402ab54:	3000041e 	bne	r6,zero,402ab68 <__udivdi3+0x1b4>
 402ab58:	000b883a 	mov	r5,zero
 402ab5c:	01000044 	movi	r4,1
 402ab60:	4020cc00 	call	4020cc0 <__udivsi3>
 402ab64:	1023883a 	mov	r17,r2
 402ab68:	00bfffd4 	movui	r2,65535
 402ab6c:	1440532e 	bgeu	r2,r17,402acbc <__udivdi3+0x308>
 402ab70:	00804034 	movhi	r2,256
 402ab74:	10bfffc4 	addi	r2,r2,-1
 402ab78:	1440f436 	bltu	r2,r17,402af4c <__udivdi3+0x598>
 402ab7c:	00800404 	movi	r2,16
 402ab80:	8886d83a 	srl	r3,r17,r2
 402ab84:	010100f4 	movhi	r4,1027
 402ab88:	2102e304 	addi	r4,r4,2956
 402ab8c:	20c7883a 	add	r3,r4,r3
 402ab90:	18c00003 	ldbu	r3,0(r3)
 402ab94:	1885883a 	add	r2,r3,r2
 402ab98:	00c00804 	movi	r3,32
 402ab9c:	1887c83a 	sub	r3,r3,r2
 402aba0:	1800a51e 	bne	r3,zero,402ae38 <__udivdi3+0x484>
 402aba4:	882ad43a 	srli	r21,r17,16
 402aba8:	8461c83a 	sub	r16,r16,r17
 402abac:	8d3fffcc 	andi	r20,r17,65535
 402abb0:	00c00044 	movi	r3,1
 402abb4:	a80b883a 	mov	r5,r21
 402abb8:	8009883a 	mov	r4,r16
 402abbc:	d8c00115 	stw	r3,4(sp)
 402abc0:	4020d240 	call	4020d24 <__umodsi3>
 402abc4:	a80b883a 	mov	r5,r21
 402abc8:	8009883a 	mov	r4,r16
 402abcc:	1027883a 	mov	r19,r2
 402abd0:	4020cc00 	call	4020cc0 <__udivsi3>
 402abd4:	a00b883a 	mov	r5,r20
 402abd8:	1009883a 	mov	r4,r2
 402abdc:	102d883a 	mov	r22,r2
 402abe0:	4020d7c0 	call	4020d7c <__mulsi3>
 402abe4:	9826943a 	slli	r19,r19,16
 402abe8:	900ed43a 	srli	r7,r18,16
 402abec:	d8c00117 	ldw	r3,4(sp)
 402abf0:	3cceb03a 	or	r7,r7,r19
 402abf4:	3880052e 	bgeu	r7,r2,402ac0c <__udivdi3+0x258>
 402abf8:	3c4f883a 	add	r7,r7,r17
 402abfc:	b13fffc4 	addi	r4,r22,-1
 402ac00:	3c400136 	bltu	r7,r17,402ac08 <__udivdi3+0x254>
 402ac04:	3880e436 	bltu	r7,r2,402af98 <__udivdi3+0x5e4>
 402ac08:	202d883a 	mov	r22,r4
 402ac0c:	38a1c83a 	sub	r16,r7,r2
 402ac10:	8009883a 	mov	r4,r16
 402ac14:	a80b883a 	mov	r5,r21
 402ac18:	d8c00115 	stw	r3,4(sp)
 402ac1c:	4020d240 	call	4020d24 <__umodsi3>
 402ac20:	1027883a 	mov	r19,r2
 402ac24:	8009883a 	mov	r4,r16
 402ac28:	a80b883a 	mov	r5,r21
 402ac2c:	9826943a 	slli	r19,r19,16
 402ac30:	4020cc00 	call	4020cc0 <__udivsi3>
 402ac34:	a00b883a 	mov	r5,r20
 402ac38:	1009883a 	mov	r4,r2
 402ac3c:	94bfffcc 	andi	r18,r18,65535
 402ac40:	1021883a 	mov	r16,r2
 402ac44:	94e4b03a 	or	r18,r18,r19
 402ac48:	4020d7c0 	call	4020d7c <__mulsi3>
 402ac4c:	d8c00117 	ldw	r3,4(sp)
 402ac50:	9080052e 	bgeu	r18,r2,402ac68 <__udivdi3+0x2b4>
 402ac54:	8ca5883a 	add	r18,r17,r18
 402ac58:	813fffc4 	addi	r4,r16,-1
 402ac5c:	9440ad36 	bltu	r18,r17,402af14 <__udivdi3+0x560>
 402ac60:	9080ac2e 	bgeu	r18,r2,402af14 <__udivdi3+0x560>
 402ac64:	843fff84 	addi	r16,r16,-2
 402ac68:	b004943a 	slli	r2,r22,16
 402ac6c:	1404b03a 	or	r2,r2,r16
 402ac70:	00000206 	br	402ac7c <__udivdi3+0x2c8>
 402ac74:	0007883a 	mov	r3,zero
 402ac78:	0005883a 	mov	r2,zero
 402ac7c:	dfc00b17 	ldw	ra,44(sp)
 402ac80:	df000a17 	ldw	fp,40(sp)
 402ac84:	ddc00917 	ldw	r23,36(sp)
 402ac88:	dd800817 	ldw	r22,32(sp)
 402ac8c:	dd400717 	ldw	r21,28(sp)
 402ac90:	dd000617 	ldw	r20,24(sp)
 402ac94:	dcc00517 	ldw	r19,20(sp)
 402ac98:	dc800417 	ldw	r18,16(sp)
 402ac9c:	dc400317 	ldw	r17,12(sp)
 402aca0:	dc000217 	ldw	r16,8(sp)
 402aca4:	dec00c04 	addi	sp,sp,48
 402aca8:	f800283a 	ret
 402acac:	00803fc4 	movi	r2,255
 402acb0:	11c5803a 	cmpltu	r2,r2,r7
 402acb4:	100490fa 	slli	r2,r2,3
 402acb8:	003f9906 	br	402ab20 <_gp+0xffff03bc>
 402acbc:	00803fc4 	movi	r2,255
 402acc0:	1445803a 	cmpltu	r2,r2,r17
 402acc4:	100490fa 	slli	r2,r2,3
 402acc8:	003fad06 	br	402ab80 <_gp+0xffff041c>
 402accc:	00804034 	movhi	r2,256
 402acd0:	10bfffc4 	addi	r2,r2,-1
 402acd4:	11809f36 	bltu	r2,r6,402af54 <__udivdi3+0x5a0>
 402acd8:	00800404 	movi	r2,16
 402acdc:	003f4c06 	br	402aa10 <_gp+0xffff02ac>
 402ace0:	3dce983a 	sll	r7,r7,r23
 402ace4:	30b8d83a 	srl	fp,r6,r2
 402ace8:	80a2d83a 	srl	r17,r16,r2
 402acec:	35cc983a 	sll	r6,r6,r23
 402acf0:	3f38b03a 	or	fp,r7,fp
 402acf4:	e024d43a 	srli	r18,fp,16
 402acf8:	9884d83a 	srl	r2,r19,r2
 402acfc:	85e0983a 	sll	r16,r16,r23
 402ad00:	8809883a 	mov	r4,r17
 402ad04:	900b883a 	mov	r5,r18
 402ad08:	d9800015 	stw	r6,0(sp)
 402ad0c:	1420b03a 	or	r16,r2,r16
 402ad10:	4020d240 	call	4020d24 <__umodsi3>
 402ad14:	900b883a 	mov	r5,r18
 402ad18:	8809883a 	mov	r4,r17
 402ad1c:	1029883a 	mov	r20,r2
 402ad20:	e5bfffcc 	andi	r22,fp,65535
 402ad24:	4020cc00 	call	4020cc0 <__udivsi3>
 402ad28:	100b883a 	mov	r5,r2
 402ad2c:	b009883a 	mov	r4,r22
 402ad30:	102b883a 	mov	r21,r2
 402ad34:	4020d7c0 	call	4020d7c <__mulsi3>
 402ad38:	a028943a 	slli	r20,r20,16
 402ad3c:	8006d43a 	srli	r3,r16,16
 402ad40:	1d06b03a 	or	r3,r3,r20
 402ad44:	1880042e 	bgeu	r3,r2,402ad58 <__udivdi3+0x3a4>
 402ad48:	1f07883a 	add	r3,r3,fp
 402ad4c:	a93fffc4 	addi	r4,r21,-1
 402ad50:	1f00892e 	bgeu	r3,fp,402af78 <__udivdi3+0x5c4>
 402ad54:	202b883a 	mov	r21,r4
 402ad58:	18a3c83a 	sub	r17,r3,r2
 402ad5c:	8809883a 	mov	r4,r17
 402ad60:	900b883a 	mov	r5,r18
 402ad64:	4020d240 	call	4020d24 <__umodsi3>
 402ad68:	1029883a 	mov	r20,r2
 402ad6c:	8809883a 	mov	r4,r17
 402ad70:	900b883a 	mov	r5,r18
 402ad74:	a028943a 	slli	r20,r20,16
 402ad78:	4020cc00 	call	4020cc0 <__udivsi3>
 402ad7c:	100b883a 	mov	r5,r2
 402ad80:	b009883a 	mov	r4,r22
 402ad84:	843fffcc 	andi	r16,r16,65535
 402ad88:	1023883a 	mov	r17,r2
 402ad8c:	8520b03a 	or	r16,r16,r20
 402ad90:	4020d7c0 	call	4020d7c <__mulsi3>
 402ad94:	8080042e 	bgeu	r16,r2,402ada8 <__udivdi3+0x3f4>
 402ad98:	8721883a 	add	r16,r16,fp
 402ad9c:	88ffffc4 	addi	r3,r17,-1
 402ada0:	8700712e 	bgeu	r16,fp,402af68 <__udivdi3+0x5b4>
 402ada4:	1823883a 	mov	r17,r3
 402ada8:	a80e943a 	slli	r7,r21,16
 402adac:	d8c00017 	ldw	r3,0(sp)
 402adb0:	80a1c83a 	sub	r16,r16,r2
 402adb4:	3c64b03a 	or	r18,r7,r17
 402adb8:	1d3fffcc 	andi	r20,r3,65535
 402adbc:	9022d43a 	srli	r17,r18,16
 402adc0:	95bfffcc 	andi	r22,r18,65535
 402adc4:	a00b883a 	mov	r5,r20
 402adc8:	b009883a 	mov	r4,r22
 402adcc:	182ad43a 	srli	r21,r3,16
 402add0:	4020d7c0 	call	4020d7c <__mulsi3>
 402add4:	a00b883a 	mov	r5,r20
 402add8:	8809883a 	mov	r4,r17
 402addc:	1039883a 	mov	fp,r2
 402ade0:	4020d7c0 	call	4020d7c <__mulsi3>
 402ade4:	8809883a 	mov	r4,r17
 402ade8:	a80b883a 	mov	r5,r21
 402adec:	1029883a 	mov	r20,r2
 402adf0:	4020d7c0 	call	4020d7c <__mulsi3>
 402adf4:	a80b883a 	mov	r5,r21
 402adf8:	b009883a 	mov	r4,r22
 402adfc:	1023883a 	mov	r17,r2
 402ae00:	4020d7c0 	call	4020d7c <__mulsi3>
 402ae04:	e006d43a 	srli	r3,fp,16
 402ae08:	1505883a 	add	r2,r2,r20
 402ae0c:	1887883a 	add	r3,r3,r2
 402ae10:	1d00022e 	bgeu	r3,r20,402ae1c <__udivdi3+0x468>
 402ae14:	00800074 	movhi	r2,1
 402ae18:	88a3883a 	add	r17,r17,r2
 402ae1c:	1804d43a 	srli	r2,r3,16
 402ae20:	1463883a 	add	r17,r2,r17
 402ae24:	84404436 	bltu	r16,r17,402af38 <__udivdi3+0x584>
 402ae28:	84403e26 	beq	r16,r17,402af24 <__udivdi3+0x570>
 402ae2c:	9005883a 	mov	r2,r18
 402ae30:	0007883a 	mov	r3,zero
 402ae34:	003f9106 	br	402ac7c <_gp+0xffff0518>
 402ae38:	88e2983a 	sll	r17,r17,r3
 402ae3c:	80aed83a 	srl	r23,r16,r2
 402ae40:	80e0983a 	sll	r16,r16,r3
 402ae44:	882ad43a 	srli	r21,r17,16
 402ae48:	9884d83a 	srl	r2,r19,r2
 402ae4c:	b809883a 	mov	r4,r23
 402ae50:	a80b883a 	mov	r5,r21
 402ae54:	98e4983a 	sll	r18,r19,r3
 402ae58:	142cb03a 	or	r22,r2,r16
 402ae5c:	4020d240 	call	4020d24 <__umodsi3>
 402ae60:	b809883a 	mov	r4,r23
 402ae64:	a80b883a 	mov	r5,r21
 402ae68:	1027883a 	mov	r19,r2
 402ae6c:	8d3fffcc 	andi	r20,r17,65535
 402ae70:	4020cc00 	call	4020cc0 <__udivsi3>
 402ae74:	a009883a 	mov	r4,r20
 402ae78:	100b883a 	mov	r5,r2
 402ae7c:	102f883a 	mov	r23,r2
 402ae80:	4020d7c0 	call	4020d7c <__mulsi3>
 402ae84:	9826943a 	slli	r19,r19,16
 402ae88:	b008d43a 	srli	r4,r22,16
 402ae8c:	24c8b03a 	or	r4,r4,r19
 402ae90:	2080062e 	bgeu	r4,r2,402aeac <__udivdi3+0x4f8>
 402ae94:	2449883a 	add	r4,r4,r17
 402ae98:	b8ffffc4 	addi	r3,r23,-1
 402ae9c:	24403c36 	bltu	r4,r17,402af90 <__udivdi3+0x5dc>
 402aea0:	20803b2e 	bgeu	r4,r2,402af90 <__udivdi3+0x5dc>
 402aea4:	bdffff84 	addi	r23,r23,-2
 402aea8:	2449883a 	add	r4,r4,r17
 402aeac:	20a1c83a 	sub	r16,r4,r2
 402aeb0:	a80b883a 	mov	r5,r21
 402aeb4:	8009883a 	mov	r4,r16
 402aeb8:	4020d240 	call	4020d24 <__umodsi3>
 402aebc:	a80b883a 	mov	r5,r21
 402aec0:	8009883a 	mov	r4,r16
 402aec4:	1027883a 	mov	r19,r2
 402aec8:	4020cc00 	call	4020cc0 <__udivsi3>
 402aecc:	a009883a 	mov	r4,r20
 402aed0:	100b883a 	mov	r5,r2
 402aed4:	9826943a 	slli	r19,r19,16
 402aed8:	1039883a 	mov	fp,r2
 402aedc:	4020d7c0 	call	4020d7c <__mulsi3>
 402aee0:	b13fffcc 	andi	r4,r22,65535
 402aee4:	24c8b03a 	or	r4,r4,r19
 402aee8:	2080062e 	bgeu	r4,r2,402af04 <__udivdi3+0x550>
 402aeec:	2449883a 	add	r4,r4,r17
 402aef0:	e0ffffc4 	addi	r3,fp,-1
 402aef4:	24402436 	bltu	r4,r17,402af88 <__udivdi3+0x5d4>
 402aef8:	2080232e 	bgeu	r4,r2,402af88 <__udivdi3+0x5d4>
 402aefc:	e73fff84 	addi	fp,fp,-2
 402af00:	2449883a 	add	r4,r4,r17
 402af04:	b82e943a 	slli	r23,r23,16
 402af08:	20a1c83a 	sub	r16,r4,r2
 402af0c:	bf06b03a 	or	r3,r23,fp
 402af10:	003f2806 	br	402abb4 <_gp+0xffff0450>
 402af14:	2021883a 	mov	r16,r4
 402af18:	003f5306 	br	402ac68 <_gp+0xffff0504>
 402af1c:	1821883a 	mov	r16,r3
 402af20:	003ef406 	br	402aaf4 <_gp+0xffff0390>
 402af24:	1806943a 	slli	r3,r3,16
 402af28:	9de6983a 	sll	r19,r19,r23
 402af2c:	e73fffcc 	andi	fp,fp,65535
 402af30:	1f07883a 	add	r3,r3,fp
 402af34:	98ffbd2e 	bgeu	r19,r3,402ae2c <_gp+0xffff06c8>
 402af38:	90bfffc4 	addi	r2,r18,-1
 402af3c:	0007883a 	mov	r3,zero
 402af40:	003f4e06 	br	402ac7c <_gp+0xffff0518>
 402af44:	00800604 	movi	r2,24
 402af48:	003ef506 	br	402ab20 <_gp+0xffff03bc>
 402af4c:	00800604 	movi	r2,24
 402af50:	003f0b06 	br	402ab80 <_gp+0xffff041c>
 402af54:	00800604 	movi	r2,24
 402af58:	003ead06 	br	402aa10 <_gp+0xffff02ac>
 402af5c:	0007883a 	mov	r3,zero
 402af60:	00800044 	movi	r2,1
 402af64:	003f4506 	br	402ac7c <_gp+0xffff0518>
 402af68:	80bf8e2e 	bgeu	r16,r2,402ada4 <_gp+0xffff0640>
 402af6c:	8c7fff84 	addi	r17,r17,-2
 402af70:	8721883a 	add	r16,r16,fp
 402af74:	003f8c06 	br	402ada8 <_gp+0xffff0644>
 402af78:	18bf762e 	bgeu	r3,r2,402ad54 <_gp+0xffff05f0>
 402af7c:	ad7fff84 	addi	r21,r21,-2
 402af80:	1f07883a 	add	r3,r3,fp
 402af84:	003f7406 	br	402ad58 <_gp+0xffff05f4>
 402af88:	1839883a 	mov	fp,r3
 402af8c:	003fdd06 	br	402af04 <_gp+0xffff07a0>
 402af90:	182f883a 	mov	r23,r3
 402af94:	003fc506 	br	402aeac <_gp+0xffff0748>
 402af98:	b5bfff84 	addi	r22,r22,-2
 402af9c:	3c4f883a 	add	r7,r7,r17
 402afa0:	003f1a06 	br	402ac0c <_gp+0xffff04a8>
 402afa4:	b5bfff84 	addi	r22,r22,-2
 402afa8:	1c47883a 	add	r3,r3,r17
 402afac:	003ebc06 	br	402aaa0 <_gp+0xffff033c>

0402afb0 <__umoddi3>:
 402afb0:	defff304 	addi	sp,sp,-52
 402afb4:	df000b15 	stw	fp,44(sp)
 402afb8:	dc400415 	stw	r17,16(sp)
 402afbc:	dc000315 	stw	r16,12(sp)
 402afc0:	dfc00c15 	stw	ra,48(sp)
 402afc4:	ddc00a15 	stw	r23,40(sp)
 402afc8:	dd800915 	stw	r22,36(sp)
 402afcc:	dd400815 	stw	r21,32(sp)
 402afd0:	dd000715 	stw	r20,28(sp)
 402afd4:	dcc00615 	stw	r19,24(sp)
 402afd8:	dc800515 	stw	r18,20(sp)
 402afdc:	2021883a 	mov	r16,r4
 402afe0:	2823883a 	mov	r17,r5
 402afe4:	2839883a 	mov	fp,r5
 402afe8:	3800401e 	bne	r7,zero,402b0ec <__umoddi3+0x13c>
 402afec:	3027883a 	mov	r19,r6
 402aff0:	2029883a 	mov	r20,r4
 402aff4:	2980552e 	bgeu	r5,r6,402b14c <__umoddi3+0x19c>
 402aff8:	00bfffd4 	movui	r2,65535
 402affc:	1180a236 	bltu	r2,r6,402b288 <__umoddi3+0x2d8>
 402b000:	01003fc4 	movi	r4,255
 402b004:	2189803a 	cmpltu	r4,r4,r6
 402b008:	200890fa 	slli	r4,r4,3
 402b00c:	3104d83a 	srl	r2,r6,r4
 402b010:	00c100f4 	movhi	r3,1027
 402b014:	18c2e304 	addi	r3,r3,2956
 402b018:	1885883a 	add	r2,r3,r2
 402b01c:	10c00003 	ldbu	r3,0(r2)
 402b020:	00800804 	movi	r2,32
 402b024:	1909883a 	add	r4,r3,r4
 402b028:	1125c83a 	sub	r18,r2,r4
 402b02c:	90000526 	beq	r18,zero,402b044 <__umoddi3+0x94>
 402b030:	8ca2983a 	sll	r17,r17,r18
 402b034:	8108d83a 	srl	r4,r16,r4
 402b038:	34a6983a 	sll	r19,r6,r18
 402b03c:	84a8983a 	sll	r20,r16,r18
 402b040:	2478b03a 	or	fp,r4,r17
 402b044:	982cd43a 	srli	r22,r19,16
 402b048:	e009883a 	mov	r4,fp
 402b04c:	9dffffcc 	andi	r23,r19,65535
 402b050:	b00b883a 	mov	r5,r22
 402b054:	4020d240 	call	4020d24 <__umodsi3>
 402b058:	b00b883a 	mov	r5,r22
 402b05c:	e009883a 	mov	r4,fp
 402b060:	102b883a 	mov	r21,r2
 402b064:	4020cc00 	call	4020cc0 <__udivsi3>
 402b068:	100b883a 	mov	r5,r2
 402b06c:	b809883a 	mov	r4,r23
 402b070:	4020d7c0 	call	4020d7c <__mulsi3>
 402b074:	a82a943a 	slli	r21,r21,16
 402b078:	a006d43a 	srli	r3,r20,16
 402b07c:	1d46b03a 	or	r3,r3,r21
 402b080:	1880032e 	bgeu	r3,r2,402b090 <__umoddi3+0xe0>
 402b084:	1cc7883a 	add	r3,r3,r19
 402b088:	1cc00136 	bltu	r3,r19,402b090 <__umoddi3+0xe0>
 402b08c:	18813136 	bltu	r3,r2,402b554 <__umoddi3+0x5a4>
 402b090:	18a1c83a 	sub	r16,r3,r2
 402b094:	b00b883a 	mov	r5,r22
 402b098:	8009883a 	mov	r4,r16
 402b09c:	4020d240 	call	4020d24 <__umodsi3>
 402b0a0:	b00b883a 	mov	r5,r22
 402b0a4:	8009883a 	mov	r4,r16
 402b0a8:	1023883a 	mov	r17,r2
 402b0ac:	4020cc00 	call	4020cc0 <__udivsi3>
 402b0b0:	100b883a 	mov	r5,r2
 402b0b4:	b809883a 	mov	r4,r23
 402b0b8:	8822943a 	slli	r17,r17,16
 402b0bc:	4020d7c0 	call	4020d7c <__mulsi3>
 402b0c0:	a0ffffcc 	andi	r3,r20,65535
 402b0c4:	1c46b03a 	or	r3,r3,r17
 402b0c8:	1880042e 	bgeu	r3,r2,402b0dc <__umoddi3+0x12c>
 402b0cc:	1cc7883a 	add	r3,r3,r19
 402b0d0:	1cc00236 	bltu	r3,r19,402b0dc <__umoddi3+0x12c>
 402b0d4:	1880012e 	bgeu	r3,r2,402b0dc <__umoddi3+0x12c>
 402b0d8:	1cc7883a 	add	r3,r3,r19
 402b0dc:	1885c83a 	sub	r2,r3,r2
 402b0e0:	1484d83a 	srl	r2,r2,r18
 402b0e4:	0007883a 	mov	r3,zero
 402b0e8:	00005306 	br	402b238 <__umoddi3+0x288>
 402b0ec:	29c05036 	bltu	r5,r7,402b230 <__umoddi3+0x280>
 402b0f0:	00bfffd4 	movui	r2,65535
 402b0f4:	11c05c2e 	bgeu	r2,r7,402b268 <__umoddi3+0x2b8>
 402b0f8:	00804034 	movhi	r2,256
 402b0fc:	10bfffc4 	addi	r2,r2,-1
 402b100:	11c10636 	bltu	r2,r7,402b51c <__umoddi3+0x56c>
 402b104:	01000404 	movi	r4,16
 402b108:	3904d83a 	srl	r2,r7,r4
 402b10c:	00c100f4 	movhi	r3,1027
 402b110:	18c2e304 	addi	r3,r3,2956
 402b114:	1885883a 	add	r2,r3,r2
 402b118:	14c00003 	ldbu	r19,0(r2)
 402b11c:	00c00804 	movi	r3,32
 402b120:	9927883a 	add	r19,r19,r4
 402b124:	1ce9c83a 	sub	r20,r3,r19
 402b128:	a0005c1e 	bne	r20,zero,402b29c <__umoddi3+0x2ec>
 402b12c:	3c400136 	bltu	r7,r17,402b134 <__umoddi3+0x184>
 402b130:	81810a36 	bltu	r16,r6,402b55c <__umoddi3+0x5ac>
 402b134:	8185c83a 	sub	r2,r16,r6
 402b138:	89e3c83a 	sub	r17,r17,r7
 402b13c:	8089803a 	cmpltu	r4,r16,r2
 402b140:	8939c83a 	sub	fp,r17,r4
 402b144:	e007883a 	mov	r3,fp
 402b148:	00003b06 	br	402b238 <__umoddi3+0x288>
 402b14c:	3000041e 	bne	r6,zero,402b160 <__umoddi3+0x1b0>
 402b150:	000b883a 	mov	r5,zero
 402b154:	01000044 	movi	r4,1
 402b158:	4020cc00 	call	4020cc0 <__udivsi3>
 402b15c:	1027883a 	mov	r19,r2
 402b160:	00bfffd4 	movui	r2,65535
 402b164:	14c0442e 	bgeu	r2,r19,402b278 <__umoddi3+0x2c8>
 402b168:	00804034 	movhi	r2,256
 402b16c:	10bfffc4 	addi	r2,r2,-1
 402b170:	14c0ec36 	bltu	r2,r19,402b524 <__umoddi3+0x574>
 402b174:	00800404 	movi	r2,16
 402b178:	9886d83a 	srl	r3,r19,r2
 402b17c:	010100f4 	movhi	r4,1027
 402b180:	2102e304 	addi	r4,r4,2956
 402b184:	20c7883a 	add	r3,r4,r3
 402b188:	18c00003 	ldbu	r3,0(r3)
 402b18c:	1887883a 	add	r3,r3,r2
 402b190:	00800804 	movi	r2,32
 402b194:	10e5c83a 	sub	r18,r2,r3
 402b198:	9000ab1e 	bne	r18,zero,402b448 <__umoddi3+0x498>
 402b19c:	982cd43a 	srli	r22,r19,16
 402b1a0:	8ce3c83a 	sub	r17,r17,r19
 402b1a4:	9dffffcc 	andi	r23,r19,65535
 402b1a8:	b00b883a 	mov	r5,r22
 402b1ac:	8809883a 	mov	r4,r17
 402b1b0:	4020d240 	call	4020d24 <__umodsi3>
 402b1b4:	b00b883a 	mov	r5,r22
 402b1b8:	8809883a 	mov	r4,r17
 402b1bc:	102b883a 	mov	r21,r2
 402b1c0:	4020cc00 	call	4020cc0 <__udivsi3>
 402b1c4:	b80b883a 	mov	r5,r23
 402b1c8:	1009883a 	mov	r4,r2
 402b1cc:	4020d7c0 	call	4020d7c <__mulsi3>
 402b1d0:	a82a943a 	slli	r21,r21,16
 402b1d4:	a006d43a 	srli	r3,r20,16
 402b1d8:	1d46b03a 	or	r3,r3,r21
 402b1dc:	1880042e 	bgeu	r3,r2,402b1f0 <__umoddi3+0x240>
 402b1e0:	1cc7883a 	add	r3,r3,r19
 402b1e4:	1cc00236 	bltu	r3,r19,402b1f0 <__umoddi3+0x240>
 402b1e8:	1880012e 	bgeu	r3,r2,402b1f0 <__umoddi3+0x240>
 402b1ec:	1cc7883a 	add	r3,r3,r19
 402b1f0:	18a1c83a 	sub	r16,r3,r2
 402b1f4:	b00b883a 	mov	r5,r22
 402b1f8:	8009883a 	mov	r4,r16
 402b1fc:	4020d240 	call	4020d24 <__umodsi3>
 402b200:	1023883a 	mov	r17,r2
 402b204:	b00b883a 	mov	r5,r22
 402b208:	8009883a 	mov	r4,r16
 402b20c:	4020cc00 	call	4020cc0 <__udivsi3>
 402b210:	8822943a 	slli	r17,r17,16
 402b214:	b80b883a 	mov	r5,r23
 402b218:	1009883a 	mov	r4,r2
 402b21c:	4020d7c0 	call	4020d7c <__mulsi3>
 402b220:	a53fffcc 	andi	r20,r20,65535
 402b224:	a446b03a 	or	r3,r20,r17
 402b228:	18bfac2e 	bgeu	r3,r2,402b0dc <_gp+0xffff0978>
 402b22c:	003fa706 	br	402b0cc <_gp+0xffff0968>
 402b230:	2005883a 	mov	r2,r4
 402b234:	2807883a 	mov	r3,r5
 402b238:	dfc00c17 	ldw	ra,48(sp)
 402b23c:	df000b17 	ldw	fp,44(sp)
 402b240:	ddc00a17 	ldw	r23,40(sp)
 402b244:	dd800917 	ldw	r22,36(sp)
 402b248:	dd400817 	ldw	r21,32(sp)
 402b24c:	dd000717 	ldw	r20,28(sp)
 402b250:	dcc00617 	ldw	r19,24(sp)
 402b254:	dc800517 	ldw	r18,20(sp)
 402b258:	dc400417 	ldw	r17,16(sp)
 402b25c:	dc000317 	ldw	r16,12(sp)
 402b260:	dec00d04 	addi	sp,sp,52
 402b264:	f800283a 	ret
 402b268:	04c03fc4 	movi	r19,255
 402b26c:	99c9803a 	cmpltu	r4,r19,r7
 402b270:	200890fa 	slli	r4,r4,3
 402b274:	003fa406 	br	402b108 <_gp+0xffff09a4>
 402b278:	00803fc4 	movi	r2,255
 402b27c:	14c5803a 	cmpltu	r2,r2,r19
 402b280:	100490fa 	slli	r2,r2,3
 402b284:	003fbc06 	br	402b178 <_gp+0xffff0a14>
 402b288:	00804034 	movhi	r2,256
 402b28c:	10bfffc4 	addi	r2,r2,-1
 402b290:	1180a636 	bltu	r2,r6,402b52c <__umoddi3+0x57c>
 402b294:	01000404 	movi	r4,16
 402b298:	003f5c06 	br	402b00c <_gp+0xffff08a8>
 402b29c:	3d0e983a 	sll	r7,r7,r20
 402b2a0:	34ead83a 	srl	r21,r6,r19
 402b2a4:	8cc6d83a 	srl	r3,r17,r19
 402b2a8:	8d10983a 	sll	r8,r17,r20
 402b2ac:	3d6ab03a 	or	r21,r7,r21
 402b2b0:	a82cd43a 	srli	r22,r21,16
 402b2b4:	84e2d83a 	srl	r17,r16,r19
 402b2b8:	1809883a 	mov	r4,r3
 402b2bc:	b00b883a 	mov	r5,r22
 402b2c0:	8a22b03a 	or	r17,r17,r8
 402b2c4:	3524983a 	sll	r18,r6,r20
 402b2c8:	dc400015 	stw	r17,0(sp)
 402b2cc:	d8c00115 	stw	r3,4(sp)
 402b2d0:	4020d240 	call	4020d24 <__umodsi3>
 402b2d4:	d8c00117 	ldw	r3,4(sp)
 402b2d8:	b00b883a 	mov	r5,r22
 402b2dc:	1039883a 	mov	fp,r2
 402b2e0:	1809883a 	mov	r4,r3
 402b2e4:	4020cc00 	call	4020cc0 <__udivsi3>
 402b2e8:	adffffcc 	andi	r23,r21,65535
 402b2ec:	100b883a 	mov	r5,r2
 402b2f0:	b809883a 	mov	r4,r23
 402b2f4:	1023883a 	mov	r17,r2
 402b2f8:	4020d7c0 	call	4020d7c <__mulsi3>
 402b2fc:	d9400017 	ldw	r5,0(sp)
 402b300:	e008943a 	slli	r4,fp,16
 402b304:	8520983a 	sll	r16,r16,r20
 402b308:	2806d43a 	srli	r3,r5,16
 402b30c:	1906b03a 	or	r3,r3,r4
 402b310:	1880042e 	bgeu	r3,r2,402b324 <__umoddi3+0x374>
 402b314:	1d47883a 	add	r3,r3,r21
 402b318:	893fffc4 	addi	r4,r17,-1
 402b31c:	1d40892e 	bgeu	r3,r21,402b544 <__umoddi3+0x594>
 402b320:	2023883a 	mov	r17,r4
 402b324:	18b9c83a 	sub	fp,r3,r2
 402b328:	b00b883a 	mov	r5,r22
 402b32c:	e009883a 	mov	r4,fp
 402b330:	4020d240 	call	4020d24 <__umodsi3>
 402b334:	b00b883a 	mov	r5,r22
 402b338:	e009883a 	mov	r4,fp
 402b33c:	d8800215 	stw	r2,8(sp)
 402b340:	4020cc00 	call	4020cc0 <__udivsi3>
 402b344:	100b883a 	mov	r5,r2
 402b348:	b809883a 	mov	r4,r23
 402b34c:	102d883a 	mov	r22,r2
 402b350:	4020d7c0 	call	4020d7c <__mulsi3>
 402b354:	d9800217 	ldw	r6,8(sp)
 402b358:	d8c00017 	ldw	r3,0(sp)
 402b35c:	300c943a 	slli	r6,r6,16
 402b360:	1a3fffcc 	andi	r8,r3,65535
 402b364:	4190b03a 	or	r8,r8,r6
 402b368:	4080042e 	bgeu	r8,r2,402b37c <__umoddi3+0x3cc>
 402b36c:	4551883a 	add	r8,r8,r21
 402b370:	b0ffffc4 	addi	r3,r22,-1
 402b374:	45406f2e 	bgeu	r8,r21,402b534 <__umoddi3+0x584>
 402b378:	182d883a 	mov	r22,r3
 402b37c:	880e943a 	slli	r7,r17,16
 402b380:	9006d43a 	srli	r3,r18,16
 402b384:	91bfffcc 	andi	r6,r18,65535
 402b388:	3dacb03a 	or	r22,r7,r22
 402b38c:	b02ed43a 	srli	r23,r22,16
 402b390:	b5bfffcc 	andi	r22,r22,65535
 402b394:	300b883a 	mov	r5,r6
 402b398:	b009883a 	mov	r4,r22
 402b39c:	40a3c83a 	sub	r17,r8,r2
 402b3a0:	d8c00115 	stw	r3,4(sp)
 402b3a4:	d9800215 	stw	r6,8(sp)
 402b3a8:	4020d7c0 	call	4020d7c <__mulsi3>
 402b3ac:	d9800217 	ldw	r6,8(sp)
 402b3b0:	b809883a 	mov	r4,r23
 402b3b4:	1039883a 	mov	fp,r2
 402b3b8:	300b883a 	mov	r5,r6
 402b3bc:	4020d7c0 	call	4020d7c <__mulsi3>
 402b3c0:	d8c00117 	ldw	r3,4(sp)
 402b3c4:	b809883a 	mov	r4,r23
 402b3c8:	d8800215 	stw	r2,8(sp)
 402b3cc:	180b883a 	mov	r5,r3
 402b3d0:	4020d7c0 	call	4020d7c <__mulsi3>
 402b3d4:	d8c00117 	ldw	r3,4(sp)
 402b3d8:	b009883a 	mov	r4,r22
 402b3dc:	102f883a 	mov	r23,r2
 402b3e0:	180b883a 	mov	r5,r3
 402b3e4:	4020d7c0 	call	4020d7c <__mulsi3>
 402b3e8:	d9800217 	ldw	r6,8(sp)
 402b3ec:	e006d43a 	srli	r3,fp,16
 402b3f0:	1185883a 	add	r2,r2,r6
 402b3f4:	1885883a 	add	r2,r3,r2
 402b3f8:	1180022e 	bgeu	r2,r6,402b404 <__umoddi3+0x454>
 402b3fc:	00c00074 	movhi	r3,1
 402b400:	b8ef883a 	add	r23,r23,r3
 402b404:	1006d43a 	srli	r3,r2,16
 402b408:	1004943a 	slli	r2,r2,16
 402b40c:	e73fffcc 	andi	fp,fp,65535
 402b410:	1dc7883a 	add	r3,r3,r23
 402b414:	1739883a 	add	fp,r2,fp
 402b418:	88c03a36 	bltu	r17,r3,402b504 <__umoddi3+0x554>
 402b41c:	88c05126 	beq	r17,r3,402b564 <__umoddi3+0x5b4>
 402b420:	88c9c83a 	sub	r4,r17,r3
 402b424:	e00f883a 	mov	r7,fp
 402b428:	81cfc83a 	sub	r7,r16,r7
 402b42c:	81c7803a 	cmpltu	r3,r16,r7
 402b430:	20c7c83a 	sub	r3,r4,r3
 402b434:	1cc4983a 	sll	r2,r3,r19
 402b438:	3d0ed83a 	srl	r7,r7,r20
 402b43c:	1d06d83a 	srl	r3,r3,r20
 402b440:	11c4b03a 	or	r2,r2,r7
 402b444:	003f7c06 	br	402b238 <_gp+0xffff0ad4>
 402b448:	9ca6983a 	sll	r19,r19,r18
 402b44c:	88f8d83a 	srl	fp,r17,r3
 402b450:	80c4d83a 	srl	r2,r16,r3
 402b454:	982cd43a 	srli	r22,r19,16
 402b458:	8ca2983a 	sll	r17,r17,r18
 402b45c:	e009883a 	mov	r4,fp
 402b460:	b00b883a 	mov	r5,r22
 402b464:	146ab03a 	or	r21,r2,r17
 402b468:	4020d240 	call	4020d24 <__umodsi3>
 402b46c:	b00b883a 	mov	r5,r22
 402b470:	e009883a 	mov	r4,fp
 402b474:	1029883a 	mov	r20,r2
 402b478:	9dffffcc 	andi	r23,r19,65535
 402b47c:	4020cc00 	call	4020cc0 <__udivsi3>
 402b480:	b809883a 	mov	r4,r23
 402b484:	100b883a 	mov	r5,r2
 402b488:	4020d7c0 	call	4020d7c <__mulsi3>
 402b48c:	a008943a 	slli	r4,r20,16
 402b490:	a806d43a 	srli	r3,r21,16
 402b494:	84a8983a 	sll	r20,r16,r18
 402b498:	1906b03a 	or	r3,r3,r4
 402b49c:	1880042e 	bgeu	r3,r2,402b4b0 <__umoddi3+0x500>
 402b4a0:	1cc7883a 	add	r3,r3,r19
 402b4a4:	1cc00236 	bltu	r3,r19,402b4b0 <__umoddi3+0x500>
 402b4a8:	1880012e 	bgeu	r3,r2,402b4b0 <__umoddi3+0x500>
 402b4ac:	1cc7883a 	add	r3,r3,r19
 402b4b0:	18a3c83a 	sub	r17,r3,r2
 402b4b4:	b00b883a 	mov	r5,r22
 402b4b8:	8809883a 	mov	r4,r17
 402b4bc:	4020d240 	call	4020d24 <__umodsi3>
 402b4c0:	b00b883a 	mov	r5,r22
 402b4c4:	8809883a 	mov	r4,r17
 402b4c8:	1021883a 	mov	r16,r2
 402b4cc:	4020cc00 	call	4020cc0 <__udivsi3>
 402b4d0:	100b883a 	mov	r5,r2
 402b4d4:	b809883a 	mov	r4,r23
 402b4d8:	8020943a 	slli	r16,r16,16
 402b4dc:	4020d7c0 	call	4020d7c <__mulsi3>
 402b4e0:	a8ffffcc 	andi	r3,r21,65535
 402b4e4:	1c06b03a 	or	r3,r3,r16
 402b4e8:	1880042e 	bgeu	r3,r2,402b4fc <__umoddi3+0x54c>
 402b4ec:	1cc7883a 	add	r3,r3,r19
 402b4f0:	1cc00236 	bltu	r3,r19,402b4fc <__umoddi3+0x54c>
 402b4f4:	1880012e 	bgeu	r3,r2,402b4fc <__umoddi3+0x54c>
 402b4f8:	1cc7883a 	add	r3,r3,r19
 402b4fc:	18a3c83a 	sub	r17,r3,r2
 402b500:	003f2906 	br	402b1a8 <_gp+0xffff0a44>
 402b504:	e48fc83a 	sub	r7,fp,r18
 402b508:	1d49c83a 	sub	r4,r3,r21
 402b50c:	e1f9803a 	cmpltu	fp,fp,r7
 402b510:	2739c83a 	sub	fp,r4,fp
 402b514:	8f09c83a 	sub	r4,r17,fp
 402b518:	003fc306 	br	402b428 <_gp+0xffff0cc4>
 402b51c:	01000604 	movi	r4,24
 402b520:	003ef906 	br	402b108 <_gp+0xffff09a4>
 402b524:	00800604 	movi	r2,24
 402b528:	003f1306 	br	402b178 <_gp+0xffff0a14>
 402b52c:	01000604 	movi	r4,24
 402b530:	003eb606 	br	402b00c <_gp+0xffff08a8>
 402b534:	40bf902e 	bgeu	r8,r2,402b378 <_gp+0xffff0c14>
 402b538:	b5bfff84 	addi	r22,r22,-2
 402b53c:	4551883a 	add	r8,r8,r21
 402b540:	003f8e06 	br	402b37c <_gp+0xffff0c18>
 402b544:	18bf762e 	bgeu	r3,r2,402b320 <_gp+0xffff0bbc>
 402b548:	8c7fff84 	addi	r17,r17,-2
 402b54c:	1d47883a 	add	r3,r3,r21
 402b550:	003f7406 	br	402b324 <_gp+0xffff0bc0>
 402b554:	1cc7883a 	add	r3,r3,r19
 402b558:	003ecd06 	br	402b090 <_gp+0xffff092c>
 402b55c:	8005883a 	mov	r2,r16
 402b560:	003ef806 	br	402b144 <_gp+0xffff09e0>
 402b564:	873fe736 	bltu	r16,fp,402b504 <_gp+0xffff0da0>
 402b568:	e00f883a 	mov	r7,fp
 402b56c:	0009883a 	mov	r4,zero
 402b570:	003fad06 	br	402b428 <_gp+0xffff0cc4>

0402b574 <__adddf3>:
 402b574:	02c00434 	movhi	r11,16
 402b578:	5affffc4 	addi	r11,r11,-1
 402b57c:	2806d7fa 	srli	r3,r5,31
 402b580:	2ad4703a 	and	r10,r5,r11
 402b584:	3ad2703a 	and	r9,r7,r11
 402b588:	3804d53a 	srli	r2,r7,20
 402b58c:	3018d77a 	srli	r12,r6,29
 402b590:	280ad53a 	srli	r5,r5,20
 402b594:	501490fa 	slli	r10,r10,3
 402b598:	2010d77a 	srli	r8,r4,29
 402b59c:	481290fa 	slli	r9,r9,3
 402b5a0:	380ed7fa 	srli	r7,r7,31
 402b5a4:	defffb04 	addi	sp,sp,-20
 402b5a8:	dc800215 	stw	r18,8(sp)
 402b5ac:	dc400115 	stw	r17,4(sp)
 402b5b0:	dc000015 	stw	r16,0(sp)
 402b5b4:	dfc00415 	stw	ra,16(sp)
 402b5b8:	dcc00315 	stw	r19,12(sp)
 402b5bc:	1c803fcc 	andi	r18,r3,255
 402b5c0:	2c01ffcc 	andi	r16,r5,2047
 402b5c4:	5210b03a 	or	r8,r10,r8
 402b5c8:	202290fa 	slli	r17,r4,3
 402b5cc:	1081ffcc 	andi	r2,r2,2047
 402b5d0:	4b12b03a 	or	r9,r9,r12
 402b5d4:	300c90fa 	slli	r6,r6,3
 402b5d8:	91c07526 	beq	r18,r7,402b7b0 <__adddf3+0x23c>
 402b5dc:	8087c83a 	sub	r3,r16,r2
 402b5e0:	00c0ab0e 	bge	zero,r3,402b890 <__adddf3+0x31c>
 402b5e4:	10002a1e 	bne	r2,zero,402b690 <__adddf3+0x11c>
 402b5e8:	4984b03a 	or	r2,r9,r6
 402b5ec:	1000961e 	bne	r2,zero,402b848 <__adddf3+0x2d4>
 402b5f0:	888001cc 	andi	r2,r17,7
 402b5f4:	10000726 	beq	r2,zero,402b614 <__adddf3+0xa0>
 402b5f8:	888003cc 	andi	r2,r17,15
 402b5fc:	00c00104 	movi	r3,4
 402b600:	10c00426 	beq	r2,r3,402b614 <__adddf3+0xa0>
 402b604:	88c7883a 	add	r3,r17,r3
 402b608:	1c63803a 	cmpltu	r17,r3,r17
 402b60c:	4451883a 	add	r8,r8,r17
 402b610:	1823883a 	mov	r17,r3
 402b614:	4080202c 	andhi	r2,r8,128
 402b618:	10005926 	beq	r2,zero,402b780 <__adddf3+0x20c>
 402b61c:	84000044 	addi	r16,r16,1
 402b620:	0081ffc4 	movi	r2,2047
 402b624:	8080ba26 	beq	r16,r2,402b910 <__adddf3+0x39c>
 402b628:	00bfe034 	movhi	r2,65408
 402b62c:	10bfffc4 	addi	r2,r2,-1
 402b630:	4090703a 	and	r8,r8,r2
 402b634:	4004977a 	slli	r2,r8,29
 402b638:	4010927a 	slli	r8,r8,9
 402b63c:	8822d0fa 	srli	r17,r17,3
 402b640:	8401ffcc 	andi	r16,r16,2047
 402b644:	4010d33a 	srli	r8,r8,12
 402b648:	9007883a 	mov	r3,r18
 402b64c:	1444b03a 	or	r2,r2,r17
 402b650:	8401ffcc 	andi	r16,r16,2047
 402b654:	8020953a 	slli	r16,r16,20
 402b658:	18c03fcc 	andi	r3,r3,255
 402b65c:	01000434 	movhi	r4,16
 402b660:	213fffc4 	addi	r4,r4,-1
 402b664:	180697fa 	slli	r3,r3,31
 402b668:	4110703a 	and	r8,r8,r4
 402b66c:	4410b03a 	or	r8,r8,r16
 402b670:	40c6b03a 	or	r3,r8,r3
 402b674:	dfc00417 	ldw	ra,16(sp)
 402b678:	dcc00317 	ldw	r19,12(sp)
 402b67c:	dc800217 	ldw	r18,8(sp)
 402b680:	dc400117 	ldw	r17,4(sp)
 402b684:	dc000017 	ldw	r16,0(sp)
 402b688:	dec00504 	addi	sp,sp,20
 402b68c:	f800283a 	ret
 402b690:	0081ffc4 	movi	r2,2047
 402b694:	80bfd626 	beq	r16,r2,402b5f0 <_gp+0xffff0e8c>
 402b698:	4a402034 	orhi	r9,r9,128
 402b69c:	00800e04 	movi	r2,56
 402b6a0:	10c09f16 	blt	r2,r3,402b920 <__adddf3+0x3ac>
 402b6a4:	008007c4 	movi	r2,31
 402b6a8:	10c0c216 	blt	r2,r3,402b9b4 <__adddf3+0x440>
 402b6ac:	00800804 	movi	r2,32
 402b6b0:	10c5c83a 	sub	r2,r2,r3
 402b6b4:	488a983a 	sll	r5,r9,r2
 402b6b8:	30c8d83a 	srl	r4,r6,r3
 402b6bc:	3084983a 	sll	r2,r6,r2
 402b6c0:	48c6d83a 	srl	r3,r9,r3
 402b6c4:	290cb03a 	or	r6,r5,r4
 402b6c8:	1004c03a 	cmpne	r2,r2,zero
 402b6cc:	308cb03a 	or	r6,r6,r2
 402b6d0:	898dc83a 	sub	r6,r17,r6
 402b6d4:	89a3803a 	cmpltu	r17,r17,r6
 402b6d8:	40d1c83a 	sub	r8,r8,r3
 402b6dc:	4451c83a 	sub	r8,r8,r17
 402b6e0:	3023883a 	mov	r17,r6
 402b6e4:	4080202c 	andhi	r2,r8,128
 402b6e8:	10002326 	beq	r2,zero,402b778 <__adddf3+0x204>
 402b6ec:	04c02034 	movhi	r19,128
 402b6f0:	9cffffc4 	addi	r19,r19,-1
 402b6f4:	44e6703a 	and	r19,r8,r19
 402b6f8:	98007626 	beq	r19,zero,402b8d4 <__adddf3+0x360>
 402b6fc:	9809883a 	mov	r4,r19
 402b700:	402ddb40 	call	402ddb4 <__clzsi2>
 402b704:	10fffe04 	addi	r3,r2,-8
 402b708:	010007c4 	movi	r4,31
 402b70c:	20c07716 	blt	r4,r3,402b8ec <__adddf3+0x378>
 402b710:	00800804 	movi	r2,32
 402b714:	10c5c83a 	sub	r2,r2,r3
 402b718:	8884d83a 	srl	r2,r17,r2
 402b71c:	98d0983a 	sll	r8,r19,r3
 402b720:	88e2983a 	sll	r17,r17,r3
 402b724:	1204b03a 	or	r2,r2,r8
 402b728:	1c007416 	blt	r3,r16,402b8fc <__adddf3+0x388>
 402b72c:	1c21c83a 	sub	r16,r3,r16
 402b730:	82000044 	addi	r8,r16,1
 402b734:	00c007c4 	movi	r3,31
 402b738:	1a009116 	blt	r3,r8,402b980 <__adddf3+0x40c>
 402b73c:	00c00804 	movi	r3,32
 402b740:	1a07c83a 	sub	r3,r3,r8
 402b744:	8a08d83a 	srl	r4,r17,r8
 402b748:	88e2983a 	sll	r17,r17,r3
 402b74c:	10c6983a 	sll	r3,r2,r3
 402b750:	1210d83a 	srl	r8,r2,r8
 402b754:	8804c03a 	cmpne	r2,r17,zero
 402b758:	1906b03a 	or	r3,r3,r4
 402b75c:	18a2b03a 	or	r17,r3,r2
 402b760:	0021883a 	mov	r16,zero
 402b764:	003fa206 	br	402b5f0 <_gp+0xffff0e8c>
 402b768:	1890b03a 	or	r8,r3,r2
 402b76c:	40017d26 	beq	r8,zero,402bd64 <__adddf3+0x7f0>
 402b770:	1011883a 	mov	r8,r2
 402b774:	1823883a 	mov	r17,r3
 402b778:	888001cc 	andi	r2,r17,7
 402b77c:	103f9e1e 	bne	r2,zero,402b5f8 <_gp+0xffff0e94>
 402b780:	4004977a 	slli	r2,r8,29
 402b784:	8822d0fa 	srli	r17,r17,3
 402b788:	4010d0fa 	srli	r8,r8,3
 402b78c:	9007883a 	mov	r3,r18
 402b790:	1444b03a 	or	r2,r2,r17
 402b794:	0101ffc4 	movi	r4,2047
 402b798:	81002426 	beq	r16,r4,402b82c <__adddf3+0x2b8>
 402b79c:	8120703a 	and	r16,r16,r4
 402b7a0:	01000434 	movhi	r4,16
 402b7a4:	213fffc4 	addi	r4,r4,-1
 402b7a8:	4110703a 	and	r8,r8,r4
 402b7ac:	003fa806 	br	402b650 <_gp+0xffff0eec>
 402b7b0:	8089c83a 	sub	r4,r16,r2
 402b7b4:	01005e0e 	bge	zero,r4,402b930 <__adddf3+0x3bc>
 402b7b8:	10002b26 	beq	r2,zero,402b868 <__adddf3+0x2f4>
 402b7bc:	0081ffc4 	movi	r2,2047
 402b7c0:	80bf8b26 	beq	r16,r2,402b5f0 <_gp+0xffff0e8c>
 402b7c4:	4a402034 	orhi	r9,r9,128
 402b7c8:	00800e04 	movi	r2,56
 402b7cc:	1100a40e 	bge	r2,r4,402ba60 <__adddf3+0x4ec>
 402b7d0:	498cb03a 	or	r6,r9,r6
 402b7d4:	300ac03a 	cmpne	r5,r6,zero
 402b7d8:	0013883a 	mov	r9,zero
 402b7dc:	2c4b883a 	add	r5,r5,r17
 402b7e0:	2c63803a 	cmpltu	r17,r5,r17
 402b7e4:	4a11883a 	add	r8,r9,r8
 402b7e8:	8a11883a 	add	r8,r17,r8
 402b7ec:	2823883a 	mov	r17,r5
 402b7f0:	4080202c 	andhi	r2,r8,128
 402b7f4:	103fe026 	beq	r2,zero,402b778 <_gp+0xffff1014>
 402b7f8:	84000044 	addi	r16,r16,1
 402b7fc:	0081ffc4 	movi	r2,2047
 402b800:	8080d226 	beq	r16,r2,402bb4c <__adddf3+0x5d8>
 402b804:	00bfe034 	movhi	r2,65408
 402b808:	10bfffc4 	addi	r2,r2,-1
 402b80c:	4090703a 	and	r8,r8,r2
 402b810:	880ad07a 	srli	r5,r17,1
 402b814:	400897fa 	slli	r4,r8,31
 402b818:	88c0004c 	andi	r3,r17,1
 402b81c:	28e2b03a 	or	r17,r5,r3
 402b820:	4010d07a 	srli	r8,r8,1
 402b824:	2462b03a 	or	r17,r4,r17
 402b828:	003f7106 	br	402b5f0 <_gp+0xffff0e8c>
 402b82c:	4088b03a 	or	r4,r8,r2
 402b830:	20014526 	beq	r4,zero,402bd48 <__adddf3+0x7d4>
 402b834:	01000434 	movhi	r4,16
 402b838:	42000234 	orhi	r8,r8,8
 402b83c:	213fffc4 	addi	r4,r4,-1
 402b840:	4110703a 	and	r8,r8,r4
 402b844:	003f8206 	br	402b650 <_gp+0xffff0eec>
 402b848:	18ffffc4 	addi	r3,r3,-1
 402b84c:	1800491e 	bne	r3,zero,402b974 <__adddf3+0x400>
 402b850:	898bc83a 	sub	r5,r17,r6
 402b854:	8963803a 	cmpltu	r17,r17,r5
 402b858:	4251c83a 	sub	r8,r8,r9
 402b85c:	4451c83a 	sub	r8,r8,r17
 402b860:	2823883a 	mov	r17,r5
 402b864:	003f9f06 	br	402b6e4 <_gp+0xffff0f80>
 402b868:	4984b03a 	or	r2,r9,r6
 402b86c:	103f6026 	beq	r2,zero,402b5f0 <_gp+0xffff0e8c>
 402b870:	213fffc4 	addi	r4,r4,-1
 402b874:	2000931e 	bne	r4,zero,402bac4 <__adddf3+0x550>
 402b878:	898d883a 	add	r6,r17,r6
 402b87c:	3463803a 	cmpltu	r17,r6,r17
 402b880:	4251883a 	add	r8,r8,r9
 402b884:	8a11883a 	add	r8,r17,r8
 402b888:	3023883a 	mov	r17,r6
 402b88c:	003fd806 	br	402b7f0 <_gp+0xffff108c>
 402b890:	1800541e 	bne	r3,zero,402b9e4 <__adddf3+0x470>
 402b894:	80800044 	addi	r2,r16,1
 402b898:	1081ffcc 	andi	r2,r2,2047
 402b89c:	00c00044 	movi	r3,1
 402b8a0:	1880a00e 	bge	r3,r2,402bb24 <__adddf3+0x5b0>
 402b8a4:	8989c83a 	sub	r4,r17,r6
 402b8a8:	8905803a 	cmpltu	r2,r17,r4
 402b8ac:	4267c83a 	sub	r19,r8,r9
 402b8b0:	98a7c83a 	sub	r19,r19,r2
 402b8b4:	9880202c 	andhi	r2,r19,128
 402b8b8:	10006326 	beq	r2,zero,402ba48 <__adddf3+0x4d4>
 402b8bc:	3463c83a 	sub	r17,r6,r17
 402b8c0:	4a07c83a 	sub	r3,r9,r8
 402b8c4:	344d803a 	cmpltu	r6,r6,r17
 402b8c8:	19a7c83a 	sub	r19,r3,r6
 402b8cc:	3825883a 	mov	r18,r7
 402b8d0:	983f8a1e 	bne	r19,zero,402b6fc <_gp+0xffff0f98>
 402b8d4:	8809883a 	mov	r4,r17
 402b8d8:	402ddb40 	call	402ddb4 <__clzsi2>
 402b8dc:	10800804 	addi	r2,r2,32
 402b8e0:	10fffe04 	addi	r3,r2,-8
 402b8e4:	010007c4 	movi	r4,31
 402b8e8:	20ff890e 	bge	r4,r3,402b710 <_gp+0xffff0fac>
 402b8ec:	10bff604 	addi	r2,r2,-40
 402b8f0:	8884983a 	sll	r2,r17,r2
 402b8f4:	0023883a 	mov	r17,zero
 402b8f8:	1c3f8c0e 	bge	r3,r16,402b72c <_gp+0xffff0fc8>
 402b8fc:	023fe034 	movhi	r8,65408
 402b900:	423fffc4 	addi	r8,r8,-1
 402b904:	80e1c83a 	sub	r16,r16,r3
 402b908:	1210703a 	and	r8,r2,r8
 402b90c:	003f3806 	br	402b5f0 <_gp+0xffff0e8c>
 402b910:	9007883a 	mov	r3,r18
 402b914:	0011883a 	mov	r8,zero
 402b918:	0005883a 	mov	r2,zero
 402b91c:	003f4c06 	br	402b650 <_gp+0xffff0eec>
 402b920:	498cb03a 	or	r6,r9,r6
 402b924:	300cc03a 	cmpne	r6,r6,zero
 402b928:	0007883a 	mov	r3,zero
 402b92c:	003f6806 	br	402b6d0 <_gp+0xffff0f6c>
 402b930:	20009c1e 	bne	r4,zero,402bba4 <__adddf3+0x630>
 402b934:	80800044 	addi	r2,r16,1
 402b938:	1141ffcc 	andi	r5,r2,2047
 402b93c:	01000044 	movi	r4,1
 402b940:	2140670e 	bge	r4,r5,402bae0 <__adddf3+0x56c>
 402b944:	0101ffc4 	movi	r4,2047
 402b948:	11007f26 	beq	r2,r4,402bb48 <__adddf3+0x5d4>
 402b94c:	898d883a 	add	r6,r17,r6
 402b950:	4247883a 	add	r3,r8,r9
 402b954:	3451803a 	cmpltu	r8,r6,r17
 402b958:	40d1883a 	add	r8,r8,r3
 402b95c:	402297fa 	slli	r17,r8,31
 402b960:	300cd07a 	srli	r6,r6,1
 402b964:	4010d07a 	srli	r8,r8,1
 402b968:	1021883a 	mov	r16,r2
 402b96c:	89a2b03a 	or	r17,r17,r6
 402b970:	003f1f06 	br	402b5f0 <_gp+0xffff0e8c>
 402b974:	0081ffc4 	movi	r2,2047
 402b978:	80bf481e 	bne	r16,r2,402b69c <_gp+0xffff0f38>
 402b97c:	003f1c06 	br	402b5f0 <_gp+0xffff0e8c>
 402b980:	843ff844 	addi	r16,r16,-31
 402b984:	01000804 	movi	r4,32
 402b988:	1406d83a 	srl	r3,r2,r16
 402b98c:	41005026 	beq	r8,r4,402bad0 <__adddf3+0x55c>
 402b990:	01001004 	movi	r4,64
 402b994:	2211c83a 	sub	r8,r4,r8
 402b998:	1204983a 	sll	r2,r2,r8
 402b99c:	88a2b03a 	or	r17,r17,r2
 402b9a0:	8822c03a 	cmpne	r17,r17,zero
 402b9a4:	1c62b03a 	or	r17,r3,r17
 402b9a8:	0011883a 	mov	r8,zero
 402b9ac:	0021883a 	mov	r16,zero
 402b9b0:	003f7106 	br	402b778 <_gp+0xffff1014>
 402b9b4:	193ff804 	addi	r4,r3,-32
 402b9b8:	00800804 	movi	r2,32
 402b9bc:	4908d83a 	srl	r4,r9,r4
 402b9c0:	18804526 	beq	r3,r2,402bad8 <__adddf3+0x564>
 402b9c4:	00801004 	movi	r2,64
 402b9c8:	10c5c83a 	sub	r2,r2,r3
 402b9cc:	4886983a 	sll	r3,r9,r2
 402b9d0:	198cb03a 	or	r6,r3,r6
 402b9d4:	300cc03a 	cmpne	r6,r6,zero
 402b9d8:	218cb03a 	or	r6,r4,r6
 402b9dc:	0007883a 	mov	r3,zero
 402b9e0:	003f3b06 	br	402b6d0 <_gp+0xffff0f6c>
 402b9e4:	80002a26 	beq	r16,zero,402ba90 <__adddf3+0x51c>
 402b9e8:	0101ffc4 	movi	r4,2047
 402b9ec:	11006826 	beq	r2,r4,402bb90 <__adddf3+0x61c>
 402b9f0:	00c7c83a 	sub	r3,zero,r3
 402b9f4:	42002034 	orhi	r8,r8,128
 402b9f8:	01000e04 	movi	r4,56
 402b9fc:	20c07c16 	blt	r4,r3,402bbf0 <__adddf3+0x67c>
 402ba00:	010007c4 	movi	r4,31
 402ba04:	20c0da16 	blt	r4,r3,402bd70 <__adddf3+0x7fc>
 402ba08:	01000804 	movi	r4,32
 402ba0c:	20c9c83a 	sub	r4,r4,r3
 402ba10:	4114983a 	sll	r10,r8,r4
 402ba14:	88cad83a 	srl	r5,r17,r3
 402ba18:	8908983a 	sll	r4,r17,r4
 402ba1c:	40c6d83a 	srl	r3,r8,r3
 402ba20:	5162b03a 	or	r17,r10,r5
 402ba24:	2008c03a 	cmpne	r4,r4,zero
 402ba28:	8922b03a 	or	r17,r17,r4
 402ba2c:	3463c83a 	sub	r17,r6,r17
 402ba30:	48c7c83a 	sub	r3,r9,r3
 402ba34:	344d803a 	cmpltu	r6,r6,r17
 402ba38:	1991c83a 	sub	r8,r3,r6
 402ba3c:	1021883a 	mov	r16,r2
 402ba40:	3825883a 	mov	r18,r7
 402ba44:	003f2706 	br	402b6e4 <_gp+0xffff0f80>
 402ba48:	24d0b03a 	or	r8,r4,r19
 402ba4c:	40001b1e 	bne	r8,zero,402babc <__adddf3+0x548>
 402ba50:	0005883a 	mov	r2,zero
 402ba54:	0007883a 	mov	r3,zero
 402ba58:	0021883a 	mov	r16,zero
 402ba5c:	003f4d06 	br	402b794 <_gp+0xffff1030>
 402ba60:	008007c4 	movi	r2,31
 402ba64:	11003c16 	blt	r2,r4,402bb58 <__adddf3+0x5e4>
 402ba68:	00800804 	movi	r2,32
 402ba6c:	1105c83a 	sub	r2,r2,r4
 402ba70:	488e983a 	sll	r7,r9,r2
 402ba74:	310ad83a 	srl	r5,r6,r4
 402ba78:	3084983a 	sll	r2,r6,r2
 402ba7c:	4912d83a 	srl	r9,r9,r4
 402ba80:	394ab03a 	or	r5,r7,r5
 402ba84:	1004c03a 	cmpne	r2,r2,zero
 402ba88:	288ab03a 	or	r5,r5,r2
 402ba8c:	003f5306 	br	402b7dc <_gp+0xffff1078>
 402ba90:	4448b03a 	or	r4,r8,r17
 402ba94:	20003e26 	beq	r4,zero,402bb90 <__adddf3+0x61c>
 402ba98:	00c6303a 	nor	r3,zero,r3
 402ba9c:	18003a1e 	bne	r3,zero,402bb88 <__adddf3+0x614>
 402baa0:	3463c83a 	sub	r17,r6,r17
 402baa4:	4a07c83a 	sub	r3,r9,r8
 402baa8:	344d803a 	cmpltu	r6,r6,r17
 402baac:	1991c83a 	sub	r8,r3,r6
 402bab0:	1021883a 	mov	r16,r2
 402bab4:	3825883a 	mov	r18,r7
 402bab8:	003f0a06 	br	402b6e4 <_gp+0xffff0f80>
 402babc:	2023883a 	mov	r17,r4
 402bac0:	003f0d06 	br	402b6f8 <_gp+0xffff0f94>
 402bac4:	0081ffc4 	movi	r2,2047
 402bac8:	80bf3f1e 	bne	r16,r2,402b7c8 <_gp+0xffff1064>
 402bacc:	003ec806 	br	402b5f0 <_gp+0xffff0e8c>
 402bad0:	0005883a 	mov	r2,zero
 402bad4:	003fb106 	br	402b99c <_gp+0xffff1238>
 402bad8:	0007883a 	mov	r3,zero
 402badc:	003fbc06 	br	402b9d0 <_gp+0xffff126c>
 402bae0:	4444b03a 	or	r2,r8,r17
 402bae4:	8000871e 	bne	r16,zero,402bd04 <__adddf3+0x790>
 402bae8:	1000ba26 	beq	r2,zero,402bdd4 <__adddf3+0x860>
 402baec:	4984b03a 	or	r2,r9,r6
 402baf0:	103ebf26 	beq	r2,zero,402b5f0 <_gp+0xffff0e8c>
 402baf4:	8985883a 	add	r2,r17,r6
 402baf8:	4247883a 	add	r3,r8,r9
 402bafc:	1451803a 	cmpltu	r8,r2,r17
 402bb00:	40d1883a 	add	r8,r8,r3
 402bb04:	40c0202c 	andhi	r3,r8,128
 402bb08:	1023883a 	mov	r17,r2
 402bb0c:	183f1a26 	beq	r3,zero,402b778 <_gp+0xffff1014>
 402bb10:	00bfe034 	movhi	r2,65408
 402bb14:	10bfffc4 	addi	r2,r2,-1
 402bb18:	2021883a 	mov	r16,r4
 402bb1c:	4090703a 	and	r8,r8,r2
 402bb20:	003eb306 	br	402b5f0 <_gp+0xffff0e8c>
 402bb24:	4444b03a 	or	r2,r8,r17
 402bb28:	8000291e 	bne	r16,zero,402bbd0 <__adddf3+0x65c>
 402bb2c:	10004b1e 	bne	r2,zero,402bc5c <__adddf3+0x6e8>
 402bb30:	4990b03a 	or	r8,r9,r6
 402bb34:	40008b26 	beq	r8,zero,402bd64 <__adddf3+0x7f0>
 402bb38:	4811883a 	mov	r8,r9
 402bb3c:	3023883a 	mov	r17,r6
 402bb40:	3825883a 	mov	r18,r7
 402bb44:	003eaa06 	br	402b5f0 <_gp+0xffff0e8c>
 402bb48:	1021883a 	mov	r16,r2
 402bb4c:	0011883a 	mov	r8,zero
 402bb50:	0005883a 	mov	r2,zero
 402bb54:	003f0f06 	br	402b794 <_gp+0xffff1030>
 402bb58:	217ff804 	addi	r5,r4,-32
 402bb5c:	00800804 	movi	r2,32
 402bb60:	494ad83a 	srl	r5,r9,r5
 402bb64:	20807d26 	beq	r4,r2,402bd5c <__adddf3+0x7e8>
 402bb68:	00801004 	movi	r2,64
 402bb6c:	1109c83a 	sub	r4,r2,r4
 402bb70:	4912983a 	sll	r9,r9,r4
 402bb74:	498cb03a 	or	r6,r9,r6
 402bb78:	300cc03a 	cmpne	r6,r6,zero
 402bb7c:	298ab03a 	or	r5,r5,r6
 402bb80:	0013883a 	mov	r9,zero
 402bb84:	003f1506 	br	402b7dc <_gp+0xffff1078>
 402bb88:	0101ffc4 	movi	r4,2047
 402bb8c:	113f9a1e 	bne	r2,r4,402b9f8 <_gp+0xffff1294>
 402bb90:	4811883a 	mov	r8,r9
 402bb94:	3023883a 	mov	r17,r6
 402bb98:	1021883a 	mov	r16,r2
 402bb9c:	3825883a 	mov	r18,r7
 402bba0:	003e9306 	br	402b5f0 <_gp+0xffff0e8c>
 402bba4:	8000161e 	bne	r16,zero,402bc00 <__adddf3+0x68c>
 402bba8:	444ab03a 	or	r5,r8,r17
 402bbac:	28005126 	beq	r5,zero,402bcf4 <__adddf3+0x780>
 402bbb0:	0108303a 	nor	r4,zero,r4
 402bbb4:	20004d1e 	bne	r4,zero,402bcec <__adddf3+0x778>
 402bbb8:	89a3883a 	add	r17,r17,r6
 402bbbc:	4253883a 	add	r9,r8,r9
 402bbc0:	898d803a 	cmpltu	r6,r17,r6
 402bbc4:	3251883a 	add	r8,r6,r9
 402bbc8:	1021883a 	mov	r16,r2
 402bbcc:	003f0806 	br	402b7f0 <_gp+0xffff108c>
 402bbd0:	1000301e 	bne	r2,zero,402bc94 <__adddf3+0x720>
 402bbd4:	4984b03a 	or	r2,r9,r6
 402bbd8:	10007126 	beq	r2,zero,402bda0 <__adddf3+0x82c>
 402bbdc:	4811883a 	mov	r8,r9
 402bbe0:	3023883a 	mov	r17,r6
 402bbe4:	3825883a 	mov	r18,r7
 402bbe8:	0401ffc4 	movi	r16,2047
 402bbec:	003e8006 	br	402b5f0 <_gp+0xffff0e8c>
 402bbf0:	4462b03a 	or	r17,r8,r17
 402bbf4:	8822c03a 	cmpne	r17,r17,zero
 402bbf8:	0007883a 	mov	r3,zero
 402bbfc:	003f8b06 	br	402ba2c <_gp+0xffff12c8>
 402bc00:	0141ffc4 	movi	r5,2047
 402bc04:	11403b26 	beq	r2,r5,402bcf4 <__adddf3+0x780>
 402bc08:	0109c83a 	sub	r4,zero,r4
 402bc0c:	42002034 	orhi	r8,r8,128
 402bc10:	01400e04 	movi	r5,56
 402bc14:	29006716 	blt	r5,r4,402bdb4 <__adddf3+0x840>
 402bc18:	014007c4 	movi	r5,31
 402bc1c:	29007016 	blt	r5,r4,402bde0 <__adddf3+0x86c>
 402bc20:	01400804 	movi	r5,32
 402bc24:	290bc83a 	sub	r5,r5,r4
 402bc28:	4154983a 	sll	r10,r8,r5
 402bc2c:	890ed83a 	srl	r7,r17,r4
 402bc30:	894a983a 	sll	r5,r17,r5
 402bc34:	4108d83a 	srl	r4,r8,r4
 402bc38:	51e2b03a 	or	r17,r10,r7
 402bc3c:	280ac03a 	cmpne	r5,r5,zero
 402bc40:	8962b03a 	or	r17,r17,r5
 402bc44:	89a3883a 	add	r17,r17,r6
 402bc48:	2253883a 	add	r9,r4,r9
 402bc4c:	898d803a 	cmpltu	r6,r17,r6
 402bc50:	3251883a 	add	r8,r6,r9
 402bc54:	1021883a 	mov	r16,r2
 402bc58:	003ee506 	br	402b7f0 <_gp+0xffff108c>
 402bc5c:	4984b03a 	or	r2,r9,r6
 402bc60:	103e6326 	beq	r2,zero,402b5f0 <_gp+0xffff0e8c>
 402bc64:	8987c83a 	sub	r3,r17,r6
 402bc68:	88c9803a 	cmpltu	r4,r17,r3
 402bc6c:	4245c83a 	sub	r2,r8,r9
 402bc70:	1105c83a 	sub	r2,r2,r4
 402bc74:	1100202c 	andhi	r4,r2,128
 402bc78:	203ebb26 	beq	r4,zero,402b768 <_gp+0xffff1004>
 402bc7c:	3463c83a 	sub	r17,r6,r17
 402bc80:	4a07c83a 	sub	r3,r9,r8
 402bc84:	344d803a 	cmpltu	r6,r6,r17
 402bc88:	1991c83a 	sub	r8,r3,r6
 402bc8c:	3825883a 	mov	r18,r7
 402bc90:	003e5706 	br	402b5f0 <_gp+0xffff0e8c>
 402bc94:	4984b03a 	or	r2,r9,r6
 402bc98:	10002e26 	beq	r2,zero,402bd54 <__adddf3+0x7e0>
 402bc9c:	4004d0fa 	srli	r2,r8,3
 402bca0:	8822d0fa 	srli	r17,r17,3
 402bca4:	4010977a 	slli	r8,r8,29
 402bca8:	10c0022c 	andhi	r3,r2,8
 402bcac:	4462b03a 	or	r17,r8,r17
 402bcb0:	18000826 	beq	r3,zero,402bcd4 <__adddf3+0x760>
 402bcb4:	4808d0fa 	srli	r4,r9,3
 402bcb8:	20c0022c 	andhi	r3,r4,8
 402bcbc:	1800051e 	bne	r3,zero,402bcd4 <__adddf3+0x760>
 402bcc0:	300cd0fa 	srli	r6,r6,3
 402bcc4:	4806977a 	slli	r3,r9,29
 402bcc8:	2005883a 	mov	r2,r4
 402bccc:	3825883a 	mov	r18,r7
 402bcd0:	19a2b03a 	or	r17,r3,r6
 402bcd4:	8810d77a 	srli	r8,r17,29
 402bcd8:	100490fa 	slli	r2,r2,3
 402bcdc:	882290fa 	slli	r17,r17,3
 402bce0:	0401ffc4 	movi	r16,2047
 402bce4:	4090b03a 	or	r8,r8,r2
 402bce8:	003e4106 	br	402b5f0 <_gp+0xffff0e8c>
 402bcec:	0141ffc4 	movi	r5,2047
 402bcf0:	117fc71e 	bne	r2,r5,402bc10 <_gp+0xffff14ac>
 402bcf4:	4811883a 	mov	r8,r9
 402bcf8:	3023883a 	mov	r17,r6
 402bcfc:	1021883a 	mov	r16,r2
 402bd00:	003e3b06 	br	402b5f0 <_gp+0xffff0e8c>
 402bd04:	10002f26 	beq	r2,zero,402bdc4 <__adddf3+0x850>
 402bd08:	4984b03a 	or	r2,r9,r6
 402bd0c:	10001126 	beq	r2,zero,402bd54 <__adddf3+0x7e0>
 402bd10:	4004d0fa 	srli	r2,r8,3
 402bd14:	8822d0fa 	srli	r17,r17,3
 402bd18:	4010977a 	slli	r8,r8,29
 402bd1c:	10c0022c 	andhi	r3,r2,8
 402bd20:	4462b03a 	or	r17,r8,r17
 402bd24:	183feb26 	beq	r3,zero,402bcd4 <_gp+0xffff1570>
 402bd28:	4808d0fa 	srli	r4,r9,3
 402bd2c:	20c0022c 	andhi	r3,r4,8
 402bd30:	183fe81e 	bne	r3,zero,402bcd4 <_gp+0xffff1570>
 402bd34:	300cd0fa 	srli	r6,r6,3
 402bd38:	4806977a 	slli	r3,r9,29
 402bd3c:	2005883a 	mov	r2,r4
 402bd40:	19a2b03a 	or	r17,r3,r6
 402bd44:	003fe306 	br	402bcd4 <_gp+0xffff1570>
 402bd48:	0011883a 	mov	r8,zero
 402bd4c:	0005883a 	mov	r2,zero
 402bd50:	003e3f06 	br	402b650 <_gp+0xffff0eec>
 402bd54:	0401ffc4 	movi	r16,2047
 402bd58:	003e2506 	br	402b5f0 <_gp+0xffff0e8c>
 402bd5c:	0013883a 	mov	r9,zero
 402bd60:	003f8406 	br	402bb74 <_gp+0xffff1410>
 402bd64:	0005883a 	mov	r2,zero
 402bd68:	0007883a 	mov	r3,zero
 402bd6c:	003e8906 	br	402b794 <_gp+0xffff1030>
 402bd70:	197ff804 	addi	r5,r3,-32
 402bd74:	01000804 	movi	r4,32
 402bd78:	414ad83a 	srl	r5,r8,r5
 402bd7c:	19002426 	beq	r3,r4,402be10 <__adddf3+0x89c>
 402bd80:	01001004 	movi	r4,64
 402bd84:	20c7c83a 	sub	r3,r4,r3
 402bd88:	40c6983a 	sll	r3,r8,r3
 402bd8c:	1c46b03a 	or	r3,r3,r17
 402bd90:	1806c03a 	cmpne	r3,r3,zero
 402bd94:	28e2b03a 	or	r17,r5,r3
 402bd98:	0007883a 	mov	r3,zero
 402bd9c:	003f2306 	br	402ba2c <_gp+0xffff12c8>
 402bda0:	0007883a 	mov	r3,zero
 402bda4:	5811883a 	mov	r8,r11
 402bda8:	00bfffc4 	movi	r2,-1
 402bdac:	0401ffc4 	movi	r16,2047
 402bdb0:	003e7806 	br	402b794 <_gp+0xffff1030>
 402bdb4:	4462b03a 	or	r17,r8,r17
 402bdb8:	8822c03a 	cmpne	r17,r17,zero
 402bdbc:	0009883a 	mov	r4,zero
 402bdc0:	003fa006 	br	402bc44 <_gp+0xffff14e0>
 402bdc4:	4811883a 	mov	r8,r9
 402bdc8:	3023883a 	mov	r17,r6
 402bdcc:	0401ffc4 	movi	r16,2047
 402bdd0:	003e0706 	br	402b5f0 <_gp+0xffff0e8c>
 402bdd4:	4811883a 	mov	r8,r9
 402bdd8:	3023883a 	mov	r17,r6
 402bddc:	003e0406 	br	402b5f0 <_gp+0xffff0e8c>
 402bde0:	21fff804 	addi	r7,r4,-32
 402bde4:	01400804 	movi	r5,32
 402bde8:	41ced83a 	srl	r7,r8,r7
 402bdec:	21400a26 	beq	r4,r5,402be18 <__adddf3+0x8a4>
 402bdf0:	01401004 	movi	r5,64
 402bdf4:	2909c83a 	sub	r4,r5,r4
 402bdf8:	4108983a 	sll	r4,r8,r4
 402bdfc:	2448b03a 	or	r4,r4,r17
 402be00:	2008c03a 	cmpne	r4,r4,zero
 402be04:	3922b03a 	or	r17,r7,r4
 402be08:	0009883a 	mov	r4,zero
 402be0c:	003f8d06 	br	402bc44 <_gp+0xffff14e0>
 402be10:	0007883a 	mov	r3,zero
 402be14:	003fdd06 	br	402bd8c <_gp+0xffff1628>
 402be18:	0009883a 	mov	r4,zero
 402be1c:	003ff706 	br	402bdfc <_gp+0xffff1698>

0402be20 <__divdf3>:
 402be20:	defff004 	addi	sp,sp,-64
 402be24:	dc800815 	stw	r18,32(sp)
 402be28:	2824d53a 	srli	r18,r5,20
 402be2c:	dd800c15 	stw	r22,48(sp)
 402be30:	282cd7fa 	srli	r22,r5,31
 402be34:	dc000615 	stw	r16,24(sp)
 402be38:	04000434 	movhi	r16,16
 402be3c:	843fffc4 	addi	r16,r16,-1
 402be40:	dfc00f15 	stw	ra,60(sp)
 402be44:	df000e15 	stw	fp,56(sp)
 402be48:	ddc00d15 	stw	r23,52(sp)
 402be4c:	dd400b15 	stw	r21,44(sp)
 402be50:	dd000a15 	stw	r20,40(sp)
 402be54:	dcc00915 	stw	r19,36(sp)
 402be58:	dc400715 	stw	r17,28(sp)
 402be5c:	9481ffcc 	andi	r18,r18,2047
 402be60:	2c20703a 	and	r16,r5,r16
 402be64:	b2003fcc 	andi	r8,r22,255
 402be68:	90006126 	beq	r18,zero,402bff0 <__divdf3+0x1d0>
 402be6c:	0081ffc4 	movi	r2,2047
 402be70:	202b883a 	mov	r21,r4
 402be74:	90803726 	beq	r18,r2,402bf54 <__divdf3+0x134>
 402be78:	80800434 	orhi	r2,r16,16
 402be7c:	100490fa 	slli	r2,r2,3
 402be80:	2020d77a 	srli	r16,r4,29
 402be84:	202a90fa 	slli	r21,r4,3
 402be88:	94bf0044 	addi	r18,r18,-1023
 402be8c:	80a0b03a 	or	r16,r16,r2
 402be90:	0013883a 	mov	r9,zero
 402be94:	000b883a 	mov	r5,zero
 402be98:	3806d53a 	srli	r3,r7,20
 402be9c:	382ed7fa 	srli	r23,r7,31
 402bea0:	04400434 	movhi	r17,16
 402bea4:	8c7fffc4 	addi	r17,r17,-1
 402bea8:	18c1ffcc 	andi	r3,r3,2047
 402beac:	3029883a 	mov	r20,r6
 402beb0:	3c62703a 	and	r17,r7,r17
 402beb4:	bf003fcc 	andi	fp,r23,255
 402beb8:	18006e26 	beq	r3,zero,402c074 <__divdf3+0x254>
 402bebc:	0081ffc4 	movi	r2,2047
 402bec0:	18806626 	beq	r3,r2,402c05c <__divdf3+0x23c>
 402bec4:	88800434 	orhi	r2,r17,16
 402bec8:	100490fa 	slli	r2,r2,3
 402becc:	3022d77a 	srli	r17,r6,29
 402bed0:	302890fa 	slli	r20,r6,3
 402bed4:	18ff0044 	addi	r3,r3,-1023
 402bed8:	88a2b03a 	or	r17,r17,r2
 402bedc:	000f883a 	mov	r7,zero
 402bee0:	b5e6f03a 	xor	r19,r22,r23
 402bee4:	3a4cb03a 	or	r6,r7,r9
 402bee8:	008003c4 	movi	r2,15
 402beec:	9809883a 	mov	r4,r19
 402bef0:	90c7c83a 	sub	r3,r18,r3
 402bef4:	9cc03fcc 	andi	r19,r19,255
 402bef8:	11809636 	bltu	r2,r6,402c154 <__divdf3+0x334>
 402befc:	300c90ba 	slli	r6,r6,2
 402bf00:	008100f4 	movhi	r2,1027
 402bf04:	10afc504 	addi	r2,r2,-16620
 402bf08:	308d883a 	add	r6,r6,r2
 402bf0c:	30800017 	ldw	r2,0(r6)
 402bf10:	1000683a 	jmp	r2
 402bf14:	0402c154 	movui	r16,2821
 402bf18:	0402bf8c 	andi	r16,zero,2814
 402bf1c:	0402c144 	movi	r16,2821
 402bf20:	0402bf80 	call	402bf8 <__alt_mem_sdram+0x402bf8>
 402bf24:	0402c144 	movi	r16,2821
 402bf28:	0402c118 	cmpnei	r16,zero,2820
 402bf2c:	0402c144 	movi	r16,2821
 402bf30:	0402bf80 	call	402bf8 <__alt_mem_sdram+0x402bf8>
 402bf34:	0402bf8c 	andi	r16,zero,2814
 402bf38:	0402bf8c 	andi	r16,zero,2814
 402bf3c:	0402c118 	cmpnei	r16,zero,2820
 402bf40:	0402bf80 	call	402bf8 <__alt_mem_sdram+0x402bf8>
 402bf44:	0402bf70 	cmpltui	r16,zero,2813
 402bf48:	0402bf70 	cmpltui	r16,zero,2813
 402bf4c:	0402bf70 	cmpltui	r16,zero,2813
 402bf50:	0402c4dc 	xori	r16,zero,2835
 402bf54:	2404b03a 	or	r2,r4,r16
 402bf58:	10006c1e 	bne	r2,zero,402c10c <__divdf3+0x2ec>
 402bf5c:	02400204 	movi	r9,8
 402bf60:	0021883a 	mov	r16,zero
 402bf64:	002b883a 	mov	r21,zero
 402bf68:	01400084 	movi	r5,2
 402bf6c:	003fca06 	br	402be98 <_gp+0xffff1734>
 402bf70:	8023883a 	mov	r17,r16
 402bf74:	a829883a 	mov	r20,r21
 402bf78:	4039883a 	mov	fp,r8
 402bf7c:	280f883a 	mov	r7,r5
 402bf80:	00800084 	movi	r2,2
 402bf84:	3881601e 	bne	r7,r2,402c508 <__divdf3+0x6e8>
 402bf88:	e027883a 	mov	r19,fp
 402bf8c:	9900004c 	andi	r4,r19,1
 402bf90:	0081ffc4 	movi	r2,2047
 402bf94:	0021883a 	mov	r16,zero
 402bf98:	002b883a 	mov	r21,zero
 402bf9c:	1004953a 	slli	r2,r2,20
 402bfa0:	20c03fcc 	andi	r3,r4,255
 402bfa4:	01400434 	movhi	r5,16
 402bfa8:	297fffc4 	addi	r5,r5,-1
 402bfac:	180697fa 	slli	r3,r3,31
 402bfb0:	8160703a 	and	r16,r16,r5
 402bfb4:	80a0b03a 	or	r16,r16,r2
 402bfb8:	80c6b03a 	or	r3,r16,r3
 402bfbc:	a805883a 	mov	r2,r21
 402bfc0:	dfc00f17 	ldw	ra,60(sp)
 402bfc4:	df000e17 	ldw	fp,56(sp)
 402bfc8:	ddc00d17 	ldw	r23,52(sp)
 402bfcc:	dd800c17 	ldw	r22,48(sp)
 402bfd0:	dd400b17 	ldw	r21,44(sp)
 402bfd4:	dd000a17 	ldw	r20,40(sp)
 402bfd8:	dcc00917 	ldw	r19,36(sp)
 402bfdc:	dc800817 	ldw	r18,32(sp)
 402bfe0:	dc400717 	ldw	r17,28(sp)
 402bfe4:	dc000617 	ldw	r16,24(sp)
 402bfe8:	dec01004 	addi	sp,sp,64
 402bfec:	f800283a 	ret
 402bff0:	2404b03a 	or	r2,r4,r16
 402bff4:	2023883a 	mov	r17,r4
 402bff8:	10003f26 	beq	r2,zero,402c0f8 <__divdf3+0x2d8>
 402bffc:	80015e26 	beq	r16,zero,402c578 <__divdf3+0x758>
 402c000:	8009883a 	mov	r4,r16
 402c004:	d9800215 	stw	r6,8(sp)
 402c008:	d9c00515 	stw	r7,20(sp)
 402c00c:	da000415 	stw	r8,16(sp)
 402c010:	402ddb40 	call	402ddb4 <__clzsi2>
 402c014:	d9800217 	ldw	r6,8(sp)
 402c018:	d9c00517 	ldw	r7,20(sp)
 402c01c:	da000417 	ldw	r8,16(sp)
 402c020:	113ffd44 	addi	r4,r2,-11
 402c024:	00c00704 	movi	r3,28
 402c028:	19014f16 	blt	r3,r4,402c568 <__divdf3+0x748>
 402c02c:	00c00744 	movi	r3,29
 402c030:	157ffe04 	addi	r21,r2,-8
 402c034:	1907c83a 	sub	r3,r3,r4
 402c038:	8560983a 	sll	r16,r16,r21
 402c03c:	88c6d83a 	srl	r3,r17,r3
 402c040:	8d6a983a 	sll	r21,r17,r21
 402c044:	1c20b03a 	or	r16,r3,r16
 402c048:	1080fcc4 	addi	r2,r2,1011
 402c04c:	00a5c83a 	sub	r18,zero,r2
 402c050:	0013883a 	mov	r9,zero
 402c054:	000b883a 	mov	r5,zero
 402c058:	003f8f06 	br	402be98 <_gp+0xffff1734>
 402c05c:	3444b03a 	or	r2,r6,r17
 402c060:	1000231e 	bne	r2,zero,402c0f0 <__divdf3+0x2d0>
 402c064:	0023883a 	mov	r17,zero
 402c068:	0029883a 	mov	r20,zero
 402c06c:	01c00084 	movi	r7,2
 402c070:	003f9b06 	br	402bee0 <_gp+0xffff177c>
 402c074:	3444b03a 	or	r2,r6,r17
 402c078:	10001926 	beq	r2,zero,402c0e0 <__divdf3+0x2c0>
 402c07c:	88014b26 	beq	r17,zero,402c5ac <__divdf3+0x78c>
 402c080:	8809883a 	mov	r4,r17
 402c084:	d9400115 	stw	r5,4(sp)
 402c088:	d9800215 	stw	r6,8(sp)
 402c08c:	da000415 	stw	r8,16(sp)
 402c090:	da400315 	stw	r9,12(sp)
 402c094:	402ddb40 	call	402ddb4 <__clzsi2>
 402c098:	d9400117 	ldw	r5,4(sp)
 402c09c:	d9800217 	ldw	r6,8(sp)
 402c0a0:	da000417 	ldw	r8,16(sp)
 402c0a4:	da400317 	ldw	r9,12(sp)
 402c0a8:	113ffd44 	addi	r4,r2,-11
 402c0ac:	00c00704 	movi	r3,28
 402c0b0:	19013a16 	blt	r3,r4,402c59c <__divdf3+0x77c>
 402c0b4:	00c00744 	movi	r3,29
 402c0b8:	153ffe04 	addi	r20,r2,-8
 402c0bc:	1907c83a 	sub	r3,r3,r4
 402c0c0:	8d22983a 	sll	r17,r17,r20
 402c0c4:	30c6d83a 	srl	r3,r6,r3
 402c0c8:	3528983a 	sll	r20,r6,r20
 402c0cc:	1c62b03a 	or	r17,r3,r17
 402c0d0:	1080fcc4 	addi	r2,r2,1011
 402c0d4:	0087c83a 	sub	r3,zero,r2
 402c0d8:	000f883a 	mov	r7,zero
 402c0dc:	003f8006 	br	402bee0 <_gp+0xffff177c>
 402c0e0:	0023883a 	mov	r17,zero
 402c0e4:	0029883a 	mov	r20,zero
 402c0e8:	01c00044 	movi	r7,1
 402c0ec:	003f7c06 	br	402bee0 <_gp+0xffff177c>
 402c0f0:	01c000c4 	movi	r7,3
 402c0f4:	003f7a06 	br	402bee0 <_gp+0xffff177c>
 402c0f8:	02400104 	movi	r9,4
 402c0fc:	0021883a 	mov	r16,zero
 402c100:	002b883a 	mov	r21,zero
 402c104:	01400044 	movi	r5,1
 402c108:	003f6306 	br	402be98 <_gp+0xffff1734>
 402c10c:	02400304 	movi	r9,12
 402c110:	014000c4 	movi	r5,3
 402c114:	003f6006 	br	402be98 <_gp+0xffff1734>
 402c118:	04000434 	movhi	r16,16
 402c11c:	0009883a 	mov	r4,zero
 402c120:	843fffc4 	addi	r16,r16,-1
 402c124:	057fffc4 	movi	r21,-1
 402c128:	0081ffc4 	movi	r2,2047
 402c12c:	003f9b06 	br	402bf9c <_gp+0xffff1838>
 402c130:	00c00044 	movi	r3,1
 402c134:	1887c83a 	sub	r3,r3,r2
 402c138:	01000e04 	movi	r4,56
 402c13c:	20c1530e 	bge	r4,r3,402c68c <__divdf3+0x86c>
 402c140:	9900004c 	andi	r4,r19,1
 402c144:	0005883a 	mov	r2,zero
 402c148:	0021883a 	mov	r16,zero
 402c14c:	002b883a 	mov	r21,zero
 402c150:	003f9206 	br	402bf9c <_gp+0xffff1838>
 402c154:	8c012e36 	bltu	r17,r16,402c610 <__divdf3+0x7f0>
 402c158:	84412c26 	beq	r16,r17,402c60c <__divdf3+0x7ec>
 402c15c:	a82f883a 	mov	r23,r21
 402c160:	18ffffc4 	addi	r3,r3,-1
 402c164:	002b883a 	mov	r21,zero
 402c168:	a004d63a 	srli	r2,r20,24
 402c16c:	8822923a 	slli	r17,r17,8
 402c170:	a028923a 	slli	r20,r20,8
 402c174:	8009883a 	mov	r4,r16
 402c178:	88acb03a 	or	r22,r17,r2
 402c17c:	dd000015 	stw	r20,0(sp)
 402c180:	b028d43a 	srli	r20,r22,16
 402c184:	d8c00215 	stw	r3,8(sp)
 402c188:	b4bfffcc 	andi	r18,r22,65535
 402c18c:	a00b883a 	mov	r5,r20
 402c190:	4020cc00 	call	4020cc0 <__udivsi3>
 402c194:	100b883a 	mov	r5,r2
 402c198:	9009883a 	mov	r4,r18
 402c19c:	1023883a 	mov	r17,r2
 402c1a0:	4020d7c0 	call	4020d7c <__mulsi3>
 402c1a4:	8009883a 	mov	r4,r16
 402c1a8:	a00b883a 	mov	r5,r20
 402c1ac:	1039883a 	mov	fp,r2
 402c1b0:	4020d240 	call	4020d24 <__umodsi3>
 402c1b4:	1004943a 	slli	r2,r2,16
 402c1b8:	b808d43a 	srli	r4,r23,16
 402c1bc:	d8c00217 	ldw	r3,8(sp)
 402c1c0:	2084b03a 	or	r2,r4,r2
 402c1c4:	1700062e 	bgeu	r2,fp,402c1e0 <__divdf3+0x3c0>
 402c1c8:	1585883a 	add	r2,r2,r22
 402c1cc:	893fffc4 	addi	r4,r17,-1
 402c1d0:	15811d36 	bltu	r2,r22,402c648 <__divdf3+0x828>
 402c1d4:	17011c2e 	bgeu	r2,fp,402c648 <__divdf3+0x828>
 402c1d8:	8c7fff84 	addi	r17,r17,-2
 402c1dc:	1585883a 	add	r2,r2,r22
 402c1e0:	1739c83a 	sub	fp,r2,fp
 402c1e4:	a00b883a 	mov	r5,r20
 402c1e8:	e009883a 	mov	r4,fp
 402c1ec:	d8c00215 	stw	r3,8(sp)
 402c1f0:	4020cc00 	call	4020cc0 <__udivsi3>
 402c1f4:	100b883a 	mov	r5,r2
 402c1f8:	9009883a 	mov	r4,r18
 402c1fc:	1021883a 	mov	r16,r2
 402c200:	4020d7c0 	call	4020d7c <__mulsi3>
 402c204:	a00b883a 	mov	r5,r20
 402c208:	e009883a 	mov	r4,fp
 402c20c:	d8800415 	stw	r2,16(sp)
 402c210:	4020d240 	call	4020d24 <__umodsi3>
 402c214:	1004943a 	slli	r2,r2,16
 402c218:	da000417 	ldw	r8,16(sp)
 402c21c:	bdffffcc 	andi	r23,r23,65535
 402c220:	b884b03a 	or	r2,r23,r2
 402c224:	d8c00217 	ldw	r3,8(sp)
 402c228:	1200062e 	bgeu	r2,r8,402c244 <__divdf3+0x424>
 402c22c:	1585883a 	add	r2,r2,r22
 402c230:	813fffc4 	addi	r4,r16,-1
 402c234:	15810236 	bltu	r2,r22,402c640 <__divdf3+0x820>
 402c238:	1201012e 	bgeu	r2,r8,402c640 <__divdf3+0x820>
 402c23c:	843fff84 	addi	r16,r16,-2
 402c240:	1585883a 	add	r2,r2,r22
 402c244:	8822943a 	slli	r17,r17,16
 402c248:	d9800017 	ldw	r6,0(sp)
 402c24c:	1211c83a 	sub	r8,r2,r8
 402c250:	8c22b03a 	or	r17,r17,r16
 402c254:	373fffcc 	andi	fp,r6,65535
 402c258:	8abfffcc 	andi	r10,r17,65535
 402c25c:	8820d43a 	srli	r16,r17,16
 402c260:	5009883a 	mov	r4,r10
 402c264:	e00b883a 	mov	r5,fp
 402c268:	302ed43a 	srli	r23,r6,16
 402c26c:	d8c00215 	stw	r3,8(sp)
 402c270:	da000415 	stw	r8,16(sp)
 402c274:	da800115 	stw	r10,4(sp)
 402c278:	4020d7c0 	call	4020d7c <__mulsi3>
 402c27c:	800b883a 	mov	r5,r16
 402c280:	e009883a 	mov	r4,fp
 402c284:	d8800515 	stw	r2,20(sp)
 402c288:	4020d7c0 	call	4020d7c <__mulsi3>
 402c28c:	8009883a 	mov	r4,r16
 402c290:	b80b883a 	mov	r5,r23
 402c294:	d8800315 	stw	r2,12(sp)
 402c298:	4020d7c0 	call	4020d7c <__mulsi3>
 402c29c:	da800117 	ldw	r10,4(sp)
 402c2a0:	b80b883a 	mov	r5,r23
 402c2a4:	1021883a 	mov	r16,r2
 402c2a8:	5009883a 	mov	r4,r10
 402c2ac:	4020d7c0 	call	4020d7c <__mulsi3>
 402c2b0:	d9c00517 	ldw	r7,20(sp)
 402c2b4:	da400317 	ldw	r9,12(sp)
 402c2b8:	d8c00217 	ldw	r3,8(sp)
 402c2bc:	3808d43a 	srli	r4,r7,16
 402c2c0:	1245883a 	add	r2,r2,r9
 402c2c4:	da000417 	ldw	r8,16(sp)
 402c2c8:	2085883a 	add	r2,r4,r2
 402c2cc:	1240022e 	bgeu	r2,r9,402c2d8 <__divdf3+0x4b8>
 402c2d0:	01000074 	movhi	r4,1
 402c2d4:	8121883a 	add	r16,r16,r4
 402c2d8:	1008d43a 	srli	r4,r2,16
 402c2dc:	1004943a 	slli	r2,r2,16
 402c2e0:	39ffffcc 	andi	r7,r7,65535
 402c2e4:	2409883a 	add	r4,r4,r16
 402c2e8:	11c5883a 	add	r2,r2,r7
 402c2ec:	4100bb36 	bltu	r8,r4,402c5dc <__divdf3+0x7bc>
 402c2f0:	4100d726 	beq	r8,r4,402c650 <__divdf3+0x830>
 402c2f4:	4109c83a 	sub	r4,r8,r4
 402c2f8:	a8a1c83a 	sub	r16,r21,r2
 402c2fc:	ac2b803a 	cmpltu	r21,r21,r16
 402c300:	256bc83a 	sub	r21,r4,r21
 402c304:	b540d926 	beq	r22,r21,402c66c <__divdf3+0x84c>
 402c308:	a00b883a 	mov	r5,r20
 402c30c:	a809883a 	mov	r4,r21
 402c310:	d8c00215 	stw	r3,8(sp)
 402c314:	4020cc00 	call	4020cc0 <__udivsi3>
 402c318:	100b883a 	mov	r5,r2
 402c31c:	9009883a 	mov	r4,r18
 402c320:	d8800515 	stw	r2,20(sp)
 402c324:	4020d7c0 	call	4020d7c <__mulsi3>
 402c328:	a809883a 	mov	r4,r21
 402c32c:	a00b883a 	mov	r5,r20
 402c330:	d8800415 	stw	r2,16(sp)
 402c334:	4020d240 	call	4020d24 <__umodsi3>
 402c338:	1004943a 	slli	r2,r2,16
 402c33c:	8008d43a 	srli	r4,r16,16
 402c340:	da000417 	ldw	r8,16(sp)
 402c344:	d8c00217 	ldw	r3,8(sp)
 402c348:	2084b03a 	or	r2,r4,r2
 402c34c:	d9c00517 	ldw	r7,20(sp)
 402c350:	1200062e 	bgeu	r2,r8,402c36c <__divdf3+0x54c>
 402c354:	1585883a 	add	r2,r2,r22
 402c358:	393fffc4 	addi	r4,r7,-1
 402c35c:	1580c536 	bltu	r2,r22,402c674 <__divdf3+0x854>
 402c360:	1200c42e 	bgeu	r2,r8,402c674 <__divdf3+0x854>
 402c364:	39ffff84 	addi	r7,r7,-2
 402c368:	1585883a 	add	r2,r2,r22
 402c36c:	122bc83a 	sub	r21,r2,r8
 402c370:	a00b883a 	mov	r5,r20
 402c374:	a809883a 	mov	r4,r21
 402c378:	d8c00215 	stw	r3,8(sp)
 402c37c:	d9c00515 	stw	r7,20(sp)
 402c380:	4020cc00 	call	4020cc0 <__udivsi3>
 402c384:	9009883a 	mov	r4,r18
 402c388:	100b883a 	mov	r5,r2
 402c38c:	d8800415 	stw	r2,16(sp)
 402c390:	4020d7c0 	call	4020d7c <__mulsi3>
 402c394:	a809883a 	mov	r4,r21
 402c398:	a00b883a 	mov	r5,r20
 402c39c:	1025883a 	mov	r18,r2
 402c3a0:	4020d240 	call	4020d24 <__umodsi3>
 402c3a4:	1004943a 	slli	r2,r2,16
 402c3a8:	813fffcc 	andi	r4,r16,65535
 402c3ac:	d8c00217 	ldw	r3,8(sp)
 402c3b0:	20a0b03a 	or	r16,r4,r2
 402c3b4:	d9c00517 	ldw	r7,20(sp)
 402c3b8:	da000417 	ldw	r8,16(sp)
 402c3bc:	8480062e 	bgeu	r16,r18,402c3d8 <__divdf3+0x5b8>
 402c3c0:	85a1883a 	add	r16,r16,r22
 402c3c4:	40bfffc4 	addi	r2,r8,-1
 402c3c8:	8580ac36 	bltu	r16,r22,402c67c <__divdf3+0x85c>
 402c3cc:	8480ab2e 	bgeu	r16,r18,402c67c <__divdf3+0x85c>
 402c3d0:	423fff84 	addi	r8,r8,-2
 402c3d4:	85a1883a 	add	r16,r16,r22
 402c3d8:	3804943a 	slli	r2,r7,16
 402c3dc:	84a1c83a 	sub	r16,r16,r18
 402c3e0:	e009883a 	mov	r4,fp
 402c3e4:	1228b03a 	or	r20,r2,r8
 402c3e8:	a1ffffcc 	andi	r7,r20,65535
 402c3ec:	a024d43a 	srli	r18,r20,16
 402c3f0:	380b883a 	mov	r5,r7
 402c3f4:	d8c00215 	stw	r3,8(sp)
 402c3f8:	d9c00515 	stw	r7,20(sp)
 402c3fc:	4020d7c0 	call	4020d7c <__mulsi3>
 402c400:	900b883a 	mov	r5,r18
 402c404:	e009883a 	mov	r4,fp
 402c408:	102b883a 	mov	r21,r2
 402c40c:	4020d7c0 	call	4020d7c <__mulsi3>
 402c410:	900b883a 	mov	r5,r18
 402c414:	b809883a 	mov	r4,r23
 402c418:	1039883a 	mov	fp,r2
 402c41c:	4020d7c0 	call	4020d7c <__mulsi3>
 402c420:	d9c00517 	ldw	r7,20(sp)
 402c424:	b80b883a 	mov	r5,r23
 402c428:	1025883a 	mov	r18,r2
 402c42c:	3809883a 	mov	r4,r7
 402c430:	4020d7c0 	call	4020d7c <__mulsi3>
 402c434:	a808d43a 	srli	r4,r21,16
 402c438:	1705883a 	add	r2,r2,fp
 402c43c:	d8c00217 	ldw	r3,8(sp)
 402c440:	2085883a 	add	r2,r4,r2
 402c444:	1700022e 	bgeu	r2,fp,402c450 <__divdf3+0x630>
 402c448:	01000074 	movhi	r4,1
 402c44c:	9125883a 	add	r18,r18,r4
 402c450:	1008d43a 	srli	r4,r2,16
 402c454:	1004943a 	slli	r2,r2,16
 402c458:	ad7fffcc 	andi	r21,r21,65535
 402c45c:	2489883a 	add	r4,r4,r18
 402c460:	1545883a 	add	r2,r2,r21
 402c464:	81003836 	bltu	r16,r4,402c548 <__divdf3+0x728>
 402c468:	81003626 	beq	r16,r4,402c544 <__divdf3+0x724>
 402c46c:	a5000054 	ori	r20,r20,1
 402c470:	1880ffc4 	addi	r2,r3,1023
 402c474:	00bf2e0e 	bge	zero,r2,402c130 <_gp+0xffff19cc>
 402c478:	a10001cc 	andi	r4,r20,7
 402c47c:	20000726 	beq	r4,zero,402c49c <__divdf3+0x67c>
 402c480:	a10003cc 	andi	r4,r20,15
 402c484:	01400104 	movi	r5,4
 402c488:	21400426 	beq	r4,r5,402c49c <__divdf3+0x67c>
 402c48c:	a149883a 	add	r4,r20,r5
 402c490:	2529803a 	cmpltu	r20,r4,r20
 402c494:	8d23883a 	add	r17,r17,r20
 402c498:	2029883a 	mov	r20,r4
 402c49c:	8900402c 	andhi	r4,r17,256
 402c4a0:	20000426 	beq	r4,zero,402c4b4 <__divdf3+0x694>
 402c4a4:	18810004 	addi	r2,r3,1024
 402c4a8:	00ffc034 	movhi	r3,65280
 402c4ac:	18ffffc4 	addi	r3,r3,-1
 402c4b0:	88e2703a 	and	r17,r17,r3
 402c4b4:	00c1ff84 	movi	r3,2046
 402c4b8:	18beb416 	blt	r3,r2,402bf8c <_gp+0xffff1828>
 402c4bc:	a028d0fa 	srli	r20,r20,3
 402c4c0:	882a977a 	slli	r21,r17,29
 402c4c4:	8820927a 	slli	r16,r17,9
 402c4c8:	1081ffcc 	andi	r2,r2,2047
 402c4cc:	ad2ab03a 	or	r21,r21,r20
 402c4d0:	8020d33a 	srli	r16,r16,12
 402c4d4:	9900004c 	andi	r4,r19,1
 402c4d8:	003eb006 	br	402bf9c <_gp+0xffff1838>
 402c4dc:	8080022c 	andhi	r2,r16,8
 402c4e0:	10001226 	beq	r2,zero,402c52c <__divdf3+0x70c>
 402c4e4:	8880022c 	andhi	r2,r17,8
 402c4e8:	1000101e 	bne	r2,zero,402c52c <__divdf3+0x70c>
 402c4ec:	00800434 	movhi	r2,16
 402c4f0:	8c000234 	orhi	r16,r17,8
 402c4f4:	10bfffc4 	addi	r2,r2,-1
 402c4f8:	b809883a 	mov	r4,r23
 402c4fc:	80a0703a 	and	r16,r16,r2
 402c500:	a02b883a 	mov	r21,r20
 402c504:	003f0806 	br	402c128 <_gp+0xffff19c4>
 402c508:	008000c4 	movi	r2,3
 402c50c:	3880b126 	beq	r7,r2,402c7d4 <__divdf3+0x9b4>
 402c510:	00800044 	movi	r2,1
 402c514:	38805b1e 	bne	r7,r2,402c684 <__divdf3+0x864>
 402c518:	e009883a 	mov	r4,fp
 402c51c:	0005883a 	mov	r2,zero
 402c520:	0021883a 	mov	r16,zero
 402c524:	002b883a 	mov	r21,zero
 402c528:	003e9c06 	br	402bf9c <_gp+0xffff1838>
 402c52c:	00800434 	movhi	r2,16
 402c530:	84000234 	orhi	r16,r16,8
 402c534:	10bfffc4 	addi	r2,r2,-1
 402c538:	b009883a 	mov	r4,r22
 402c53c:	80a0703a 	and	r16,r16,r2
 402c540:	003ef906 	br	402c128 <_gp+0xffff19c4>
 402c544:	103fca26 	beq	r2,zero,402c470 <_gp+0xffff1d0c>
 402c548:	b421883a 	add	r16,r22,r16
 402c54c:	a17fffc4 	addi	r5,r20,-1
 402c550:	8580422e 	bgeu	r16,r22,402c65c <__divdf3+0x83c>
 402c554:	2829883a 	mov	r20,r5
 402c558:	813fc41e 	bne	r16,r4,402c46c <_gp+0xffff1d08>
 402c55c:	d9800017 	ldw	r6,0(sp)
 402c560:	30bfc21e 	bne	r6,r2,402c46c <_gp+0xffff1d08>
 402c564:	003fc206 	br	402c470 <_gp+0xffff1d0c>
 402c568:	143ff604 	addi	r16,r2,-40
 402c56c:	8c20983a 	sll	r16,r17,r16
 402c570:	002b883a 	mov	r21,zero
 402c574:	003eb406 	br	402c048 <_gp+0xffff18e4>
 402c578:	d9800215 	stw	r6,8(sp)
 402c57c:	d9c00515 	stw	r7,20(sp)
 402c580:	da000415 	stw	r8,16(sp)
 402c584:	402ddb40 	call	402ddb4 <__clzsi2>
 402c588:	10800804 	addi	r2,r2,32
 402c58c:	da000417 	ldw	r8,16(sp)
 402c590:	d9c00517 	ldw	r7,20(sp)
 402c594:	d9800217 	ldw	r6,8(sp)
 402c598:	003ea106 	br	402c020 <_gp+0xffff18bc>
 402c59c:	147ff604 	addi	r17,r2,-40
 402c5a0:	3462983a 	sll	r17,r6,r17
 402c5a4:	0029883a 	mov	r20,zero
 402c5a8:	003ec906 	br	402c0d0 <_gp+0xffff196c>
 402c5ac:	3009883a 	mov	r4,r6
 402c5b0:	d9400115 	stw	r5,4(sp)
 402c5b4:	d9800215 	stw	r6,8(sp)
 402c5b8:	da000415 	stw	r8,16(sp)
 402c5bc:	da400315 	stw	r9,12(sp)
 402c5c0:	402ddb40 	call	402ddb4 <__clzsi2>
 402c5c4:	10800804 	addi	r2,r2,32
 402c5c8:	da400317 	ldw	r9,12(sp)
 402c5cc:	da000417 	ldw	r8,16(sp)
 402c5d0:	d9800217 	ldw	r6,8(sp)
 402c5d4:	d9400117 	ldw	r5,4(sp)
 402c5d8:	003eb306 	br	402c0a8 <_gp+0xffff1944>
 402c5dc:	d9800017 	ldw	r6,0(sp)
 402c5e0:	a9ab883a 	add	r21,r21,r6
 402c5e4:	a98b803a 	cmpltu	r5,r21,r6
 402c5e8:	2d8b883a 	add	r5,r5,r22
 402c5ec:	2a11883a 	add	r8,r5,r8
 402c5f0:	897fffc4 	addi	r5,r17,-1
 402c5f4:	b2000c2e 	bgeu	r22,r8,402c628 <__divdf3+0x808>
 402c5f8:	41003f36 	bltu	r8,r4,402c6f8 <__divdf3+0x8d8>
 402c5fc:	22006c26 	beq	r4,r8,402c7b0 <__divdf3+0x990>
 402c600:	4109c83a 	sub	r4,r8,r4
 402c604:	2823883a 	mov	r17,r5
 402c608:	003f3b06 	br	402c2f8 <_gp+0xffff1b94>
 402c60c:	ad3ed336 	bltu	r21,r20,402c15c <_gp+0xffff19f8>
 402c610:	a804d07a 	srli	r2,r21,1
 402c614:	802e97fa 	slli	r23,r16,31
 402c618:	a82a97fa 	slli	r21,r21,31
 402c61c:	8020d07a 	srli	r16,r16,1
 402c620:	b8aeb03a 	or	r23,r23,r2
 402c624:	003ed006 	br	402c168 <_gp+0xffff1a04>
 402c628:	b23ff51e 	bne	r22,r8,402c600 <_gp+0xffff1e9c>
 402c62c:	d9800017 	ldw	r6,0(sp)
 402c630:	a9bff12e 	bgeu	r21,r6,402c5f8 <_gp+0xffff1e94>
 402c634:	b109c83a 	sub	r4,r22,r4
 402c638:	2823883a 	mov	r17,r5
 402c63c:	003f2e06 	br	402c2f8 <_gp+0xffff1b94>
 402c640:	2021883a 	mov	r16,r4
 402c644:	003eff06 	br	402c244 <_gp+0xffff1ae0>
 402c648:	2023883a 	mov	r17,r4
 402c64c:	003ee406 	br	402c1e0 <_gp+0xffff1a7c>
 402c650:	a8bfe236 	bltu	r21,r2,402c5dc <_gp+0xffff1e78>
 402c654:	0009883a 	mov	r4,zero
 402c658:	003f2706 	br	402c2f8 <_gp+0xffff1b94>
 402c65c:	81002d36 	bltu	r16,r4,402c714 <__divdf3+0x8f4>
 402c660:	24005626 	beq	r4,r16,402c7bc <__divdf3+0x99c>
 402c664:	2829883a 	mov	r20,r5
 402c668:	003f8006 	br	402c46c <_gp+0xffff1d08>
 402c66c:	053fffc4 	movi	r20,-1
 402c670:	003f7f06 	br	402c470 <_gp+0xffff1d0c>
 402c674:	200f883a 	mov	r7,r4
 402c678:	003f3c06 	br	402c36c <_gp+0xffff1c08>
 402c67c:	1011883a 	mov	r8,r2
 402c680:	003f5506 	br	402c3d8 <_gp+0xffff1c74>
 402c684:	e027883a 	mov	r19,fp
 402c688:	003f7906 	br	402c470 <_gp+0xffff1d0c>
 402c68c:	010007c4 	movi	r4,31
 402c690:	20c02816 	blt	r4,r3,402c734 <__divdf3+0x914>
 402c694:	00800804 	movi	r2,32
 402c698:	10c5c83a 	sub	r2,r2,r3
 402c69c:	888a983a 	sll	r5,r17,r2
 402c6a0:	a0c8d83a 	srl	r4,r20,r3
 402c6a4:	a084983a 	sll	r2,r20,r2
 402c6a8:	88e2d83a 	srl	r17,r17,r3
 402c6ac:	2906b03a 	or	r3,r5,r4
 402c6b0:	1004c03a 	cmpne	r2,r2,zero
 402c6b4:	1886b03a 	or	r3,r3,r2
 402c6b8:	188001cc 	andi	r2,r3,7
 402c6bc:	10000726 	beq	r2,zero,402c6dc <__divdf3+0x8bc>
 402c6c0:	188003cc 	andi	r2,r3,15
 402c6c4:	01000104 	movi	r4,4
 402c6c8:	11000426 	beq	r2,r4,402c6dc <__divdf3+0x8bc>
 402c6cc:	1805883a 	mov	r2,r3
 402c6d0:	10c00104 	addi	r3,r2,4
 402c6d4:	1885803a 	cmpltu	r2,r3,r2
 402c6d8:	88a3883a 	add	r17,r17,r2
 402c6dc:	8880202c 	andhi	r2,r17,128
 402c6e0:	10002926 	beq	r2,zero,402c788 <__divdf3+0x968>
 402c6e4:	9900004c 	andi	r4,r19,1
 402c6e8:	00800044 	movi	r2,1
 402c6ec:	0021883a 	mov	r16,zero
 402c6f0:	002b883a 	mov	r21,zero
 402c6f4:	003e2906 	br	402bf9c <_gp+0xffff1838>
 402c6f8:	d9800017 	ldw	r6,0(sp)
 402c6fc:	8c7fff84 	addi	r17,r17,-2
 402c700:	a9ab883a 	add	r21,r21,r6
 402c704:	a98b803a 	cmpltu	r5,r21,r6
 402c708:	2d8b883a 	add	r5,r5,r22
 402c70c:	2a11883a 	add	r8,r5,r8
 402c710:	003ef806 	br	402c2f4 <_gp+0xffff1b90>
 402c714:	d9800017 	ldw	r6,0(sp)
 402c718:	318f883a 	add	r7,r6,r6
 402c71c:	398b803a 	cmpltu	r5,r7,r6
 402c720:	2d8d883a 	add	r6,r5,r22
 402c724:	81a1883a 	add	r16,r16,r6
 402c728:	a17fff84 	addi	r5,r20,-2
 402c72c:	d9c00015 	stw	r7,0(sp)
 402c730:	003f8806 	br	402c554 <_gp+0xffff1df0>
 402c734:	013ff844 	movi	r4,-31
 402c738:	2085c83a 	sub	r2,r4,r2
 402c73c:	8888d83a 	srl	r4,r17,r2
 402c740:	00800804 	movi	r2,32
 402c744:	18802126 	beq	r3,r2,402c7cc <__divdf3+0x9ac>
 402c748:	04001004 	movi	r16,64
 402c74c:	80c7c83a 	sub	r3,r16,r3
 402c750:	88e0983a 	sll	r16,r17,r3
 402c754:	8504b03a 	or	r2,r16,r20
 402c758:	1004c03a 	cmpne	r2,r2,zero
 402c75c:	2084b03a 	or	r2,r4,r2
 402c760:	144001cc 	andi	r17,r2,7
 402c764:	88000d1e 	bne	r17,zero,402c79c <__divdf3+0x97c>
 402c768:	0021883a 	mov	r16,zero
 402c76c:	102ad0fa 	srli	r21,r2,3
 402c770:	9900004c 	andi	r4,r19,1
 402c774:	0005883a 	mov	r2,zero
 402c778:	ac6ab03a 	or	r21,r21,r17
 402c77c:	003e0706 	br	402bf9c <_gp+0xffff1838>
 402c780:	1007883a 	mov	r3,r2
 402c784:	0023883a 	mov	r17,zero
 402c788:	8820927a 	slli	r16,r17,9
 402c78c:	1805883a 	mov	r2,r3
 402c790:	8822977a 	slli	r17,r17,29
 402c794:	8020d33a 	srli	r16,r16,12
 402c798:	003ff406 	br	402c76c <_gp+0xffff2008>
 402c79c:	10c003cc 	andi	r3,r2,15
 402c7a0:	01000104 	movi	r4,4
 402c7a4:	193ff626 	beq	r3,r4,402c780 <_gp+0xffff201c>
 402c7a8:	0023883a 	mov	r17,zero
 402c7ac:	003fc806 	br	402c6d0 <_gp+0xffff1f6c>
 402c7b0:	a8bfd136 	bltu	r21,r2,402c6f8 <_gp+0xffff1f94>
 402c7b4:	2823883a 	mov	r17,r5
 402c7b8:	003fa606 	br	402c654 <_gp+0xffff1ef0>
 402c7bc:	d9800017 	ldw	r6,0(sp)
 402c7c0:	30bfd436 	bltu	r6,r2,402c714 <_gp+0xffff1fb0>
 402c7c4:	2829883a 	mov	r20,r5
 402c7c8:	003f6406 	br	402c55c <_gp+0xffff1df8>
 402c7cc:	0021883a 	mov	r16,zero
 402c7d0:	003fe006 	br	402c754 <_gp+0xffff1ff0>
 402c7d4:	00800434 	movhi	r2,16
 402c7d8:	8c000234 	orhi	r16,r17,8
 402c7dc:	10bfffc4 	addi	r2,r2,-1
 402c7e0:	e009883a 	mov	r4,fp
 402c7e4:	80a0703a 	and	r16,r16,r2
 402c7e8:	a02b883a 	mov	r21,r20
 402c7ec:	003e4e06 	br	402c128 <_gp+0xffff19c4>

0402c7f0 <__eqdf2>:
 402c7f0:	2804d53a 	srli	r2,r5,20
 402c7f4:	3806d53a 	srli	r3,r7,20
 402c7f8:	02000434 	movhi	r8,16
 402c7fc:	423fffc4 	addi	r8,r8,-1
 402c800:	1081ffcc 	andi	r2,r2,2047
 402c804:	0281ffc4 	movi	r10,2047
 402c808:	2a12703a 	and	r9,r5,r8
 402c80c:	18c1ffcc 	andi	r3,r3,2047
 402c810:	3a10703a 	and	r8,r7,r8
 402c814:	280ad7fa 	srli	r5,r5,31
 402c818:	380ed7fa 	srli	r7,r7,31
 402c81c:	12801026 	beq	r2,r10,402c860 <__eqdf2+0x70>
 402c820:	0281ffc4 	movi	r10,2047
 402c824:	1a800a26 	beq	r3,r10,402c850 <__eqdf2+0x60>
 402c828:	10c00226 	beq	r2,r3,402c834 <__eqdf2+0x44>
 402c82c:	00800044 	movi	r2,1
 402c830:	f800283a 	ret
 402c834:	4a3ffd1e 	bne	r9,r8,402c82c <_gp+0xffff20c8>
 402c838:	21bffc1e 	bne	r4,r6,402c82c <_gp+0xffff20c8>
 402c83c:	29c00c26 	beq	r5,r7,402c870 <__eqdf2+0x80>
 402c840:	103ffa1e 	bne	r2,zero,402c82c <_gp+0xffff20c8>
 402c844:	2244b03a 	or	r2,r4,r9
 402c848:	1004c03a 	cmpne	r2,r2,zero
 402c84c:	f800283a 	ret
 402c850:	3214b03a 	or	r10,r6,r8
 402c854:	503ff426 	beq	r10,zero,402c828 <_gp+0xffff20c4>
 402c858:	00800044 	movi	r2,1
 402c85c:	f800283a 	ret
 402c860:	2254b03a 	or	r10,r4,r9
 402c864:	503fee26 	beq	r10,zero,402c820 <_gp+0xffff20bc>
 402c868:	00800044 	movi	r2,1
 402c86c:	f800283a 	ret
 402c870:	0005883a 	mov	r2,zero
 402c874:	f800283a 	ret

0402c878 <__gedf2>:
 402c878:	2804d53a 	srli	r2,r5,20
 402c87c:	3806d53a 	srli	r3,r7,20
 402c880:	02000434 	movhi	r8,16
 402c884:	423fffc4 	addi	r8,r8,-1
 402c888:	1081ffcc 	andi	r2,r2,2047
 402c88c:	0241ffc4 	movi	r9,2047
 402c890:	2a14703a 	and	r10,r5,r8
 402c894:	18c1ffcc 	andi	r3,r3,2047
 402c898:	3a10703a 	and	r8,r7,r8
 402c89c:	280ad7fa 	srli	r5,r5,31
 402c8a0:	380ed7fa 	srli	r7,r7,31
 402c8a4:	12401d26 	beq	r2,r9,402c91c <__gedf2+0xa4>
 402c8a8:	0241ffc4 	movi	r9,2047
 402c8ac:	1a401226 	beq	r3,r9,402c8f8 <__gedf2+0x80>
 402c8b0:	1000081e 	bne	r2,zero,402c8d4 <__gedf2+0x5c>
 402c8b4:	2296b03a 	or	r11,r4,r10
 402c8b8:	5813003a 	cmpeq	r9,r11,zero
 402c8bc:	1800091e 	bne	r3,zero,402c8e4 <__gedf2+0x6c>
 402c8c0:	3218b03a 	or	r12,r6,r8
 402c8c4:	6000071e 	bne	r12,zero,402c8e4 <__gedf2+0x6c>
 402c8c8:	0005883a 	mov	r2,zero
 402c8cc:	5800101e 	bne	r11,zero,402c910 <__gedf2+0x98>
 402c8d0:	f800283a 	ret
 402c8d4:	18000c1e 	bne	r3,zero,402c908 <__gedf2+0x90>
 402c8d8:	3212b03a 	or	r9,r6,r8
 402c8dc:	48000c26 	beq	r9,zero,402c910 <__gedf2+0x98>
 402c8e0:	0013883a 	mov	r9,zero
 402c8e4:	39c03fcc 	andi	r7,r7,255
 402c8e8:	48000826 	beq	r9,zero,402c90c <__gedf2+0x94>
 402c8ec:	38000926 	beq	r7,zero,402c914 <__gedf2+0x9c>
 402c8f0:	00800044 	movi	r2,1
 402c8f4:	f800283a 	ret
 402c8f8:	3212b03a 	or	r9,r6,r8
 402c8fc:	483fec26 	beq	r9,zero,402c8b0 <_gp+0xffff214c>
 402c900:	00bfff84 	movi	r2,-2
 402c904:	f800283a 	ret
 402c908:	39c03fcc 	andi	r7,r7,255
 402c90c:	29c00626 	beq	r5,r7,402c928 <__gedf2+0xb0>
 402c910:	283ff726 	beq	r5,zero,402c8f0 <_gp+0xffff218c>
 402c914:	00bfffc4 	movi	r2,-1
 402c918:	f800283a 	ret
 402c91c:	2292b03a 	or	r9,r4,r10
 402c920:	483fe126 	beq	r9,zero,402c8a8 <_gp+0xffff2144>
 402c924:	003ff606 	br	402c900 <_gp+0xffff219c>
 402c928:	18bff916 	blt	r3,r2,402c910 <_gp+0xffff21ac>
 402c92c:	10c00316 	blt	r2,r3,402c93c <__gedf2+0xc4>
 402c930:	42bff736 	bltu	r8,r10,402c910 <_gp+0xffff21ac>
 402c934:	52000326 	beq	r10,r8,402c944 <__gedf2+0xcc>
 402c938:	5200042e 	bgeu	r10,r8,402c94c <__gedf2+0xd4>
 402c93c:	283fec1e 	bne	r5,zero,402c8f0 <_gp+0xffff218c>
 402c940:	003ff406 	br	402c914 <_gp+0xffff21b0>
 402c944:	313ff236 	bltu	r6,r4,402c910 <_gp+0xffff21ac>
 402c948:	21bffc36 	bltu	r4,r6,402c93c <_gp+0xffff21d8>
 402c94c:	0005883a 	mov	r2,zero
 402c950:	f800283a 	ret

0402c954 <__ledf2>:
 402c954:	2804d53a 	srli	r2,r5,20
 402c958:	3810d53a 	srli	r8,r7,20
 402c95c:	00c00434 	movhi	r3,16
 402c960:	18ffffc4 	addi	r3,r3,-1
 402c964:	1081ffcc 	andi	r2,r2,2047
 402c968:	0241ffc4 	movi	r9,2047
 402c96c:	28d4703a 	and	r10,r5,r3
 402c970:	4201ffcc 	andi	r8,r8,2047
 402c974:	38c6703a 	and	r3,r7,r3
 402c978:	280ad7fa 	srli	r5,r5,31
 402c97c:	380ed7fa 	srli	r7,r7,31
 402c980:	12401f26 	beq	r2,r9,402ca00 <__ledf2+0xac>
 402c984:	0241ffc4 	movi	r9,2047
 402c988:	42401426 	beq	r8,r9,402c9dc <__ledf2+0x88>
 402c98c:	1000091e 	bne	r2,zero,402c9b4 <__ledf2+0x60>
 402c990:	2296b03a 	or	r11,r4,r10
 402c994:	5813003a 	cmpeq	r9,r11,zero
 402c998:	29403fcc 	andi	r5,r5,255
 402c99c:	40000a1e 	bne	r8,zero,402c9c8 <__ledf2+0x74>
 402c9a0:	30d8b03a 	or	r12,r6,r3
 402c9a4:	6000081e 	bne	r12,zero,402c9c8 <__ledf2+0x74>
 402c9a8:	0005883a 	mov	r2,zero
 402c9ac:	5800111e 	bne	r11,zero,402c9f4 <__ledf2+0xa0>
 402c9b0:	f800283a 	ret
 402c9b4:	29403fcc 	andi	r5,r5,255
 402c9b8:	40000c1e 	bne	r8,zero,402c9ec <__ledf2+0x98>
 402c9bc:	30d2b03a 	or	r9,r6,r3
 402c9c0:	48000c26 	beq	r9,zero,402c9f4 <__ledf2+0xa0>
 402c9c4:	0013883a 	mov	r9,zero
 402c9c8:	39c03fcc 	andi	r7,r7,255
 402c9cc:	48000826 	beq	r9,zero,402c9f0 <__ledf2+0x9c>
 402c9d0:	38001126 	beq	r7,zero,402ca18 <__ledf2+0xc4>
 402c9d4:	00800044 	movi	r2,1
 402c9d8:	f800283a 	ret
 402c9dc:	30d2b03a 	or	r9,r6,r3
 402c9e0:	483fea26 	beq	r9,zero,402c98c <_gp+0xffff2228>
 402c9e4:	00800084 	movi	r2,2
 402c9e8:	f800283a 	ret
 402c9ec:	39c03fcc 	andi	r7,r7,255
 402c9f0:	39400726 	beq	r7,r5,402ca10 <__ledf2+0xbc>
 402c9f4:	2800081e 	bne	r5,zero,402ca18 <__ledf2+0xc4>
 402c9f8:	00800044 	movi	r2,1
 402c9fc:	f800283a 	ret
 402ca00:	2292b03a 	or	r9,r4,r10
 402ca04:	483fdf26 	beq	r9,zero,402c984 <_gp+0xffff2220>
 402ca08:	00800084 	movi	r2,2
 402ca0c:	f800283a 	ret
 402ca10:	4080030e 	bge	r8,r2,402ca20 <__ledf2+0xcc>
 402ca14:	383fef26 	beq	r7,zero,402c9d4 <_gp+0xffff2270>
 402ca18:	00bfffc4 	movi	r2,-1
 402ca1c:	f800283a 	ret
 402ca20:	123feb16 	blt	r2,r8,402c9d0 <_gp+0xffff226c>
 402ca24:	1abff336 	bltu	r3,r10,402c9f4 <_gp+0xffff2290>
 402ca28:	50c00326 	beq	r10,r3,402ca38 <__ledf2+0xe4>
 402ca2c:	50c0042e 	bgeu	r10,r3,402ca40 <__ledf2+0xec>
 402ca30:	283fe81e 	bne	r5,zero,402c9d4 <_gp+0xffff2270>
 402ca34:	003ff806 	br	402ca18 <_gp+0xffff22b4>
 402ca38:	313fee36 	bltu	r6,r4,402c9f4 <_gp+0xffff2290>
 402ca3c:	21bffc36 	bltu	r4,r6,402ca30 <_gp+0xffff22cc>
 402ca40:	0005883a 	mov	r2,zero
 402ca44:	f800283a 	ret

0402ca48 <__muldf3>:
 402ca48:	deffee04 	addi	sp,sp,-72
 402ca4c:	dd000c15 	stw	r20,48(sp)
 402ca50:	2828d53a 	srli	r20,r5,20
 402ca54:	ddc00f15 	stw	r23,60(sp)
 402ca58:	282ed7fa 	srli	r23,r5,31
 402ca5c:	dc000815 	stw	r16,32(sp)
 402ca60:	04000434 	movhi	r16,16
 402ca64:	dcc00b15 	stw	r19,44(sp)
 402ca68:	843fffc4 	addi	r16,r16,-1
 402ca6c:	dfc01115 	stw	ra,68(sp)
 402ca70:	df001015 	stw	fp,64(sp)
 402ca74:	dd800e15 	stw	r22,56(sp)
 402ca78:	dd400d15 	stw	r21,52(sp)
 402ca7c:	dc800a15 	stw	r18,40(sp)
 402ca80:	dc400915 	stw	r17,36(sp)
 402ca84:	a501ffcc 	andi	r20,r20,2047
 402ca88:	2c20703a 	and	r16,r5,r16
 402ca8c:	b827883a 	mov	r19,r23
 402ca90:	ba403fcc 	andi	r9,r23,255
 402ca94:	a0006026 	beq	r20,zero,402cc18 <__muldf3+0x1d0>
 402ca98:	0081ffc4 	movi	r2,2047
 402ca9c:	202d883a 	mov	r22,r4
 402caa0:	a0803626 	beq	r20,r2,402cb7c <__muldf3+0x134>
 402caa4:	84000434 	orhi	r16,r16,16
 402caa8:	200ad77a 	srli	r5,r4,29
 402caac:	800490fa 	slli	r2,r16,3
 402cab0:	202c90fa 	slli	r22,r4,3
 402cab4:	a53f0044 	addi	r20,r20,-1023
 402cab8:	28a0b03a 	or	r16,r5,r2
 402cabc:	002b883a 	mov	r21,zero
 402cac0:	000b883a 	mov	r5,zero
 402cac4:	3804d53a 	srli	r2,r7,20
 402cac8:	3838d7fa 	srli	fp,r7,31
 402cacc:	04400434 	movhi	r17,16
 402cad0:	8c7fffc4 	addi	r17,r17,-1
 402cad4:	1081ffcc 	andi	r2,r2,2047
 402cad8:	3025883a 	mov	r18,r6
 402cadc:	3c62703a 	and	r17,r7,r17
 402cae0:	e2803fcc 	andi	r10,fp,255
 402cae4:	10006d26 	beq	r2,zero,402cc9c <__muldf3+0x254>
 402cae8:	00c1ffc4 	movi	r3,2047
 402caec:	10c06526 	beq	r2,r3,402cc84 <__muldf3+0x23c>
 402caf0:	8c400434 	orhi	r17,r17,16
 402caf4:	300ed77a 	srli	r7,r6,29
 402caf8:	880690fa 	slli	r3,r17,3
 402cafc:	302490fa 	slli	r18,r6,3
 402cb00:	10bf0044 	addi	r2,r2,-1023
 402cb04:	38e2b03a 	or	r17,r7,r3
 402cb08:	000f883a 	mov	r7,zero
 402cb0c:	a087883a 	add	r3,r20,r2
 402cb10:	010003c4 	movi	r4,15
 402cb14:	3d44b03a 	or	r2,r7,r21
 402cb18:	e5ccf03a 	xor	r6,fp,r23
 402cb1c:	1a000044 	addi	r8,r3,1
 402cb20:	20809b36 	bltu	r4,r2,402cd90 <__muldf3+0x348>
 402cb24:	100490ba 	slli	r2,r2,2
 402cb28:	010100f4 	movhi	r4,1027
 402cb2c:	2132cf04 	addi	r4,r4,-13508
 402cb30:	1105883a 	add	r2,r2,r4
 402cb34:	10800017 	ldw	r2,0(r2)
 402cb38:	1000683a 	jmp	r2
 402cb3c:	0402cd90 	cmplti	r16,zero,2870
 402cb40:	0402cb9c 	xori	r16,zero,2862
 402cb44:	0402cb9c 	xori	r16,zero,2862
 402cb48:	0402cb98 	cmpnei	r16,zero,2862
 402cb4c:	0402cd6c 	andhi	r16,zero,2869
 402cb50:	0402cd6c 	andhi	r16,zero,2869
 402cb54:	0402cd54 	movui	r16,2869
 402cb58:	0402cb98 	cmpnei	r16,zero,2862
 402cb5c:	0402cd6c 	andhi	r16,zero,2869
 402cb60:	0402cd54 	movui	r16,2869
 402cb64:	0402cd6c 	andhi	r16,zero,2869
 402cb68:	0402cb98 	cmpnei	r16,zero,2862
 402cb6c:	0402cd7c 	xorhi	r16,zero,2869
 402cb70:	0402cd7c 	xorhi	r16,zero,2869
 402cb74:	0402cd7c 	xorhi	r16,zero,2869
 402cb78:	0402d0dc 	xori	r16,zero,2883
 402cb7c:	2404b03a 	or	r2,r4,r16
 402cb80:	1000711e 	bne	r2,zero,402cd48 <__muldf3+0x300>
 402cb84:	05400204 	movi	r21,8
 402cb88:	0021883a 	mov	r16,zero
 402cb8c:	002d883a 	mov	r22,zero
 402cb90:	01400084 	movi	r5,2
 402cb94:	003fcb06 	br	402cac4 <_gp+0xffff2360>
 402cb98:	500d883a 	mov	r6,r10
 402cb9c:	00800084 	movi	r2,2
 402cba0:	38805926 	beq	r7,r2,402cd08 <__muldf3+0x2c0>
 402cba4:	008000c4 	movi	r2,3
 402cba8:	3881bb26 	beq	r7,r2,402d298 <__muldf3+0x850>
 402cbac:	00800044 	movi	r2,1
 402cbb0:	3881961e 	bne	r7,r2,402d20c <__muldf3+0x7c4>
 402cbb4:	3027883a 	mov	r19,r6
 402cbb8:	0005883a 	mov	r2,zero
 402cbbc:	0021883a 	mov	r16,zero
 402cbc0:	002d883a 	mov	r22,zero
 402cbc4:	1004953a 	slli	r2,r2,20
 402cbc8:	98c03fcc 	andi	r3,r19,255
 402cbcc:	04400434 	movhi	r17,16
 402cbd0:	8c7fffc4 	addi	r17,r17,-1
 402cbd4:	180697fa 	slli	r3,r3,31
 402cbd8:	8460703a 	and	r16,r16,r17
 402cbdc:	80a0b03a 	or	r16,r16,r2
 402cbe0:	80c6b03a 	or	r3,r16,r3
 402cbe4:	b005883a 	mov	r2,r22
 402cbe8:	dfc01117 	ldw	ra,68(sp)
 402cbec:	df001017 	ldw	fp,64(sp)
 402cbf0:	ddc00f17 	ldw	r23,60(sp)
 402cbf4:	dd800e17 	ldw	r22,56(sp)
 402cbf8:	dd400d17 	ldw	r21,52(sp)
 402cbfc:	dd000c17 	ldw	r20,48(sp)
 402cc00:	dcc00b17 	ldw	r19,44(sp)
 402cc04:	dc800a17 	ldw	r18,40(sp)
 402cc08:	dc400917 	ldw	r17,36(sp)
 402cc0c:	dc000817 	ldw	r16,32(sp)
 402cc10:	dec01204 	addi	sp,sp,72
 402cc14:	f800283a 	ret
 402cc18:	2404b03a 	or	r2,r4,r16
 402cc1c:	202b883a 	mov	r21,r4
 402cc20:	10004426 	beq	r2,zero,402cd34 <__muldf3+0x2ec>
 402cc24:	80015126 	beq	r16,zero,402d16c <__muldf3+0x724>
 402cc28:	8009883a 	mov	r4,r16
 402cc2c:	d9800715 	stw	r6,28(sp)
 402cc30:	d9c00215 	stw	r7,8(sp)
 402cc34:	da400415 	stw	r9,16(sp)
 402cc38:	402ddb40 	call	402ddb4 <__clzsi2>
 402cc3c:	d9800717 	ldw	r6,28(sp)
 402cc40:	d9c00217 	ldw	r7,8(sp)
 402cc44:	da400417 	ldw	r9,16(sp)
 402cc48:	113ffd44 	addi	r4,r2,-11
 402cc4c:	00c00704 	movi	r3,28
 402cc50:	19014216 	blt	r3,r4,402d15c <__muldf3+0x714>
 402cc54:	00c00744 	movi	r3,29
 402cc58:	15bffe04 	addi	r22,r2,-8
 402cc5c:	1907c83a 	sub	r3,r3,r4
 402cc60:	85a0983a 	sll	r16,r16,r22
 402cc64:	a8c6d83a 	srl	r3,r21,r3
 402cc68:	adac983a 	sll	r22,r21,r22
 402cc6c:	1c20b03a 	or	r16,r3,r16
 402cc70:	1080fcc4 	addi	r2,r2,1011
 402cc74:	00a9c83a 	sub	r20,zero,r2
 402cc78:	002b883a 	mov	r21,zero
 402cc7c:	000b883a 	mov	r5,zero
 402cc80:	003f9006 	br	402cac4 <_gp+0xffff2360>
 402cc84:	3446b03a 	or	r3,r6,r17
 402cc88:	1800281e 	bne	r3,zero,402cd2c <__muldf3+0x2e4>
 402cc8c:	0023883a 	mov	r17,zero
 402cc90:	0025883a 	mov	r18,zero
 402cc94:	01c00084 	movi	r7,2
 402cc98:	003f9c06 	br	402cb0c <_gp+0xffff23a8>
 402cc9c:	3446b03a 	or	r3,r6,r17
 402cca0:	18001e26 	beq	r3,zero,402cd1c <__muldf3+0x2d4>
 402cca4:	88012126 	beq	r17,zero,402d12c <__muldf3+0x6e4>
 402cca8:	8809883a 	mov	r4,r17
 402ccac:	d9400215 	stw	r5,8(sp)
 402ccb0:	d9800715 	stw	r6,28(sp)
 402ccb4:	da400415 	stw	r9,16(sp)
 402ccb8:	da800315 	stw	r10,12(sp)
 402ccbc:	402ddb40 	call	402ddb4 <__clzsi2>
 402ccc0:	d9400217 	ldw	r5,8(sp)
 402ccc4:	d9800717 	ldw	r6,28(sp)
 402ccc8:	da400417 	ldw	r9,16(sp)
 402cccc:	da800317 	ldw	r10,12(sp)
 402ccd0:	113ffd44 	addi	r4,r2,-11
 402ccd4:	00c00704 	movi	r3,28
 402ccd8:	19011016 	blt	r3,r4,402d11c <__muldf3+0x6d4>
 402ccdc:	00c00744 	movi	r3,29
 402cce0:	14bffe04 	addi	r18,r2,-8
 402cce4:	1907c83a 	sub	r3,r3,r4
 402cce8:	8ca2983a 	sll	r17,r17,r18
 402ccec:	30c6d83a 	srl	r3,r6,r3
 402ccf0:	34a4983a 	sll	r18,r6,r18
 402ccf4:	1c62b03a 	or	r17,r3,r17
 402ccf8:	1080fcc4 	addi	r2,r2,1011
 402ccfc:	0085c83a 	sub	r2,zero,r2
 402cd00:	000f883a 	mov	r7,zero
 402cd04:	003f8106 	br	402cb0c <_gp+0xffff23a8>
 402cd08:	3027883a 	mov	r19,r6
 402cd0c:	0081ffc4 	movi	r2,2047
 402cd10:	0021883a 	mov	r16,zero
 402cd14:	002d883a 	mov	r22,zero
 402cd18:	003faa06 	br	402cbc4 <_gp+0xffff2460>
 402cd1c:	0023883a 	mov	r17,zero
 402cd20:	0025883a 	mov	r18,zero
 402cd24:	01c00044 	movi	r7,1
 402cd28:	003f7806 	br	402cb0c <_gp+0xffff23a8>
 402cd2c:	01c000c4 	movi	r7,3
 402cd30:	003f7606 	br	402cb0c <_gp+0xffff23a8>
 402cd34:	05400104 	movi	r21,4
 402cd38:	0021883a 	mov	r16,zero
 402cd3c:	002d883a 	mov	r22,zero
 402cd40:	01400044 	movi	r5,1
 402cd44:	003f5f06 	br	402cac4 <_gp+0xffff2360>
 402cd48:	05400304 	movi	r21,12
 402cd4c:	014000c4 	movi	r5,3
 402cd50:	003f5c06 	br	402cac4 <_gp+0xffff2360>
 402cd54:	04000434 	movhi	r16,16
 402cd58:	0027883a 	mov	r19,zero
 402cd5c:	843fffc4 	addi	r16,r16,-1
 402cd60:	05bfffc4 	movi	r22,-1
 402cd64:	0081ffc4 	movi	r2,2047
 402cd68:	003f9606 	br	402cbc4 <_gp+0xffff2460>
 402cd6c:	8023883a 	mov	r17,r16
 402cd70:	b025883a 	mov	r18,r22
 402cd74:	280f883a 	mov	r7,r5
 402cd78:	003f8806 	br	402cb9c <_gp+0xffff2438>
 402cd7c:	8023883a 	mov	r17,r16
 402cd80:	b025883a 	mov	r18,r22
 402cd84:	480d883a 	mov	r6,r9
 402cd88:	280f883a 	mov	r7,r5
 402cd8c:	003f8306 	br	402cb9c <_gp+0xffff2438>
 402cd90:	b026d43a 	srli	r19,r22,16
 402cd94:	902ed43a 	srli	r23,r18,16
 402cd98:	b5bfffcc 	andi	r22,r22,65535
 402cd9c:	94bfffcc 	andi	r18,r18,65535
 402cda0:	b00b883a 	mov	r5,r22
 402cda4:	9009883a 	mov	r4,r18
 402cda8:	d8c00515 	stw	r3,20(sp)
 402cdac:	d9800715 	stw	r6,28(sp)
 402cdb0:	da000615 	stw	r8,24(sp)
 402cdb4:	4020d7c0 	call	4020d7c <__mulsi3>
 402cdb8:	980b883a 	mov	r5,r19
 402cdbc:	9009883a 	mov	r4,r18
 402cdc0:	1029883a 	mov	r20,r2
 402cdc4:	4020d7c0 	call	4020d7c <__mulsi3>
 402cdc8:	b80b883a 	mov	r5,r23
 402cdcc:	9809883a 	mov	r4,r19
 402cdd0:	102b883a 	mov	r21,r2
 402cdd4:	4020d7c0 	call	4020d7c <__mulsi3>
 402cdd8:	b809883a 	mov	r4,r23
 402cddc:	b00b883a 	mov	r5,r22
 402cde0:	1039883a 	mov	fp,r2
 402cde4:	4020d7c0 	call	4020d7c <__mulsi3>
 402cde8:	a008d43a 	srli	r4,r20,16
 402cdec:	1545883a 	add	r2,r2,r21
 402cdf0:	d8c00517 	ldw	r3,20(sp)
 402cdf4:	2085883a 	add	r2,r4,r2
 402cdf8:	d9800717 	ldw	r6,28(sp)
 402cdfc:	da000617 	ldw	r8,24(sp)
 402ce00:	1540022e 	bgeu	r2,r21,402ce0c <__muldf3+0x3c4>
 402ce04:	01000074 	movhi	r4,1
 402ce08:	e139883a 	add	fp,fp,r4
 402ce0c:	100e943a 	slli	r7,r2,16
 402ce10:	1004d43a 	srli	r2,r2,16
 402ce14:	882ad43a 	srli	r21,r17,16
 402ce18:	a53fffcc 	andi	r20,r20,65535
 402ce1c:	8c7fffcc 	andi	r17,r17,65535
 402ce20:	3d29883a 	add	r20,r7,r20
 402ce24:	b00b883a 	mov	r5,r22
 402ce28:	8809883a 	mov	r4,r17
 402ce2c:	d8c00515 	stw	r3,20(sp)
 402ce30:	d9800715 	stw	r6,28(sp)
 402ce34:	da000615 	stw	r8,24(sp)
 402ce38:	dd000115 	stw	r20,4(sp)
 402ce3c:	d8800015 	stw	r2,0(sp)
 402ce40:	4020d7c0 	call	4020d7c <__mulsi3>
 402ce44:	980b883a 	mov	r5,r19
 402ce48:	8809883a 	mov	r4,r17
 402ce4c:	d8800215 	stw	r2,8(sp)
 402ce50:	4020d7c0 	call	4020d7c <__mulsi3>
 402ce54:	9809883a 	mov	r4,r19
 402ce58:	a80b883a 	mov	r5,r21
 402ce5c:	1029883a 	mov	r20,r2
 402ce60:	4020d7c0 	call	4020d7c <__mulsi3>
 402ce64:	b00b883a 	mov	r5,r22
 402ce68:	a809883a 	mov	r4,r21
 402ce6c:	d8800415 	stw	r2,16(sp)
 402ce70:	4020d7c0 	call	4020d7c <__mulsi3>
 402ce74:	d9c00217 	ldw	r7,8(sp)
 402ce78:	1505883a 	add	r2,r2,r20
 402ce7c:	d8c00517 	ldw	r3,20(sp)
 402ce80:	3826d43a 	srli	r19,r7,16
 402ce84:	d9800717 	ldw	r6,28(sp)
 402ce88:	da000617 	ldw	r8,24(sp)
 402ce8c:	9885883a 	add	r2,r19,r2
 402ce90:	da400417 	ldw	r9,16(sp)
 402ce94:	1500022e 	bgeu	r2,r20,402cea0 <__muldf3+0x458>
 402ce98:	01000074 	movhi	r4,1
 402ce9c:	4913883a 	add	r9,r9,r4
 402cea0:	1028d43a 	srli	r20,r2,16
 402cea4:	1004943a 	slli	r2,r2,16
 402cea8:	802cd43a 	srli	r22,r16,16
 402ceac:	843fffcc 	andi	r16,r16,65535
 402ceb0:	3cffffcc 	andi	r19,r7,65535
 402ceb4:	9009883a 	mov	r4,r18
 402ceb8:	800b883a 	mov	r5,r16
 402cebc:	a269883a 	add	r20,r20,r9
 402cec0:	d8c00515 	stw	r3,20(sp)
 402cec4:	d9800715 	stw	r6,28(sp)
 402cec8:	da000615 	stw	r8,24(sp)
 402cecc:	14e7883a 	add	r19,r2,r19
 402ced0:	4020d7c0 	call	4020d7c <__mulsi3>
 402ced4:	9009883a 	mov	r4,r18
 402ced8:	b00b883a 	mov	r5,r22
 402cedc:	d8800315 	stw	r2,12(sp)
 402cee0:	4020d7c0 	call	4020d7c <__mulsi3>
 402cee4:	b809883a 	mov	r4,r23
 402cee8:	b00b883a 	mov	r5,r22
 402ceec:	d8800215 	stw	r2,8(sp)
 402cef0:	4020d7c0 	call	4020d7c <__mulsi3>
 402cef4:	b80b883a 	mov	r5,r23
 402cef8:	8009883a 	mov	r4,r16
 402cefc:	d8800415 	stw	r2,16(sp)
 402cf00:	4020d7c0 	call	4020d7c <__mulsi3>
 402cf04:	da800317 	ldw	r10,12(sp)
 402cf08:	d9c00217 	ldw	r7,8(sp)
 402cf0c:	d9000017 	ldw	r4,0(sp)
 402cf10:	502ed43a 	srli	r23,r10,16
 402cf14:	11c5883a 	add	r2,r2,r7
 402cf18:	24e5883a 	add	r18,r4,r19
 402cf1c:	b885883a 	add	r2,r23,r2
 402cf20:	d8c00517 	ldw	r3,20(sp)
 402cf24:	d9800717 	ldw	r6,28(sp)
 402cf28:	da000617 	ldw	r8,24(sp)
 402cf2c:	da400417 	ldw	r9,16(sp)
 402cf30:	11c0022e 	bgeu	r2,r7,402cf3c <__muldf3+0x4f4>
 402cf34:	01000074 	movhi	r4,1
 402cf38:	4913883a 	add	r9,r9,r4
 402cf3c:	100ed43a 	srli	r7,r2,16
 402cf40:	1004943a 	slli	r2,r2,16
 402cf44:	55ffffcc 	andi	r23,r10,65535
 402cf48:	3a53883a 	add	r9,r7,r9
 402cf4c:	8809883a 	mov	r4,r17
 402cf50:	800b883a 	mov	r5,r16
 402cf54:	d8c00515 	stw	r3,20(sp)
 402cf58:	d9800715 	stw	r6,28(sp)
 402cf5c:	da000615 	stw	r8,24(sp)
 402cf60:	da400415 	stw	r9,16(sp)
 402cf64:	15ef883a 	add	r23,r2,r23
 402cf68:	4020d7c0 	call	4020d7c <__mulsi3>
 402cf6c:	8809883a 	mov	r4,r17
 402cf70:	b00b883a 	mov	r5,r22
 402cf74:	d8800215 	stw	r2,8(sp)
 402cf78:	4020d7c0 	call	4020d7c <__mulsi3>
 402cf7c:	b00b883a 	mov	r5,r22
 402cf80:	a809883a 	mov	r4,r21
 402cf84:	d8800315 	stw	r2,12(sp)
 402cf88:	4020d7c0 	call	4020d7c <__mulsi3>
 402cf8c:	8009883a 	mov	r4,r16
 402cf90:	a80b883a 	mov	r5,r21
 402cf94:	1023883a 	mov	r17,r2
 402cf98:	4020d7c0 	call	4020d7c <__mulsi3>
 402cf9c:	d9c00217 	ldw	r7,8(sp)
 402cfa0:	da800317 	ldw	r10,12(sp)
 402cfa4:	d8c00517 	ldw	r3,20(sp)
 402cfa8:	3808d43a 	srli	r4,r7,16
 402cfac:	1285883a 	add	r2,r2,r10
 402cfb0:	d9800717 	ldw	r6,28(sp)
 402cfb4:	2085883a 	add	r2,r4,r2
 402cfb8:	da000617 	ldw	r8,24(sp)
 402cfbc:	da400417 	ldw	r9,16(sp)
 402cfc0:	1280022e 	bgeu	r2,r10,402cfcc <__muldf3+0x584>
 402cfc4:	01000074 	movhi	r4,1
 402cfc8:	8923883a 	add	r17,r17,r4
 402cfcc:	1008943a 	slli	r4,r2,16
 402cfd0:	39ffffcc 	andi	r7,r7,65535
 402cfd4:	e4b9883a 	add	fp,fp,r18
 402cfd8:	21cf883a 	add	r7,r4,r7
 402cfdc:	e4e7803a 	cmpltu	r19,fp,r19
 402cfe0:	3d0f883a 	add	r7,r7,r20
 402cfe4:	bf39883a 	add	fp,r23,fp
 402cfe8:	99c9883a 	add	r4,r19,r7
 402cfec:	e5ef803a 	cmpltu	r23,fp,r23
 402cff0:	490b883a 	add	r5,r9,r4
 402cff4:	1004d43a 	srli	r2,r2,16
 402cff8:	b965883a 	add	r18,r23,r5
 402cffc:	24c9803a 	cmpltu	r4,r4,r19
 402d000:	3d29803a 	cmpltu	r20,r7,r20
 402d004:	a128b03a 	or	r20,r20,r4
 402d008:	95ef803a 	cmpltu	r23,r18,r23
 402d00c:	2a53803a 	cmpltu	r9,r5,r9
 402d010:	a0a9883a 	add	r20,r20,r2
 402d014:	4deeb03a 	or	r23,r9,r23
 402d018:	a5ef883a 	add	r23,r20,r23
 402d01c:	bc63883a 	add	r17,r23,r17
 402d020:	e004927a 	slli	r2,fp,9
 402d024:	d9000117 	ldw	r4,4(sp)
 402d028:	882e927a 	slli	r23,r17,9
 402d02c:	9022d5fa 	srli	r17,r18,23
 402d030:	e038d5fa 	srli	fp,fp,23
 402d034:	1104b03a 	or	r2,r2,r4
 402d038:	9024927a 	slli	r18,r18,9
 402d03c:	1004c03a 	cmpne	r2,r2,zero
 402d040:	bc62b03a 	or	r17,r23,r17
 402d044:	1738b03a 	or	fp,r2,fp
 402d048:	8880402c 	andhi	r2,r17,256
 402d04c:	e4a4b03a 	or	r18,fp,r18
 402d050:	10000726 	beq	r2,zero,402d070 <__muldf3+0x628>
 402d054:	9006d07a 	srli	r3,r18,1
 402d058:	880497fa 	slli	r2,r17,31
 402d05c:	9480004c 	andi	r18,r18,1
 402d060:	8822d07a 	srli	r17,r17,1
 402d064:	1ca4b03a 	or	r18,r3,r18
 402d068:	14a4b03a 	or	r18,r2,r18
 402d06c:	4007883a 	mov	r3,r8
 402d070:	1880ffc4 	addi	r2,r3,1023
 402d074:	0080460e 	bge	zero,r2,402d190 <__muldf3+0x748>
 402d078:	910001cc 	andi	r4,r18,7
 402d07c:	20000726 	beq	r4,zero,402d09c <__muldf3+0x654>
 402d080:	910003cc 	andi	r4,r18,15
 402d084:	01400104 	movi	r5,4
 402d088:	21400426 	beq	r4,r5,402d09c <__muldf3+0x654>
 402d08c:	9149883a 	add	r4,r18,r5
 402d090:	24a5803a 	cmpltu	r18,r4,r18
 402d094:	8ca3883a 	add	r17,r17,r18
 402d098:	2025883a 	mov	r18,r4
 402d09c:	8900402c 	andhi	r4,r17,256
 402d0a0:	20000426 	beq	r4,zero,402d0b4 <__muldf3+0x66c>
 402d0a4:	18810004 	addi	r2,r3,1024
 402d0a8:	00ffc034 	movhi	r3,65280
 402d0ac:	18ffffc4 	addi	r3,r3,-1
 402d0b0:	88e2703a 	and	r17,r17,r3
 402d0b4:	00c1ff84 	movi	r3,2046
 402d0b8:	18bf1316 	blt	r3,r2,402cd08 <_gp+0xffff25a4>
 402d0bc:	882c977a 	slli	r22,r17,29
 402d0c0:	9024d0fa 	srli	r18,r18,3
 402d0c4:	8822927a 	slli	r17,r17,9
 402d0c8:	1081ffcc 	andi	r2,r2,2047
 402d0cc:	b4acb03a 	or	r22,r22,r18
 402d0d0:	8820d33a 	srli	r16,r17,12
 402d0d4:	3027883a 	mov	r19,r6
 402d0d8:	003eba06 	br	402cbc4 <_gp+0xffff2460>
 402d0dc:	8080022c 	andhi	r2,r16,8
 402d0e0:	10000926 	beq	r2,zero,402d108 <__muldf3+0x6c0>
 402d0e4:	8880022c 	andhi	r2,r17,8
 402d0e8:	1000071e 	bne	r2,zero,402d108 <__muldf3+0x6c0>
 402d0ec:	00800434 	movhi	r2,16
 402d0f0:	8c000234 	orhi	r16,r17,8
 402d0f4:	10bfffc4 	addi	r2,r2,-1
 402d0f8:	e027883a 	mov	r19,fp
 402d0fc:	80a0703a 	and	r16,r16,r2
 402d100:	902d883a 	mov	r22,r18
 402d104:	003f1706 	br	402cd64 <_gp+0xffff2600>
 402d108:	00800434 	movhi	r2,16
 402d10c:	84000234 	orhi	r16,r16,8
 402d110:	10bfffc4 	addi	r2,r2,-1
 402d114:	80a0703a 	and	r16,r16,r2
 402d118:	003f1206 	br	402cd64 <_gp+0xffff2600>
 402d11c:	147ff604 	addi	r17,r2,-40
 402d120:	3462983a 	sll	r17,r6,r17
 402d124:	0025883a 	mov	r18,zero
 402d128:	003ef306 	br	402ccf8 <_gp+0xffff2594>
 402d12c:	3009883a 	mov	r4,r6
 402d130:	d9400215 	stw	r5,8(sp)
 402d134:	d9800715 	stw	r6,28(sp)
 402d138:	da400415 	stw	r9,16(sp)
 402d13c:	da800315 	stw	r10,12(sp)
 402d140:	402ddb40 	call	402ddb4 <__clzsi2>
 402d144:	10800804 	addi	r2,r2,32
 402d148:	da800317 	ldw	r10,12(sp)
 402d14c:	da400417 	ldw	r9,16(sp)
 402d150:	d9800717 	ldw	r6,28(sp)
 402d154:	d9400217 	ldw	r5,8(sp)
 402d158:	003edd06 	br	402ccd0 <_gp+0xffff256c>
 402d15c:	143ff604 	addi	r16,r2,-40
 402d160:	ac20983a 	sll	r16,r21,r16
 402d164:	002d883a 	mov	r22,zero
 402d168:	003ec106 	br	402cc70 <_gp+0xffff250c>
 402d16c:	d9800715 	stw	r6,28(sp)
 402d170:	d9c00215 	stw	r7,8(sp)
 402d174:	da400415 	stw	r9,16(sp)
 402d178:	402ddb40 	call	402ddb4 <__clzsi2>
 402d17c:	10800804 	addi	r2,r2,32
 402d180:	da400417 	ldw	r9,16(sp)
 402d184:	d9c00217 	ldw	r7,8(sp)
 402d188:	d9800717 	ldw	r6,28(sp)
 402d18c:	003eae06 	br	402cc48 <_gp+0xffff24e4>
 402d190:	00c00044 	movi	r3,1
 402d194:	1887c83a 	sub	r3,r3,r2
 402d198:	01000e04 	movi	r4,56
 402d19c:	20fe8516 	blt	r4,r3,402cbb4 <_gp+0xffff2450>
 402d1a0:	010007c4 	movi	r4,31
 402d1a4:	20c01b16 	blt	r4,r3,402d214 <__muldf3+0x7cc>
 402d1a8:	00800804 	movi	r2,32
 402d1ac:	10c5c83a 	sub	r2,r2,r3
 402d1b0:	888a983a 	sll	r5,r17,r2
 402d1b4:	90c8d83a 	srl	r4,r18,r3
 402d1b8:	9084983a 	sll	r2,r18,r2
 402d1bc:	88e2d83a 	srl	r17,r17,r3
 402d1c0:	2906b03a 	or	r3,r5,r4
 402d1c4:	1004c03a 	cmpne	r2,r2,zero
 402d1c8:	1886b03a 	or	r3,r3,r2
 402d1cc:	188001cc 	andi	r2,r3,7
 402d1d0:	10000726 	beq	r2,zero,402d1f0 <__muldf3+0x7a8>
 402d1d4:	188003cc 	andi	r2,r3,15
 402d1d8:	01000104 	movi	r4,4
 402d1dc:	11000426 	beq	r2,r4,402d1f0 <__muldf3+0x7a8>
 402d1e0:	1805883a 	mov	r2,r3
 402d1e4:	10c00104 	addi	r3,r2,4
 402d1e8:	1885803a 	cmpltu	r2,r3,r2
 402d1ec:	88a3883a 	add	r17,r17,r2
 402d1f0:	8880202c 	andhi	r2,r17,128
 402d1f4:	10001c26 	beq	r2,zero,402d268 <__muldf3+0x820>
 402d1f8:	3027883a 	mov	r19,r6
 402d1fc:	00800044 	movi	r2,1
 402d200:	0021883a 	mov	r16,zero
 402d204:	002d883a 	mov	r22,zero
 402d208:	003e6e06 	br	402cbc4 <_gp+0xffff2460>
 402d20c:	4007883a 	mov	r3,r8
 402d210:	003f9706 	br	402d070 <_gp+0xffff290c>
 402d214:	017ff844 	movi	r5,-31
 402d218:	2885c83a 	sub	r2,r5,r2
 402d21c:	888ad83a 	srl	r5,r17,r2
 402d220:	00800804 	movi	r2,32
 402d224:	18801a26 	beq	r3,r2,402d290 <__muldf3+0x848>
 402d228:	01001004 	movi	r4,64
 402d22c:	20c7c83a 	sub	r3,r4,r3
 402d230:	88e2983a 	sll	r17,r17,r3
 402d234:	8ca4b03a 	or	r18,r17,r18
 402d238:	9004c03a 	cmpne	r2,r18,zero
 402d23c:	2884b03a 	or	r2,r5,r2
 402d240:	144001cc 	andi	r17,r2,7
 402d244:	88000d1e 	bne	r17,zero,402d27c <__muldf3+0x834>
 402d248:	0021883a 	mov	r16,zero
 402d24c:	102cd0fa 	srli	r22,r2,3
 402d250:	3027883a 	mov	r19,r6
 402d254:	0005883a 	mov	r2,zero
 402d258:	b46cb03a 	or	r22,r22,r17
 402d25c:	003e5906 	br	402cbc4 <_gp+0xffff2460>
 402d260:	1007883a 	mov	r3,r2
 402d264:	0023883a 	mov	r17,zero
 402d268:	8820927a 	slli	r16,r17,9
 402d26c:	1805883a 	mov	r2,r3
 402d270:	8822977a 	slli	r17,r17,29
 402d274:	8020d33a 	srli	r16,r16,12
 402d278:	003ff406 	br	402d24c <_gp+0xffff2ae8>
 402d27c:	10c003cc 	andi	r3,r2,15
 402d280:	01000104 	movi	r4,4
 402d284:	193ff626 	beq	r3,r4,402d260 <_gp+0xffff2afc>
 402d288:	0023883a 	mov	r17,zero
 402d28c:	003fd506 	br	402d1e4 <_gp+0xffff2a80>
 402d290:	0023883a 	mov	r17,zero
 402d294:	003fe706 	br	402d234 <_gp+0xffff2ad0>
 402d298:	00800434 	movhi	r2,16
 402d29c:	8c000234 	orhi	r16,r17,8
 402d2a0:	10bfffc4 	addi	r2,r2,-1
 402d2a4:	3027883a 	mov	r19,r6
 402d2a8:	80a0703a 	and	r16,r16,r2
 402d2ac:	902d883a 	mov	r22,r18
 402d2b0:	003eac06 	br	402cd64 <_gp+0xffff2600>

0402d2b4 <__subdf3>:
 402d2b4:	02000434 	movhi	r8,16
 402d2b8:	423fffc4 	addi	r8,r8,-1
 402d2bc:	defffb04 	addi	sp,sp,-20
 402d2c0:	2a14703a 	and	r10,r5,r8
 402d2c4:	3812d53a 	srli	r9,r7,20
 402d2c8:	3a10703a 	and	r8,r7,r8
 402d2cc:	2006d77a 	srli	r3,r4,29
 402d2d0:	3004d77a 	srli	r2,r6,29
 402d2d4:	dc000015 	stw	r16,0(sp)
 402d2d8:	501490fa 	slli	r10,r10,3
 402d2dc:	2820d53a 	srli	r16,r5,20
 402d2e0:	401090fa 	slli	r8,r8,3
 402d2e4:	dc800215 	stw	r18,8(sp)
 402d2e8:	dc400115 	stw	r17,4(sp)
 402d2ec:	dfc00415 	stw	ra,16(sp)
 402d2f0:	202290fa 	slli	r17,r4,3
 402d2f4:	dcc00315 	stw	r19,12(sp)
 402d2f8:	4a41ffcc 	andi	r9,r9,2047
 402d2fc:	0101ffc4 	movi	r4,2047
 402d300:	2824d7fa 	srli	r18,r5,31
 402d304:	8401ffcc 	andi	r16,r16,2047
 402d308:	50c6b03a 	or	r3,r10,r3
 402d30c:	380ed7fa 	srli	r7,r7,31
 402d310:	408ab03a 	or	r5,r8,r2
 402d314:	300c90fa 	slli	r6,r6,3
 402d318:	49009626 	beq	r9,r4,402d574 <__subdf3+0x2c0>
 402d31c:	39c0005c 	xori	r7,r7,1
 402d320:	8245c83a 	sub	r2,r16,r9
 402d324:	3c807426 	beq	r7,r18,402d4f8 <__subdf3+0x244>
 402d328:	0080af0e 	bge	zero,r2,402d5e8 <__subdf3+0x334>
 402d32c:	48002a1e 	bne	r9,zero,402d3d8 <__subdf3+0x124>
 402d330:	2988b03a 	or	r4,r5,r6
 402d334:	20009a1e 	bne	r4,zero,402d5a0 <__subdf3+0x2ec>
 402d338:	888001cc 	andi	r2,r17,7
 402d33c:	10000726 	beq	r2,zero,402d35c <__subdf3+0xa8>
 402d340:	888003cc 	andi	r2,r17,15
 402d344:	01000104 	movi	r4,4
 402d348:	11000426 	beq	r2,r4,402d35c <__subdf3+0xa8>
 402d34c:	890b883a 	add	r5,r17,r4
 402d350:	2c63803a 	cmpltu	r17,r5,r17
 402d354:	1c47883a 	add	r3,r3,r17
 402d358:	2823883a 	mov	r17,r5
 402d35c:	1880202c 	andhi	r2,r3,128
 402d360:	10005926 	beq	r2,zero,402d4c8 <__subdf3+0x214>
 402d364:	84000044 	addi	r16,r16,1
 402d368:	0081ffc4 	movi	r2,2047
 402d36c:	8080be26 	beq	r16,r2,402d668 <__subdf3+0x3b4>
 402d370:	017fe034 	movhi	r5,65408
 402d374:	297fffc4 	addi	r5,r5,-1
 402d378:	1946703a 	and	r3,r3,r5
 402d37c:	1804977a 	slli	r2,r3,29
 402d380:	1806927a 	slli	r3,r3,9
 402d384:	8822d0fa 	srli	r17,r17,3
 402d388:	8401ffcc 	andi	r16,r16,2047
 402d38c:	180ad33a 	srli	r5,r3,12
 402d390:	9100004c 	andi	r4,r18,1
 402d394:	1444b03a 	or	r2,r2,r17
 402d398:	80c1ffcc 	andi	r3,r16,2047
 402d39c:	1820953a 	slli	r16,r3,20
 402d3a0:	20c03fcc 	andi	r3,r4,255
 402d3a4:	180897fa 	slli	r4,r3,31
 402d3a8:	00c00434 	movhi	r3,16
 402d3ac:	18ffffc4 	addi	r3,r3,-1
 402d3b0:	28c6703a 	and	r3,r5,r3
 402d3b4:	1c06b03a 	or	r3,r3,r16
 402d3b8:	1906b03a 	or	r3,r3,r4
 402d3bc:	dfc00417 	ldw	ra,16(sp)
 402d3c0:	dcc00317 	ldw	r19,12(sp)
 402d3c4:	dc800217 	ldw	r18,8(sp)
 402d3c8:	dc400117 	ldw	r17,4(sp)
 402d3cc:	dc000017 	ldw	r16,0(sp)
 402d3d0:	dec00504 	addi	sp,sp,20
 402d3d4:	f800283a 	ret
 402d3d8:	0101ffc4 	movi	r4,2047
 402d3dc:	813fd626 	beq	r16,r4,402d338 <_gp+0xffff2bd4>
 402d3e0:	29402034 	orhi	r5,r5,128
 402d3e4:	01000e04 	movi	r4,56
 402d3e8:	2080a316 	blt	r4,r2,402d678 <__subdf3+0x3c4>
 402d3ec:	010007c4 	movi	r4,31
 402d3f0:	2080c616 	blt	r4,r2,402d70c <__subdf3+0x458>
 402d3f4:	01000804 	movi	r4,32
 402d3f8:	2089c83a 	sub	r4,r4,r2
 402d3fc:	2910983a 	sll	r8,r5,r4
 402d400:	308ed83a 	srl	r7,r6,r2
 402d404:	3108983a 	sll	r4,r6,r4
 402d408:	2884d83a 	srl	r2,r5,r2
 402d40c:	41ccb03a 	or	r6,r8,r7
 402d410:	2008c03a 	cmpne	r4,r4,zero
 402d414:	310cb03a 	or	r6,r6,r4
 402d418:	898dc83a 	sub	r6,r17,r6
 402d41c:	89a3803a 	cmpltu	r17,r17,r6
 402d420:	1887c83a 	sub	r3,r3,r2
 402d424:	1c47c83a 	sub	r3,r3,r17
 402d428:	3023883a 	mov	r17,r6
 402d42c:	1880202c 	andhi	r2,r3,128
 402d430:	10002326 	beq	r2,zero,402d4c0 <__subdf3+0x20c>
 402d434:	04c02034 	movhi	r19,128
 402d438:	9cffffc4 	addi	r19,r19,-1
 402d43c:	1ce6703a 	and	r19,r3,r19
 402d440:	98007a26 	beq	r19,zero,402d62c <__subdf3+0x378>
 402d444:	9809883a 	mov	r4,r19
 402d448:	402ddb40 	call	402ddb4 <__clzsi2>
 402d44c:	113ffe04 	addi	r4,r2,-8
 402d450:	00c007c4 	movi	r3,31
 402d454:	19007b16 	blt	r3,r4,402d644 <__subdf3+0x390>
 402d458:	00800804 	movi	r2,32
 402d45c:	1105c83a 	sub	r2,r2,r4
 402d460:	8884d83a 	srl	r2,r17,r2
 402d464:	9906983a 	sll	r3,r19,r4
 402d468:	8922983a 	sll	r17,r17,r4
 402d46c:	10c4b03a 	or	r2,r2,r3
 402d470:	24007816 	blt	r4,r16,402d654 <__subdf3+0x3a0>
 402d474:	2421c83a 	sub	r16,r4,r16
 402d478:	80c00044 	addi	r3,r16,1
 402d47c:	010007c4 	movi	r4,31
 402d480:	20c09516 	blt	r4,r3,402d6d8 <__subdf3+0x424>
 402d484:	01400804 	movi	r5,32
 402d488:	28cbc83a 	sub	r5,r5,r3
 402d48c:	88c8d83a 	srl	r4,r17,r3
 402d490:	8962983a 	sll	r17,r17,r5
 402d494:	114a983a 	sll	r5,r2,r5
 402d498:	10c6d83a 	srl	r3,r2,r3
 402d49c:	8804c03a 	cmpne	r2,r17,zero
 402d4a0:	290ab03a 	or	r5,r5,r4
 402d4a4:	28a2b03a 	or	r17,r5,r2
 402d4a8:	0021883a 	mov	r16,zero
 402d4ac:	003fa206 	br	402d338 <_gp+0xffff2bd4>
 402d4b0:	2090b03a 	or	r8,r4,r2
 402d4b4:	40018e26 	beq	r8,zero,402daf0 <__subdf3+0x83c>
 402d4b8:	1007883a 	mov	r3,r2
 402d4bc:	2023883a 	mov	r17,r4
 402d4c0:	888001cc 	andi	r2,r17,7
 402d4c4:	103f9e1e 	bne	r2,zero,402d340 <_gp+0xffff2bdc>
 402d4c8:	1804977a 	slli	r2,r3,29
 402d4cc:	8822d0fa 	srli	r17,r17,3
 402d4d0:	1810d0fa 	srli	r8,r3,3
 402d4d4:	9100004c 	andi	r4,r18,1
 402d4d8:	1444b03a 	or	r2,r2,r17
 402d4dc:	00c1ffc4 	movi	r3,2047
 402d4e0:	80c02826 	beq	r16,r3,402d584 <__subdf3+0x2d0>
 402d4e4:	01400434 	movhi	r5,16
 402d4e8:	297fffc4 	addi	r5,r5,-1
 402d4ec:	80e0703a 	and	r16,r16,r3
 402d4f0:	414a703a 	and	r5,r8,r5
 402d4f4:	003fa806 	br	402d398 <_gp+0xffff2c34>
 402d4f8:	0080630e 	bge	zero,r2,402d688 <__subdf3+0x3d4>
 402d4fc:	48003026 	beq	r9,zero,402d5c0 <__subdf3+0x30c>
 402d500:	0101ffc4 	movi	r4,2047
 402d504:	813f8c26 	beq	r16,r4,402d338 <_gp+0xffff2bd4>
 402d508:	29402034 	orhi	r5,r5,128
 402d50c:	01000e04 	movi	r4,56
 402d510:	2080a90e 	bge	r4,r2,402d7b8 <__subdf3+0x504>
 402d514:	298cb03a 	or	r6,r5,r6
 402d518:	3012c03a 	cmpne	r9,r6,zero
 402d51c:	0005883a 	mov	r2,zero
 402d520:	4c53883a 	add	r9,r9,r17
 402d524:	4c63803a 	cmpltu	r17,r9,r17
 402d528:	10c7883a 	add	r3,r2,r3
 402d52c:	88c7883a 	add	r3,r17,r3
 402d530:	4823883a 	mov	r17,r9
 402d534:	1880202c 	andhi	r2,r3,128
 402d538:	1000d026 	beq	r2,zero,402d87c <__subdf3+0x5c8>
 402d53c:	84000044 	addi	r16,r16,1
 402d540:	0081ffc4 	movi	r2,2047
 402d544:	8080fe26 	beq	r16,r2,402d940 <__subdf3+0x68c>
 402d548:	00bfe034 	movhi	r2,65408
 402d54c:	10bfffc4 	addi	r2,r2,-1
 402d550:	1886703a 	and	r3,r3,r2
 402d554:	880ad07a 	srli	r5,r17,1
 402d558:	180497fa 	slli	r2,r3,31
 402d55c:	8900004c 	andi	r4,r17,1
 402d560:	2922b03a 	or	r17,r5,r4
 402d564:	1806d07a 	srli	r3,r3,1
 402d568:	1462b03a 	or	r17,r2,r17
 402d56c:	3825883a 	mov	r18,r7
 402d570:	003f7106 	br	402d338 <_gp+0xffff2bd4>
 402d574:	2984b03a 	or	r2,r5,r6
 402d578:	103f6826 	beq	r2,zero,402d31c <_gp+0xffff2bb8>
 402d57c:	39c03fcc 	andi	r7,r7,255
 402d580:	003f6706 	br	402d320 <_gp+0xffff2bbc>
 402d584:	4086b03a 	or	r3,r8,r2
 402d588:	18015226 	beq	r3,zero,402dad4 <__subdf3+0x820>
 402d58c:	00c00434 	movhi	r3,16
 402d590:	41400234 	orhi	r5,r8,8
 402d594:	18ffffc4 	addi	r3,r3,-1
 402d598:	28ca703a 	and	r5,r5,r3
 402d59c:	003f7e06 	br	402d398 <_gp+0xffff2c34>
 402d5a0:	10bfffc4 	addi	r2,r2,-1
 402d5a4:	1000491e 	bne	r2,zero,402d6cc <__subdf3+0x418>
 402d5a8:	898fc83a 	sub	r7,r17,r6
 402d5ac:	89e3803a 	cmpltu	r17,r17,r7
 402d5b0:	1947c83a 	sub	r3,r3,r5
 402d5b4:	1c47c83a 	sub	r3,r3,r17
 402d5b8:	3823883a 	mov	r17,r7
 402d5bc:	003f9b06 	br	402d42c <_gp+0xffff2cc8>
 402d5c0:	2988b03a 	or	r4,r5,r6
 402d5c4:	203f5c26 	beq	r4,zero,402d338 <_gp+0xffff2bd4>
 402d5c8:	10bfffc4 	addi	r2,r2,-1
 402d5cc:	1000931e 	bne	r2,zero,402d81c <__subdf3+0x568>
 402d5d0:	898d883a 	add	r6,r17,r6
 402d5d4:	3463803a 	cmpltu	r17,r6,r17
 402d5d8:	1947883a 	add	r3,r3,r5
 402d5dc:	88c7883a 	add	r3,r17,r3
 402d5e0:	3023883a 	mov	r17,r6
 402d5e4:	003fd306 	br	402d534 <_gp+0xffff2dd0>
 402d5e8:	1000541e 	bne	r2,zero,402d73c <__subdf3+0x488>
 402d5ec:	80800044 	addi	r2,r16,1
 402d5f0:	1081ffcc 	andi	r2,r2,2047
 402d5f4:	01000044 	movi	r4,1
 402d5f8:	2080a20e 	bge	r4,r2,402d884 <__subdf3+0x5d0>
 402d5fc:	8989c83a 	sub	r4,r17,r6
 402d600:	8905803a 	cmpltu	r2,r17,r4
 402d604:	1967c83a 	sub	r19,r3,r5
 402d608:	98a7c83a 	sub	r19,r19,r2
 402d60c:	9880202c 	andhi	r2,r19,128
 402d610:	10006326 	beq	r2,zero,402d7a0 <__subdf3+0x4ec>
 402d614:	3463c83a 	sub	r17,r6,r17
 402d618:	28c7c83a 	sub	r3,r5,r3
 402d61c:	344d803a 	cmpltu	r6,r6,r17
 402d620:	19a7c83a 	sub	r19,r3,r6
 402d624:	3825883a 	mov	r18,r7
 402d628:	983f861e 	bne	r19,zero,402d444 <_gp+0xffff2ce0>
 402d62c:	8809883a 	mov	r4,r17
 402d630:	402ddb40 	call	402ddb4 <__clzsi2>
 402d634:	10800804 	addi	r2,r2,32
 402d638:	113ffe04 	addi	r4,r2,-8
 402d63c:	00c007c4 	movi	r3,31
 402d640:	193f850e 	bge	r3,r4,402d458 <_gp+0xffff2cf4>
 402d644:	10bff604 	addi	r2,r2,-40
 402d648:	8884983a 	sll	r2,r17,r2
 402d64c:	0023883a 	mov	r17,zero
 402d650:	243f880e 	bge	r4,r16,402d474 <_gp+0xffff2d10>
 402d654:	00ffe034 	movhi	r3,65408
 402d658:	18ffffc4 	addi	r3,r3,-1
 402d65c:	8121c83a 	sub	r16,r16,r4
 402d660:	10c6703a 	and	r3,r2,r3
 402d664:	003f3406 	br	402d338 <_gp+0xffff2bd4>
 402d668:	9100004c 	andi	r4,r18,1
 402d66c:	000b883a 	mov	r5,zero
 402d670:	0005883a 	mov	r2,zero
 402d674:	003f4806 	br	402d398 <_gp+0xffff2c34>
 402d678:	298cb03a 	or	r6,r5,r6
 402d67c:	300cc03a 	cmpne	r6,r6,zero
 402d680:	0005883a 	mov	r2,zero
 402d684:	003f6406 	br	402d418 <_gp+0xffff2cb4>
 402d688:	10009a1e 	bne	r2,zero,402d8f4 <__subdf3+0x640>
 402d68c:	82400044 	addi	r9,r16,1
 402d690:	4881ffcc 	andi	r2,r9,2047
 402d694:	02800044 	movi	r10,1
 402d698:	5080670e 	bge	r10,r2,402d838 <__subdf3+0x584>
 402d69c:	0081ffc4 	movi	r2,2047
 402d6a0:	4880af26 	beq	r9,r2,402d960 <__subdf3+0x6ac>
 402d6a4:	898d883a 	add	r6,r17,r6
 402d6a8:	1945883a 	add	r2,r3,r5
 402d6ac:	3447803a 	cmpltu	r3,r6,r17
 402d6b0:	1887883a 	add	r3,r3,r2
 402d6b4:	182297fa 	slli	r17,r3,31
 402d6b8:	300cd07a 	srli	r6,r6,1
 402d6bc:	1806d07a 	srli	r3,r3,1
 402d6c0:	4821883a 	mov	r16,r9
 402d6c4:	89a2b03a 	or	r17,r17,r6
 402d6c8:	003f1b06 	br	402d338 <_gp+0xffff2bd4>
 402d6cc:	0101ffc4 	movi	r4,2047
 402d6d0:	813f441e 	bne	r16,r4,402d3e4 <_gp+0xffff2c80>
 402d6d4:	003f1806 	br	402d338 <_gp+0xffff2bd4>
 402d6d8:	843ff844 	addi	r16,r16,-31
 402d6dc:	01400804 	movi	r5,32
 402d6e0:	1408d83a 	srl	r4,r2,r16
 402d6e4:	19405026 	beq	r3,r5,402d828 <__subdf3+0x574>
 402d6e8:	01401004 	movi	r5,64
 402d6ec:	28c7c83a 	sub	r3,r5,r3
 402d6f0:	10c4983a 	sll	r2,r2,r3
 402d6f4:	88a2b03a 	or	r17,r17,r2
 402d6f8:	8822c03a 	cmpne	r17,r17,zero
 402d6fc:	2462b03a 	or	r17,r4,r17
 402d700:	0007883a 	mov	r3,zero
 402d704:	0021883a 	mov	r16,zero
 402d708:	003f6d06 	br	402d4c0 <_gp+0xffff2d5c>
 402d70c:	11fff804 	addi	r7,r2,-32
 402d710:	01000804 	movi	r4,32
 402d714:	29ced83a 	srl	r7,r5,r7
 402d718:	11004526 	beq	r2,r4,402d830 <__subdf3+0x57c>
 402d71c:	01001004 	movi	r4,64
 402d720:	2089c83a 	sub	r4,r4,r2
 402d724:	2904983a 	sll	r2,r5,r4
 402d728:	118cb03a 	or	r6,r2,r6
 402d72c:	300cc03a 	cmpne	r6,r6,zero
 402d730:	398cb03a 	or	r6,r7,r6
 402d734:	0005883a 	mov	r2,zero
 402d738:	003f3706 	br	402d418 <_gp+0xffff2cb4>
 402d73c:	80002a26 	beq	r16,zero,402d7e8 <__subdf3+0x534>
 402d740:	0101ffc4 	movi	r4,2047
 402d744:	49006626 	beq	r9,r4,402d8e0 <__subdf3+0x62c>
 402d748:	0085c83a 	sub	r2,zero,r2
 402d74c:	18c02034 	orhi	r3,r3,128
 402d750:	01000e04 	movi	r4,56
 402d754:	20807e16 	blt	r4,r2,402d950 <__subdf3+0x69c>
 402d758:	010007c4 	movi	r4,31
 402d75c:	2080e716 	blt	r4,r2,402dafc <__subdf3+0x848>
 402d760:	01000804 	movi	r4,32
 402d764:	2089c83a 	sub	r4,r4,r2
 402d768:	1914983a 	sll	r10,r3,r4
 402d76c:	8890d83a 	srl	r8,r17,r2
 402d770:	8908983a 	sll	r4,r17,r4
 402d774:	1884d83a 	srl	r2,r3,r2
 402d778:	5222b03a 	or	r17,r10,r8
 402d77c:	2006c03a 	cmpne	r3,r4,zero
 402d780:	88e2b03a 	or	r17,r17,r3
 402d784:	3463c83a 	sub	r17,r6,r17
 402d788:	2885c83a 	sub	r2,r5,r2
 402d78c:	344d803a 	cmpltu	r6,r6,r17
 402d790:	1187c83a 	sub	r3,r2,r6
 402d794:	4821883a 	mov	r16,r9
 402d798:	3825883a 	mov	r18,r7
 402d79c:	003f2306 	br	402d42c <_gp+0xffff2cc8>
 402d7a0:	24d0b03a 	or	r8,r4,r19
 402d7a4:	40001b1e 	bne	r8,zero,402d814 <__subdf3+0x560>
 402d7a8:	0005883a 	mov	r2,zero
 402d7ac:	0009883a 	mov	r4,zero
 402d7b0:	0021883a 	mov	r16,zero
 402d7b4:	003f4906 	br	402d4dc <_gp+0xffff2d78>
 402d7b8:	010007c4 	movi	r4,31
 402d7bc:	20803a16 	blt	r4,r2,402d8a8 <__subdf3+0x5f4>
 402d7c0:	01000804 	movi	r4,32
 402d7c4:	2089c83a 	sub	r4,r4,r2
 402d7c8:	2912983a 	sll	r9,r5,r4
 402d7cc:	3090d83a 	srl	r8,r6,r2
 402d7d0:	3108983a 	sll	r4,r6,r4
 402d7d4:	2884d83a 	srl	r2,r5,r2
 402d7d8:	4a12b03a 	or	r9,r9,r8
 402d7dc:	2008c03a 	cmpne	r4,r4,zero
 402d7e0:	4912b03a 	or	r9,r9,r4
 402d7e4:	003f4e06 	br	402d520 <_gp+0xffff2dbc>
 402d7e8:	1c48b03a 	or	r4,r3,r17
 402d7ec:	20003c26 	beq	r4,zero,402d8e0 <__subdf3+0x62c>
 402d7f0:	0084303a 	nor	r2,zero,r2
 402d7f4:	1000381e 	bne	r2,zero,402d8d8 <__subdf3+0x624>
 402d7f8:	3463c83a 	sub	r17,r6,r17
 402d7fc:	28c5c83a 	sub	r2,r5,r3
 402d800:	344d803a 	cmpltu	r6,r6,r17
 402d804:	1187c83a 	sub	r3,r2,r6
 402d808:	4821883a 	mov	r16,r9
 402d80c:	3825883a 	mov	r18,r7
 402d810:	003f0606 	br	402d42c <_gp+0xffff2cc8>
 402d814:	2023883a 	mov	r17,r4
 402d818:	003f0906 	br	402d440 <_gp+0xffff2cdc>
 402d81c:	0101ffc4 	movi	r4,2047
 402d820:	813f3a1e 	bne	r16,r4,402d50c <_gp+0xffff2da8>
 402d824:	003ec406 	br	402d338 <_gp+0xffff2bd4>
 402d828:	0005883a 	mov	r2,zero
 402d82c:	003fb106 	br	402d6f4 <_gp+0xffff2f90>
 402d830:	0005883a 	mov	r2,zero
 402d834:	003fbc06 	br	402d728 <_gp+0xffff2fc4>
 402d838:	1c44b03a 	or	r2,r3,r17
 402d83c:	80008e1e 	bne	r16,zero,402da78 <__subdf3+0x7c4>
 402d840:	1000c826 	beq	r2,zero,402db64 <__subdf3+0x8b0>
 402d844:	2984b03a 	or	r2,r5,r6
 402d848:	103ebb26 	beq	r2,zero,402d338 <_gp+0xffff2bd4>
 402d84c:	8989883a 	add	r4,r17,r6
 402d850:	1945883a 	add	r2,r3,r5
 402d854:	2447803a 	cmpltu	r3,r4,r17
 402d858:	1887883a 	add	r3,r3,r2
 402d85c:	1880202c 	andhi	r2,r3,128
 402d860:	2023883a 	mov	r17,r4
 402d864:	103f1626 	beq	r2,zero,402d4c0 <_gp+0xffff2d5c>
 402d868:	00bfe034 	movhi	r2,65408
 402d86c:	10bfffc4 	addi	r2,r2,-1
 402d870:	5021883a 	mov	r16,r10
 402d874:	1886703a 	and	r3,r3,r2
 402d878:	003eaf06 	br	402d338 <_gp+0xffff2bd4>
 402d87c:	3825883a 	mov	r18,r7
 402d880:	003f0f06 	br	402d4c0 <_gp+0xffff2d5c>
 402d884:	1c44b03a 	or	r2,r3,r17
 402d888:	8000251e 	bne	r16,zero,402d920 <__subdf3+0x66c>
 402d88c:	1000661e 	bne	r2,zero,402da28 <__subdf3+0x774>
 402d890:	2990b03a 	or	r8,r5,r6
 402d894:	40009626 	beq	r8,zero,402daf0 <__subdf3+0x83c>
 402d898:	2807883a 	mov	r3,r5
 402d89c:	3023883a 	mov	r17,r6
 402d8a0:	3825883a 	mov	r18,r7
 402d8a4:	003ea406 	br	402d338 <_gp+0xffff2bd4>
 402d8a8:	127ff804 	addi	r9,r2,-32
 402d8ac:	01000804 	movi	r4,32
 402d8b0:	2a52d83a 	srl	r9,r5,r9
 402d8b4:	11008c26 	beq	r2,r4,402dae8 <__subdf3+0x834>
 402d8b8:	01001004 	movi	r4,64
 402d8bc:	2085c83a 	sub	r2,r4,r2
 402d8c0:	2884983a 	sll	r2,r5,r2
 402d8c4:	118cb03a 	or	r6,r2,r6
 402d8c8:	300cc03a 	cmpne	r6,r6,zero
 402d8cc:	4992b03a 	or	r9,r9,r6
 402d8d0:	0005883a 	mov	r2,zero
 402d8d4:	003f1206 	br	402d520 <_gp+0xffff2dbc>
 402d8d8:	0101ffc4 	movi	r4,2047
 402d8dc:	493f9c1e 	bne	r9,r4,402d750 <_gp+0xffff2fec>
 402d8e0:	2807883a 	mov	r3,r5
 402d8e4:	3023883a 	mov	r17,r6
 402d8e8:	4821883a 	mov	r16,r9
 402d8ec:	3825883a 	mov	r18,r7
 402d8f0:	003e9106 	br	402d338 <_gp+0xffff2bd4>
 402d8f4:	80001f1e 	bne	r16,zero,402d974 <__subdf3+0x6c0>
 402d8f8:	1c48b03a 	or	r4,r3,r17
 402d8fc:	20005a26 	beq	r4,zero,402da68 <__subdf3+0x7b4>
 402d900:	0084303a 	nor	r2,zero,r2
 402d904:	1000561e 	bne	r2,zero,402da60 <__subdf3+0x7ac>
 402d908:	89a3883a 	add	r17,r17,r6
 402d90c:	1945883a 	add	r2,r3,r5
 402d910:	898d803a 	cmpltu	r6,r17,r6
 402d914:	3087883a 	add	r3,r6,r2
 402d918:	4821883a 	mov	r16,r9
 402d91c:	003f0506 	br	402d534 <_gp+0xffff2dd0>
 402d920:	10002b1e 	bne	r2,zero,402d9d0 <__subdf3+0x71c>
 402d924:	2984b03a 	or	r2,r5,r6
 402d928:	10008026 	beq	r2,zero,402db2c <__subdf3+0x878>
 402d92c:	2807883a 	mov	r3,r5
 402d930:	3023883a 	mov	r17,r6
 402d934:	3825883a 	mov	r18,r7
 402d938:	0401ffc4 	movi	r16,2047
 402d93c:	003e7e06 	br	402d338 <_gp+0xffff2bd4>
 402d940:	3809883a 	mov	r4,r7
 402d944:	0011883a 	mov	r8,zero
 402d948:	0005883a 	mov	r2,zero
 402d94c:	003ee306 	br	402d4dc <_gp+0xffff2d78>
 402d950:	1c62b03a 	or	r17,r3,r17
 402d954:	8822c03a 	cmpne	r17,r17,zero
 402d958:	0005883a 	mov	r2,zero
 402d95c:	003f8906 	br	402d784 <_gp+0xffff3020>
 402d960:	3809883a 	mov	r4,r7
 402d964:	4821883a 	mov	r16,r9
 402d968:	0011883a 	mov	r8,zero
 402d96c:	0005883a 	mov	r2,zero
 402d970:	003eda06 	br	402d4dc <_gp+0xffff2d78>
 402d974:	0101ffc4 	movi	r4,2047
 402d978:	49003b26 	beq	r9,r4,402da68 <__subdf3+0x7b4>
 402d97c:	0085c83a 	sub	r2,zero,r2
 402d980:	18c02034 	orhi	r3,r3,128
 402d984:	01000e04 	movi	r4,56
 402d988:	20806e16 	blt	r4,r2,402db44 <__subdf3+0x890>
 402d98c:	010007c4 	movi	r4,31
 402d990:	20807716 	blt	r4,r2,402db70 <__subdf3+0x8bc>
 402d994:	01000804 	movi	r4,32
 402d998:	2089c83a 	sub	r4,r4,r2
 402d99c:	1914983a 	sll	r10,r3,r4
 402d9a0:	8890d83a 	srl	r8,r17,r2
 402d9a4:	8908983a 	sll	r4,r17,r4
 402d9a8:	1884d83a 	srl	r2,r3,r2
 402d9ac:	5222b03a 	or	r17,r10,r8
 402d9b0:	2006c03a 	cmpne	r3,r4,zero
 402d9b4:	88e2b03a 	or	r17,r17,r3
 402d9b8:	89a3883a 	add	r17,r17,r6
 402d9bc:	1145883a 	add	r2,r2,r5
 402d9c0:	898d803a 	cmpltu	r6,r17,r6
 402d9c4:	3087883a 	add	r3,r6,r2
 402d9c8:	4821883a 	mov	r16,r9
 402d9cc:	003ed906 	br	402d534 <_gp+0xffff2dd0>
 402d9d0:	2984b03a 	or	r2,r5,r6
 402d9d4:	10004226 	beq	r2,zero,402dae0 <__subdf3+0x82c>
 402d9d8:	1808d0fa 	srli	r4,r3,3
 402d9dc:	8822d0fa 	srli	r17,r17,3
 402d9e0:	1806977a 	slli	r3,r3,29
 402d9e4:	2080022c 	andhi	r2,r4,8
 402d9e8:	1c62b03a 	or	r17,r3,r17
 402d9ec:	10000826 	beq	r2,zero,402da10 <__subdf3+0x75c>
 402d9f0:	2812d0fa 	srli	r9,r5,3
 402d9f4:	4880022c 	andhi	r2,r9,8
 402d9f8:	1000051e 	bne	r2,zero,402da10 <__subdf3+0x75c>
 402d9fc:	300cd0fa 	srli	r6,r6,3
 402da00:	2804977a 	slli	r2,r5,29
 402da04:	4809883a 	mov	r4,r9
 402da08:	3825883a 	mov	r18,r7
 402da0c:	11a2b03a 	or	r17,r2,r6
 402da10:	8806d77a 	srli	r3,r17,29
 402da14:	200890fa 	slli	r4,r4,3
 402da18:	882290fa 	slli	r17,r17,3
 402da1c:	0401ffc4 	movi	r16,2047
 402da20:	1906b03a 	or	r3,r3,r4
 402da24:	003e4406 	br	402d338 <_gp+0xffff2bd4>
 402da28:	2984b03a 	or	r2,r5,r6
 402da2c:	103e4226 	beq	r2,zero,402d338 <_gp+0xffff2bd4>
 402da30:	8989c83a 	sub	r4,r17,r6
 402da34:	8911803a 	cmpltu	r8,r17,r4
 402da38:	1945c83a 	sub	r2,r3,r5
 402da3c:	1205c83a 	sub	r2,r2,r8
 402da40:	1200202c 	andhi	r8,r2,128
 402da44:	403e9a26 	beq	r8,zero,402d4b0 <_gp+0xffff2d4c>
 402da48:	3463c83a 	sub	r17,r6,r17
 402da4c:	28c5c83a 	sub	r2,r5,r3
 402da50:	344d803a 	cmpltu	r6,r6,r17
 402da54:	1187c83a 	sub	r3,r2,r6
 402da58:	3825883a 	mov	r18,r7
 402da5c:	003e3606 	br	402d338 <_gp+0xffff2bd4>
 402da60:	0101ffc4 	movi	r4,2047
 402da64:	493fc71e 	bne	r9,r4,402d984 <_gp+0xffff3220>
 402da68:	2807883a 	mov	r3,r5
 402da6c:	3023883a 	mov	r17,r6
 402da70:	4821883a 	mov	r16,r9
 402da74:	003e3006 	br	402d338 <_gp+0xffff2bd4>
 402da78:	10003626 	beq	r2,zero,402db54 <__subdf3+0x8a0>
 402da7c:	2984b03a 	or	r2,r5,r6
 402da80:	10001726 	beq	r2,zero,402dae0 <__subdf3+0x82c>
 402da84:	1808d0fa 	srli	r4,r3,3
 402da88:	8822d0fa 	srli	r17,r17,3
 402da8c:	1806977a 	slli	r3,r3,29
 402da90:	2080022c 	andhi	r2,r4,8
 402da94:	1c62b03a 	or	r17,r3,r17
 402da98:	10000726 	beq	r2,zero,402dab8 <__subdf3+0x804>
 402da9c:	2812d0fa 	srli	r9,r5,3
 402daa0:	4880022c 	andhi	r2,r9,8
 402daa4:	1000041e 	bne	r2,zero,402dab8 <__subdf3+0x804>
 402daa8:	300cd0fa 	srli	r6,r6,3
 402daac:	2804977a 	slli	r2,r5,29
 402dab0:	4809883a 	mov	r4,r9
 402dab4:	11a2b03a 	or	r17,r2,r6
 402dab8:	8806d77a 	srli	r3,r17,29
 402dabc:	200890fa 	slli	r4,r4,3
 402dac0:	882290fa 	slli	r17,r17,3
 402dac4:	3825883a 	mov	r18,r7
 402dac8:	1906b03a 	or	r3,r3,r4
 402dacc:	0401ffc4 	movi	r16,2047
 402dad0:	003e1906 	br	402d338 <_gp+0xffff2bd4>
 402dad4:	000b883a 	mov	r5,zero
 402dad8:	0005883a 	mov	r2,zero
 402dadc:	003e2e06 	br	402d398 <_gp+0xffff2c34>
 402dae0:	0401ffc4 	movi	r16,2047
 402dae4:	003e1406 	br	402d338 <_gp+0xffff2bd4>
 402dae8:	0005883a 	mov	r2,zero
 402daec:	003f7506 	br	402d8c4 <_gp+0xffff3160>
 402daf0:	0005883a 	mov	r2,zero
 402daf4:	0009883a 	mov	r4,zero
 402daf8:	003e7806 	br	402d4dc <_gp+0xffff2d78>
 402dafc:	123ff804 	addi	r8,r2,-32
 402db00:	01000804 	movi	r4,32
 402db04:	1a10d83a 	srl	r8,r3,r8
 402db08:	11002526 	beq	r2,r4,402dba0 <__subdf3+0x8ec>
 402db0c:	01001004 	movi	r4,64
 402db10:	2085c83a 	sub	r2,r4,r2
 402db14:	1884983a 	sll	r2,r3,r2
 402db18:	1444b03a 	or	r2,r2,r17
 402db1c:	1004c03a 	cmpne	r2,r2,zero
 402db20:	40a2b03a 	or	r17,r8,r2
 402db24:	0005883a 	mov	r2,zero
 402db28:	003f1606 	br	402d784 <_gp+0xffff3020>
 402db2c:	02000434 	movhi	r8,16
 402db30:	0009883a 	mov	r4,zero
 402db34:	423fffc4 	addi	r8,r8,-1
 402db38:	00bfffc4 	movi	r2,-1
 402db3c:	0401ffc4 	movi	r16,2047
 402db40:	003e6606 	br	402d4dc <_gp+0xffff2d78>
 402db44:	1c62b03a 	or	r17,r3,r17
 402db48:	8822c03a 	cmpne	r17,r17,zero
 402db4c:	0005883a 	mov	r2,zero
 402db50:	003f9906 	br	402d9b8 <_gp+0xffff3254>
 402db54:	2807883a 	mov	r3,r5
 402db58:	3023883a 	mov	r17,r6
 402db5c:	0401ffc4 	movi	r16,2047
 402db60:	003df506 	br	402d338 <_gp+0xffff2bd4>
 402db64:	2807883a 	mov	r3,r5
 402db68:	3023883a 	mov	r17,r6
 402db6c:	003df206 	br	402d338 <_gp+0xffff2bd4>
 402db70:	123ff804 	addi	r8,r2,-32
 402db74:	01000804 	movi	r4,32
 402db78:	1a10d83a 	srl	r8,r3,r8
 402db7c:	11000a26 	beq	r2,r4,402dba8 <__subdf3+0x8f4>
 402db80:	01001004 	movi	r4,64
 402db84:	2085c83a 	sub	r2,r4,r2
 402db88:	1884983a 	sll	r2,r3,r2
 402db8c:	1444b03a 	or	r2,r2,r17
 402db90:	1004c03a 	cmpne	r2,r2,zero
 402db94:	40a2b03a 	or	r17,r8,r2
 402db98:	0005883a 	mov	r2,zero
 402db9c:	003f8606 	br	402d9b8 <_gp+0xffff3254>
 402dba0:	0005883a 	mov	r2,zero
 402dba4:	003fdc06 	br	402db18 <_gp+0xffff33b4>
 402dba8:	0005883a 	mov	r2,zero
 402dbac:	003ff706 	br	402db8c <_gp+0xffff3428>

0402dbb0 <__fixdfsi>:
 402dbb0:	280cd53a 	srli	r6,r5,20
 402dbb4:	00c00434 	movhi	r3,16
 402dbb8:	18ffffc4 	addi	r3,r3,-1
 402dbbc:	3181ffcc 	andi	r6,r6,2047
 402dbc0:	01c0ff84 	movi	r7,1022
 402dbc4:	28c6703a 	and	r3,r5,r3
 402dbc8:	280ad7fa 	srli	r5,r5,31
 402dbcc:	3980120e 	bge	r7,r6,402dc18 <__fixdfsi+0x68>
 402dbd0:	00810744 	movi	r2,1053
 402dbd4:	11800c16 	blt	r2,r6,402dc08 <__fixdfsi+0x58>
 402dbd8:	00810cc4 	movi	r2,1075
 402dbdc:	1185c83a 	sub	r2,r2,r6
 402dbe0:	01c007c4 	movi	r7,31
 402dbe4:	18c00434 	orhi	r3,r3,16
 402dbe8:	38800d16 	blt	r7,r2,402dc20 <__fixdfsi+0x70>
 402dbec:	31befb44 	addi	r6,r6,-1043
 402dbf0:	2084d83a 	srl	r2,r4,r2
 402dbf4:	1986983a 	sll	r3,r3,r6
 402dbf8:	1884b03a 	or	r2,r3,r2
 402dbfc:	28000726 	beq	r5,zero,402dc1c <__fixdfsi+0x6c>
 402dc00:	0085c83a 	sub	r2,zero,r2
 402dc04:	f800283a 	ret
 402dc08:	00a00034 	movhi	r2,32768
 402dc0c:	10bfffc4 	addi	r2,r2,-1
 402dc10:	2885883a 	add	r2,r5,r2
 402dc14:	f800283a 	ret
 402dc18:	0005883a 	mov	r2,zero
 402dc1c:	f800283a 	ret
 402dc20:	008104c4 	movi	r2,1043
 402dc24:	1185c83a 	sub	r2,r2,r6
 402dc28:	1884d83a 	srl	r2,r3,r2
 402dc2c:	003ff306 	br	402dbfc <_gp+0xffff3498>

0402dc30 <__floatsidf>:
 402dc30:	defffd04 	addi	sp,sp,-12
 402dc34:	dfc00215 	stw	ra,8(sp)
 402dc38:	dc400115 	stw	r17,4(sp)
 402dc3c:	dc000015 	stw	r16,0(sp)
 402dc40:	20002b26 	beq	r4,zero,402dcf0 <__floatsidf+0xc0>
 402dc44:	2023883a 	mov	r17,r4
 402dc48:	2020d7fa 	srli	r16,r4,31
 402dc4c:	20002d16 	blt	r4,zero,402dd04 <__floatsidf+0xd4>
 402dc50:	8809883a 	mov	r4,r17
 402dc54:	402ddb40 	call	402ddb4 <__clzsi2>
 402dc58:	01410784 	movi	r5,1054
 402dc5c:	288bc83a 	sub	r5,r5,r2
 402dc60:	01010cc4 	movi	r4,1075
 402dc64:	2149c83a 	sub	r4,r4,r5
 402dc68:	00c007c4 	movi	r3,31
 402dc6c:	1900160e 	bge	r3,r4,402dcc8 <__floatsidf+0x98>
 402dc70:	00c104c4 	movi	r3,1043
 402dc74:	1947c83a 	sub	r3,r3,r5
 402dc78:	88c6983a 	sll	r3,r17,r3
 402dc7c:	00800434 	movhi	r2,16
 402dc80:	10bfffc4 	addi	r2,r2,-1
 402dc84:	1886703a 	and	r3,r3,r2
 402dc88:	2941ffcc 	andi	r5,r5,2047
 402dc8c:	800d883a 	mov	r6,r16
 402dc90:	0005883a 	mov	r2,zero
 402dc94:	280a953a 	slli	r5,r5,20
 402dc98:	31803fcc 	andi	r6,r6,255
 402dc9c:	01000434 	movhi	r4,16
 402dca0:	300c97fa 	slli	r6,r6,31
 402dca4:	213fffc4 	addi	r4,r4,-1
 402dca8:	1906703a 	and	r3,r3,r4
 402dcac:	1946b03a 	or	r3,r3,r5
 402dcb0:	1986b03a 	or	r3,r3,r6
 402dcb4:	dfc00217 	ldw	ra,8(sp)
 402dcb8:	dc400117 	ldw	r17,4(sp)
 402dcbc:	dc000017 	ldw	r16,0(sp)
 402dcc0:	dec00304 	addi	sp,sp,12
 402dcc4:	f800283a 	ret
 402dcc8:	00c002c4 	movi	r3,11
 402dccc:	1887c83a 	sub	r3,r3,r2
 402dcd0:	88c6d83a 	srl	r3,r17,r3
 402dcd4:	8904983a 	sll	r2,r17,r4
 402dcd8:	01000434 	movhi	r4,16
 402dcdc:	213fffc4 	addi	r4,r4,-1
 402dce0:	2941ffcc 	andi	r5,r5,2047
 402dce4:	1906703a 	and	r3,r3,r4
 402dce8:	800d883a 	mov	r6,r16
 402dcec:	003fe906 	br	402dc94 <_gp+0xffff3530>
 402dcf0:	000d883a 	mov	r6,zero
 402dcf4:	000b883a 	mov	r5,zero
 402dcf8:	0007883a 	mov	r3,zero
 402dcfc:	0005883a 	mov	r2,zero
 402dd00:	003fe406 	br	402dc94 <_gp+0xffff3530>
 402dd04:	0123c83a 	sub	r17,zero,r4
 402dd08:	003fd106 	br	402dc50 <_gp+0xffff34ec>

0402dd0c <__floatunsidf>:
 402dd0c:	defffe04 	addi	sp,sp,-8
 402dd10:	dc000015 	stw	r16,0(sp)
 402dd14:	dfc00115 	stw	ra,4(sp)
 402dd18:	2021883a 	mov	r16,r4
 402dd1c:	20002226 	beq	r4,zero,402dda8 <__floatunsidf+0x9c>
 402dd20:	402ddb40 	call	402ddb4 <__clzsi2>
 402dd24:	01010784 	movi	r4,1054
 402dd28:	2089c83a 	sub	r4,r4,r2
 402dd2c:	01810cc4 	movi	r6,1075
 402dd30:	310dc83a 	sub	r6,r6,r4
 402dd34:	00c007c4 	movi	r3,31
 402dd38:	1980120e 	bge	r3,r6,402dd84 <__floatunsidf+0x78>
 402dd3c:	00c104c4 	movi	r3,1043
 402dd40:	1907c83a 	sub	r3,r3,r4
 402dd44:	80ca983a 	sll	r5,r16,r3
 402dd48:	00800434 	movhi	r2,16
 402dd4c:	10bfffc4 	addi	r2,r2,-1
 402dd50:	2101ffcc 	andi	r4,r4,2047
 402dd54:	0021883a 	mov	r16,zero
 402dd58:	288a703a 	and	r5,r5,r2
 402dd5c:	2008953a 	slli	r4,r4,20
 402dd60:	00c00434 	movhi	r3,16
 402dd64:	18ffffc4 	addi	r3,r3,-1
 402dd68:	28c6703a 	and	r3,r5,r3
 402dd6c:	8005883a 	mov	r2,r16
 402dd70:	1906b03a 	or	r3,r3,r4
 402dd74:	dfc00117 	ldw	ra,4(sp)
 402dd78:	dc000017 	ldw	r16,0(sp)
 402dd7c:	dec00204 	addi	sp,sp,8
 402dd80:	f800283a 	ret
 402dd84:	00c002c4 	movi	r3,11
 402dd88:	188bc83a 	sub	r5,r3,r2
 402dd8c:	814ad83a 	srl	r5,r16,r5
 402dd90:	00c00434 	movhi	r3,16
 402dd94:	18ffffc4 	addi	r3,r3,-1
 402dd98:	81a0983a 	sll	r16,r16,r6
 402dd9c:	2101ffcc 	andi	r4,r4,2047
 402dda0:	28ca703a 	and	r5,r5,r3
 402dda4:	003fed06 	br	402dd5c <_gp+0xffff35f8>
 402dda8:	0009883a 	mov	r4,zero
 402ddac:	000b883a 	mov	r5,zero
 402ddb0:	003fea06 	br	402dd5c <_gp+0xffff35f8>

0402ddb4 <__clzsi2>:
 402ddb4:	00bfffd4 	movui	r2,65535
 402ddb8:	11000536 	bltu	r2,r4,402ddd0 <__clzsi2+0x1c>
 402ddbc:	00803fc4 	movi	r2,255
 402ddc0:	11000f36 	bltu	r2,r4,402de00 <__clzsi2+0x4c>
 402ddc4:	00800804 	movi	r2,32
 402ddc8:	0007883a 	mov	r3,zero
 402ddcc:	00000506 	br	402dde4 <__clzsi2+0x30>
 402ddd0:	00804034 	movhi	r2,256
 402ddd4:	10bfffc4 	addi	r2,r2,-1
 402ddd8:	11000c2e 	bgeu	r2,r4,402de0c <__clzsi2+0x58>
 402dddc:	00800204 	movi	r2,8
 402dde0:	00c00604 	movi	r3,24
 402dde4:	20c8d83a 	srl	r4,r4,r3
 402dde8:	00c100f4 	movhi	r3,1027
 402ddec:	18c2e304 	addi	r3,r3,2956
 402ddf0:	1909883a 	add	r4,r3,r4
 402ddf4:	20c00003 	ldbu	r3,0(r4)
 402ddf8:	10c5c83a 	sub	r2,r2,r3
 402ddfc:	f800283a 	ret
 402de00:	00800604 	movi	r2,24
 402de04:	00c00204 	movi	r3,8
 402de08:	003ff606 	br	402dde4 <_gp+0xffff3680>
 402de0c:	00800404 	movi	r2,16
 402de10:	1007883a 	mov	r3,r2
 402de14:	003ff306 	br	402dde4 <_gp+0xffff3680>

0402de18 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 402de18:	defffe04 	addi	sp,sp,-8
 402de1c:	dfc00115 	stw	ra,4(sp)
 402de20:	df000015 	stw	fp,0(sp)
 402de24:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 402de28:	008100f4 	movhi	r2,1027
 402de2c:	1089e404 	addi	r2,r2,10128
 402de30:	10800017 	ldw	r2,0(r2)
 402de34:	10000526 	beq	r2,zero,402de4c <alt_get_errno+0x34>
 402de38:	008100f4 	movhi	r2,1027
 402de3c:	1089e404 	addi	r2,r2,10128
 402de40:	10800017 	ldw	r2,0(r2)
 402de44:	103ee83a 	callr	r2
 402de48:	00000206 	br	402de54 <alt_get_errno+0x3c>
 402de4c:	008100f4 	movhi	r2,1027
 402de50:	1090aa04 	addi	r2,r2,17064
}
 402de54:	e037883a 	mov	sp,fp
 402de58:	dfc00117 	ldw	ra,4(sp)
 402de5c:	df000017 	ldw	fp,0(sp)
 402de60:	dec00204 	addi	sp,sp,8
 402de64:	f800283a 	ret

0402de68 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
 402de68:	defffb04 	addi	sp,sp,-20
 402de6c:	dfc00415 	stw	ra,16(sp)
 402de70:	df000315 	stw	fp,12(sp)
 402de74:	df000304 	addi	fp,sp,12
 402de78:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
 402de7c:	e0bfff17 	ldw	r2,-4(fp)
 402de80:	10000816 	blt	r2,zero,402dea4 <close+0x3c>
 402de84:	01400304 	movi	r5,12
 402de88:	e13fff17 	ldw	r4,-4(fp)
 402de8c:	4020d7c0 	call	4020d7c <__mulsi3>
 402de90:	1007883a 	mov	r3,r2
 402de94:	008100f4 	movhi	r2,1027
 402de98:	10856104 	addi	r2,r2,5508
 402de9c:	1885883a 	add	r2,r3,r2
 402dea0:	00000106 	br	402dea8 <close+0x40>
 402dea4:	0005883a 	mov	r2,zero
 402dea8:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
 402deac:	e0bffd17 	ldw	r2,-12(fp)
 402deb0:	10001926 	beq	r2,zero,402df18 <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
 402deb4:	e0bffd17 	ldw	r2,-12(fp)
 402deb8:	10800017 	ldw	r2,0(r2)
 402debc:	10800417 	ldw	r2,16(r2)
 402dec0:	10000626 	beq	r2,zero,402dedc <close+0x74>
 402dec4:	e0bffd17 	ldw	r2,-12(fp)
 402dec8:	10800017 	ldw	r2,0(r2)
 402decc:	10800417 	ldw	r2,16(r2)
 402ded0:	e13ffd17 	ldw	r4,-12(fp)
 402ded4:	103ee83a 	callr	r2
 402ded8:	00000106 	br	402dee0 <close+0x78>
 402dedc:	0005883a 	mov	r2,zero
 402dee0:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
 402dee4:	e13fff17 	ldw	r4,-4(fp)
 402dee8:	402e5c00 	call	402e5c0 <alt_release_fd>
    if (rval < 0)
 402deec:	e0bffe17 	ldw	r2,-8(fp)
 402def0:	1000070e 	bge	r2,zero,402df10 <close+0xa8>
    {
      ALT_ERRNO = -rval;
 402def4:	402de180 	call	402de18 <alt_get_errno>
 402def8:	1007883a 	mov	r3,r2
 402defc:	e0bffe17 	ldw	r2,-8(fp)
 402df00:	0085c83a 	sub	r2,zero,r2
 402df04:	18800015 	stw	r2,0(r3)
      return -1;
 402df08:	00bfffc4 	movi	r2,-1
 402df0c:	00000706 	br	402df2c <close+0xc4>
    }
    return 0;
 402df10:	0005883a 	mov	r2,zero
 402df14:	00000506 	br	402df2c <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
 402df18:	402de180 	call	402de18 <alt_get_errno>
 402df1c:	1007883a 	mov	r3,r2
 402df20:	00801444 	movi	r2,81
 402df24:	18800015 	stw	r2,0(r3)
    return -1;
 402df28:	00bfffc4 	movi	r2,-1
  }
}
 402df2c:	e037883a 	mov	sp,fp
 402df30:	dfc00117 	ldw	ra,4(sp)
 402df34:	df000017 	ldw	fp,0(sp)
 402df38:	dec00204 	addi	sp,sp,8
 402df3c:	f800283a 	ret

0402df40 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
 402df40:	deffff04 	addi	sp,sp,-4
 402df44:	df000015 	stw	fp,0(sp)
 402df48:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
 402df4c:	0001883a 	nop
 402df50:	e037883a 	mov	sp,fp
 402df54:	df000017 	ldw	fp,0(sp)
 402df58:	dec00104 	addi	sp,sp,4
 402df5c:	f800283a 	ret

0402df60 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
 402df60:	defffc04 	addi	sp,sp,-16
 402df64:	df000315 	stw	fp,12(sp)
 402df68:	df000304 	addi	fp,sp,12
 402df6c:	e13ffd15 	stw	r4,-12(fp)
 402df70:	e17ffe15 	stw	r5,-8(fp)
 402df74:	e1bfff15 	stw	r6,-4(fp)
  return len;
 402df78:	e0bfff17 	ldw	r2,-4(fp)
}
 402df7c:	e037883a 	mov	sp,fp
 402df80:	df000017 	ldw	fp,0(sp)
 402df84:	dec00104 	addi	sp,sp,4
 402df88:	f800283a 	ret

0402df8c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 402df8c:	defffe04 	addi	sp,sp,-8
 402df90:	dfc00115 	stw	ra,4(sp)
 402df94:	df000015 	stw	fp,0(sp)
 402df98:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 402df9c:	008100f4 	movhi	r2,1027
 402dfa0:	1089e404 	addi	r2,r2,10128
 402dfa4:	10800017 	ldw	r2,0(r2)
 402dfa8:	10000526 	beq	r2,zero,402dfc0 <alt_get_errno+0x34>
 402dfac:	008100f4 	movhi	r2,1027
 402dfb0:	1089e404 	addi	r2,r2,10128
 402dfb4:	10800017 	ldw	r2,0(r2)
 402dfb8:	103ee83a 	callr	r2
 402dfbc:	00000206 	br	402dfc8 <alt_get_errno+0x3c>
 402dfc0:	008100f4 	movhi	r2,1027
 402dfc4:	1090aa04 	addi	r2,r2,17064
}
 402dfc8:	e037883a 	mov	sp,fp
 402dfcc:	dfc00117 	ldw	ra,4(sp)
 402dfd0:	df000017 	ldw	fp,0(sp)
 402dfd4:	dec00204 	addi	sp,sp,8
 402dfd8:	f800283a 	ret

0402dfdc <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
 402dfdc:	defffb04 	addi	sp,sp,-20
 402dfe0:	dfc00415 	stw	ra,16(sp)
 402dfe4:	df000315 	stw	fp,12(sp)
 402dfe8:	df000304 	addi	fp,sp,12
 402dfec:	e13ffe15 	stw	r4,-8(fp)
 402dff0:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 402dff4:	e0bffe17 	ldw	r2,-8(fp)
 402dff8:	10000816 	blt	r2,zero,402e01c <fstat+0x40>
 402dffc:	01400304 	movi	r5,12
 402e000:	e13ffe17 	ldw	r4,-8(fp)
 402e004:	4020d7c0 	call	4020d7c <__mulsi3>
 402e008:	1007883a 	mov	r3,r2
 402e00c:	008100f4 	movhi	r2,1027
 402e010:	10856104 	addi	r2,r2,5508
 402e014:	1885883a 	add	r2,r3,r2
 402e018:	00000106 	br	402e020 <fstat+0x44>
 402e01c:	0005883a 	mov	r2,zero
 402e020:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
 402e024:	e0bffd17 	ldw	r2,-12(fp)
 402e028:	10001026 	beq	r2,zero,402e06c <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
 402e02c:	e0bffd17 	ldw	r2,-12(fp)
 402e030:	10800017 	ldw	r2,0(r2)
 402e034:	10800817 	ldw	r2,32(r2)
 402e038:	10000726 	beq	r2,zero,402e058 <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
 402e03c:	e0bffd17 	ldw	r2,-12(fp)
 402e040:	10800017 	ldw	r2,0(r2)
 402e044:	10800817 	ldw	r2,32(r2)
 402e048:	e17fff17 	ldw	r5,-4(fp)
 402e04c:	e13ffd17 	ldw	r4,-12(fp)
 402e050:	103ee83a 	callr	r2
 402e054:	00000a06 	br	402e080 <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
 402e058:	e0bfff17 	ldw	r2,-4(fp)
 402e05c:	00c80004 	movi	r3,8192
 402e060:	10c00115 	stw	r3,4(r2)
      return 0;
 402e064:	0005883a 	mov	r2,zero
 402e068:	00000506 	br	402e080 <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 402e06c:	402df8c0 	call	402df8c <alt_get_errno>
 402e070:	1007883a 	mov	r3,r2
 402e074:	00801444 	movi	r2,81
 402e078:	18800015 	stw	r2,0(r3)
    return -1;
 402e07c:	00bfffc4 	movi	r2,-1
  }
}
 402e080:	e037883a 	mov	sp,fp
 402e084:	dfc00117 	ldw	ra,4(sp)
 402e088:	df000017 	ldw	fp,0(sp)
 402e08c:	dec00204 	addi	sp,sp,8
 402e090:	f800283a 	ret

0402e094 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 402e094:	defffe04 	addi	sp,sp,-8
 402e098:	dfc00115 	stw	ra,4(sp)
 402e09c:	df000015 	stw	fp,0(sp)
 402e0a0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 402e0a4:	008100f4 	movhi	r2,1027
 402e0a8:	1089e404 	addi	r2,r2,10128
 402e0ac:	10800017 	ldw	r2,0(r2)
 402e0b0:	10000526 	beq	r2,zero,402e0c8 <alt_get_errno+0x34>
 402e0b4:	008100f4 	movhi	r2,1027
 402e0b8:	1089e404 	addi	r2,r2,10128
 402e0bc:	10800017 	ldw	r2,0(r2)
 402e0c0:	103ee83a 	callr	r2
 402e0c4:	00000206 	br	402e0d0 <alt_get_errno+0x3c>
 402e0c8:	008100f4 	movhi	r2,1027
 402e0cc:	1090aa04 	addi	r2,r2,17064
}
 402e0d0:	e037883a 	mov	sp,fp
 402e0d4:	dfc00117 	ldw	ra,4(sp)
 402e0d8:	df000017 	ldw	fp,0(sp)
 402e0dc:	dec00204 	addi	sp,sp,8
 402e0e0:	f800283a 	ret

0402e0e4 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
 402e0e4:	deffed04 	addi	sp,sp,-76
 402e0e8:	dfc01215 	stw	ra,72(sp)
 402e0ec:	df001115 	stw	fp,68(sp)
 402e0f0:	df001104 	addi	fp,sp,68
 402e0f4:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 402e0f8:	e0bfff17 	ldw	r2,-4(fp)
 402e0fc:	10000816 	blt	r2,zero,402e120 <isatty+0x3c>
 402e100:	01400304 	movi	r5,12
 402e104:	e13fff17 	ldw	r4,-4(fp)
 402e108:	4020d7c0 	call	4020d7c <__mulsi3>
 402e10c:	1007883a 	mov	r3,r2
 402e110:	008100f4 	movhi	r2,1027
 402e114:	10856104 	addi	r2,r2,5508
 402e118:	1885883a 	add	r2,r3,r2
 402e11c:	00000106 	br	402e124 <isatty+0x40>
 402e120:	0005883a 	mov	r2,zero
 402e124:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
 402e128:	e0bfef17 	ldw	r2,-68(fp)
 402e12c:	10000e26 	beq	r2,zero,402e168 <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
 402e130:	e0bfef17 	ldw	r2,-68(fp)
 402e134:	10800017 	ldw	r2,0(r2)
 402e138:	10800817 	ldw	r2,32(r2)
 402e13c:	1000021e 	bne	r2,zero,402e148 <isatty+0x64>
    {
      return 1;
 402e140:	00800044 	movi	r2,1
 402e144:	00000d06 	br	402e17c <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
 402e148:	e0bff004 	addi	r2,fp,-64
 402e14c:	100b883a 	mov	r5,r2
 402e150:	e13fff17 	ldw	r4,-4(fp)
 402e154:	402dfdc0 	call	402dfdc <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
 402e158:	e0bff117 	ldw	r2,-60(fp)
 402e15c:	10880020 	cmpeqi	r2,r2,8192
 402e160:	10803fcc 	andi	r2,r2,255
 402e164:	00000506 	br	402e17c <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 402e168:	402e0940 	call	402e094 <alt_get_errno>
 402e16c:	1007883a 	mov	r3,r2
 402e170:	00801444 	movi	r2,81
 402e174:	18800015 	stw	r2,0(r3)
    return 0;
 402e178:	0005883a 	mov	r2,zero
  }
}
 402e17c:	e037883a 	mov	sp,fp
 402e180:	dfc00117 	ldw	ra,4(sp)
 402e184:	df000017 	ldw	fp,0(sp)
 402e188:	dec00204 	addi	sp,sp,8
 402e18c:	f800283a 	ret

0402e190 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
 402e190:	defffc04 	addi	sp,sp,-16
 402e194:	df000315 	stw	fp,12(sp)
 402e198:	df000304 	addi	fp,sp,12
 402e19c:	e13ffd15 	stw	r4,-12(fp)
 402e1a0:	e17ffe15 	stw	r5,-8(fp)
 402e1a4:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
 402e1a8:	e0fffe17 	ldw	r3,-8(fp)
 402e1ac:	e0bffd17 	ldw	r2,-12(fp)
 402e1b0:	18800c26 	beq	r3,r2,402e1e4 <alt_load_section+0x54>
  {
    while( to != end )
 402e1b4:	00000806 	br	402e1d8 <alt_load_section+0x48>
    {
      *to++ = *from++;
 402e1b8:	e0bffe17 	ldw	r2,-8(fp)
 402e1bc:	10c00104 	addi	r3,r2,4
 402e1c0:	e0fffe15 	stw	r3,-8(fp)
 402e1c4:	e0fffd17 	ldw	r3,-12(fp)
 402e1c8:	19000104 	addi	r4,r3,4
 402e1cc:	e13ffd15 	stw	r4,-12(fp)
 402e1d0:	18c00017 	ldw	r3,0(r3)
 402e1d4:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
 402e1d8:	e0fffe17 	ldw	r3,-8(fp)
 402e1dc:	e0bfff17 	ldw	r2,-4(fp)
 402e1e0:	18bff51e 	bne	r3,r2,402e1b8 <_gp+0xffff3a54>
    {
      *to++ = *from++;
    }
  }
}
 402e1e4:	0001883a 	nop
 402e1e8:	e037883a 	mov	sp,fp
 402e1ec:	df000017 	ldw	fp,0(sp)
 402e1f0:	dec00104 	addi	sp,sp,4
 402e1f4:	f800283a 	ret

0402e1f8 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
 402e1f8:	defffe04 	addi	sp,sp,-8
 402e1fc:	dfc00115 	stw	ra,4(sp)
 402e200:	df000015 	stw	fp,0(sp)
 402e204:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
 402e208:	018100f4 	movhi	r6,1027
 402e20c:	3189e904 	addi	r6,r6,10148
 402e210:	014100f4 	movhi	r5,1027
 402e214:	29432e04 	addi	r5,r5,3256
 402e218:	010100f4 	movhi	r4,1027
 402e21c:	2109e904 	addi	r4,r4,10148
 402e220:	402e1900 	call	402e190 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
 402e224:	018100b4 	movhi	r6,1026
 402e228:	31808c04 	addi	r6,r6,560
 402e22c:	014100b4 	movhi	r5,1026
 402e230:	29400804 	addi	r5,r5,32
 402e234:	010100b4 	movhi	r4,1026
 402e238:	21000804 	addi	r4,r4,32
 402e23c:	402e1900 	call	402e190 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
 402e240:	018100f4 	movhi	r6,1027
 402e244:	31832e04 	addi	r6,r6,3256
 402e248:	014100f4 	movhi	r5,1027
 402e24c:	29421d04 	addi	r5,r5,2164
 402e250:	010100f4 	movhi	r4,1027
 402e254:	21021d04 	addi	r4,r4,2164
 402e258:	402e1900 	call	402e190 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
 402e25c:	402df400 	call	402df40 <alt_dcache_flush_all>
  alt_icache_flush_all();
 402e260:	402fab40 	call	402fab4 <alt_icache_flush_all>
}
 402e264:	0001883a 	nop
 402e268:	e037883a 	mov	sp,fp
 402e26c:	dfc00117 	ldw	ra,4(sp)
 402e270:	df000017 	ldw	fp,0(sp)
 402e274:	dec00204 	addi	sp,sp,8
 402e278:	f800283a 	ret

0402e27c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 402e27c:	defffe04 	addi	sp,sp,-8
 402e280:	dfc00115 	stw	ra,4(sp)
 402e284:	df000015 	stw	fp,0(sp)
 402e288:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 402e28c:	008100f4 	movhi	r2,1027
 402e290:	1089e404 	addi	r2,r2,10128
 402e294:	10800017 	ldw	r2,0(r2)
 402e298:	10000526 	beq	r2,zero,402e2b0 <alt_get_errno+0x34>
 402e29c:	008100f4 	movhi	r2,1027
 402e2a0:	1089e404 	addi	r2,r2,10128
 402e2a4:	10800017 	ldw	r2,0(r2)
 402e2a8:	103ee83a 	callr	r2
 402e2ac:	00000206 	br	402e2b8 <alt_get_errno+0x3c>
 402e2b0:	008100f4 	movhi	r2,1027
 402e2b4:	1090aa04 	addi	r2,r2,17064
}
 402e2b8:	e037883a 	mov	sp,fp
 402e2bc:	dfc00117 	ldw	ra,4(sp)
 402e2c0:	df000017 	ldw	fp,0(sp)
 402e2c4:	dec00204 	addi	sp,sp,8
 402e2c8:	f800283a 	ret

0402e2cc <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
 402e2cc:	defff904 	addi	sp,sp,-28
 402e2d0:	dfc00615 	stw	ra,24(sp)
 402e2d4:	df000515 	stw	fp,20(sp)
 402e2d8:	df000504 	addi	fp,sp,20
 402e2dc:	e13ffd15 	stw	r4,-12(fp)
 402e2e0:	e17ffe15 	stw	r5,-8(fp)
 402e2e4:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
 402e2e8:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 402e2ec:	e0bffd17 	ldw	r2,-12(fp)
 402e2f0:	10000816 	blt	r2,zero,402e314 <lseek+0x48>
 402e2f4:	01400304 	movi	r5,12
 402e2f8:	e13ffd17 	ldw	r4,-12(fp)
 402e2fc:	4020d7c0 	call	4020d7c <__mulsi3>
 402e300:	1007883a 	mov	r3,r2
 402e304:	008100f4 	movhi	r2,1027
 402e308:	10856104 	addi	r2,r2,5508
 402e30c:	1885883a 	add	r2,r3,r2
 402e310:	00000106 	br	402e318 <lseek+0x4c>
 402e314:	0005883a 	mov	r2,zero
 402e318:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
 402e31c:	e0bffc17 	ldw	r2,-16(fp)
 402e320:	10001026 	beq	r2,zero,402e364 <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
 402e324:	e0bffc17 	ldw	r2,-16(fp)
 402e328:	10800017 	ldw	r2,0(r2)
 402e32c:	10800717 	ldw	r2,28(r2)
 402e330:	10000926 	beq	r2,zero,402e358 <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
 402e334:	e0bffc17 	ldw	r2,-16(fp)
 402e338:	10800017 	ldw	r2,0(r2)
 402e33c:	10800717 	ldw	r2,28(r2)
 402e340:	e1bfff17 	ldw	r6,-4(fp)
 402e344:	e17ffe17 	ldw	r5,-8(fp)
 402e348:	e13ffc17 	ldw	r4,-16(fp)
 402e34c:	103ee83a 	callr	r2
 402e350:	e0bffb15 	stw	r2,-20(fp)
 402e354:	00000506 	br	402e36c <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
 402e358:	00bfde84 	movi	r2,-134
 402e35c:	e0bffb15 	stw	r2,-20(fp)
 402e360:	00000206 	br	402e36c <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
 402e364:	00bfebc4 	movi	r2,-81
 402e368:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
 402e36c:	e0bffb17 	ldw	r2,-20(fp)
 402e370:	1000070e 	bge	r2,zero,402e390 <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
 402e374:	402e27c0 	call	402e27c <alt_get_errno>
 402e378:	1007883a 	mov	r3,r2
 402e37c:	e0bffb17 	ldw	r2,-20(fp)
 402e380:	0085c83a 	sub	r2,zero,r2
 402e384:	18800015 	stw	r2,0(r3)
    rc = -1;
 402e388:	00bfffc4 	movi	r2,-1
 402e38c:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
 402e390:	e0bffb17 	ldw	r2,-20(fp)
}
 402e394:	e037883a 	mov	sp,fp
 402e398:	dfc00117 	ldw	ra,4(sp)
 402e39c:	df000017 	ldw	fp,0(sp)
 402e3a0:	dec00204 	addi	sp,sp,8
 402e3a4:	f800283a 	ret

0402e3a8 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
 402e3a8:	defffd04 	addi	sp,sp,-12
 402e3ac:	dfc00215 	stw	ra,8(sp)
 402e3b0:	df000115 	stw	fp,4(sp)
 402e3b4:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
 402e3b8:	0009883a 	mov	r4,zero
 402e3bc:	402ea500 	call	402ea50 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
 402e3c0:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
 402e3c4:	402ea880 	call	402ea88 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
 402e3c8:	018100f4 	movhi	r6,1027
 402e3cc:	31832604 	addi	r6,r6,3224
 402e3d0:	014100f4 	movhi	r5,1027
 402e3d4:	29432604 	addi	r5,r5,3224
 402e3d8:	010100f4 	movhi	r4,1027
 402e3dc:	21032604 	addi	r4,r4,3224
 402e3e0:	402fe880 	call	402fe88 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
 402e3e4:	402f9f40 	call	402f9f4 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
 402e3e8:	010100f4 	movhi	r4,1027
 402e3ec:	213e9504 	addi	r4,r4,-1452
 402e3f0:	40304e00 	call	40304e0 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
 402e3f4:	d0a6d217 	ldw	r2,-25784(gp)
 402e3f8:	d0e6d317 	ldw	r3,-25780(gp)
 402e3fc:	d126d417 	ldw	r4,-25776(gp)
 402e400:	200d883a 	mov	r6,r4
 402e404:	180b883a 	mov	r5,r3
 402e408:	1009883a 	mov	r4,r2
 402e40c:	402026c0 	call	402026c <main>
 402e410:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
 402e414:	01000044 	movi	r4,1
 402e418:	402de680 	call	402de68 <close>
  exit (result);
 402e41c:	e13fff17 	ldw	r4,-4(fp)
 402e420:	40304f40 	call	40304f4 <exit>

0402e424 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
 402e424:	defffe04 	addi	sp,sp,-8
 402e428:	df000115 	stw	fp,4(sp)
 402e42c:	df000104 	addi	fp,sp,4
 402e430:	e13fff15 	stw	r4,-4(fp)
}
 402e434:	0001883a 	nop
 402e438:	e037883a 	mov	sp,fp
 402e43c:	df000017 	ldw	fp,0(sp)
 402e440:	dec00104 	addi	sp,sp,4
 402e444:	f800283a 	ret

0402e448 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
 402e448:	defffe04 	addi	sp,sp,-8
 402e44c:	df000115 	stw	fp,4(sp)
 402e450:	df000104 	addi	fp,sp,4
 402e454:	e13fff15 	stw	r4,-4(fp)
}
 402e458:	0001883a 	nop
 402e45c:	e037883a 	mov	sp,fp
 402e460:	df000017 	ldw	fp,0(sp)
 402e464:	dec00104 	addi	sp,sp,4
 402e468:	f800283a 	ret

0402e46c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 402e46c:	defffe04 	addi	sp,sp,-8
 402e470:	dfc00115 	stw	ra,4(sp)
 402e474:	df000015 	stw	fp,0(sp)
 402e478:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 402e47c:	008100f4 	movhi	r2,1027
 402e480:	1089e404 	addi	r2,r2,10128
 402e484:	10800017 	ldw	r2,0(r2)
 402e488:	10000526 	beq	r2,zero,402e4a0 <alt_get_errno+0x34>
 402e48c:	008100f4 	movhi	r2,1027
 402e490:	1089e404 	addi	r2,r2,10128
 402e494:	10800017 	ldw	r2,0(r2)
 402e498:	103ee83a 	callr	r2
 402e49c:	00000206 	br	402e4a8 <alt_get_errno+0x3c>
 402e4a0:	008100f4 	movhi	r2,1027
 402e4a4:	1090aa04 	addi	r2,r2,17064
}
 402e4a8:	e037883a 	mov	sp,fp
 402e4ac:	dfc00117 	ldw	ra,4(sp)
 402e4b0:	df000017 	ldw	fp,0(sp)
 402e4b4:	dec00204 	addi	sp,sp,8
 402e4b8:	f800283a 	ret

0402e4bc <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
 402e4bc:	defff904 	addi	sp,sp,-28
 402e4c0:	dfc00615 	stw	ra,24(sp)
 402e4c4:	df000515 	stw	fp,20(sp)
 402e4c8:	df000504 	addi	fp,sp,20
 402e4cc:	e13ffd15 	stw	r4,-12(fp)
 402e4d0:	e17ffe15 	stw	r5,-8(fp)
 402e4d4:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 402e4d8:	e0bffd17 	ldw	r2,-12(fp)
 402e4dc:	10000816 	blt	r2,zero,402e500 <read+0x44>
 402e4e0:	01400304 	movi	r5,12
 402e4e4:	e13ffd17 	ldw	r4,-12(fp)
 402e4e8:	4020d7c0 	call	4020d7c <__mulsi3>
 402e4ec:	1007883a 	mov	r3,r2
 402e4f0:	008100f4 	movhi	r2,1027
 402e4f4:	10856104 	addi	r2,r2,5508
 402e4f8:	1885883a 	add	r2,r3,r2
 402e4fc:	00000106 	br	402e504 <read+0x48>
 402e500:	0005883a 	mov	r2,zero
 402e504:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 402e508:	e0bffb17 	ldw	r2,-20(fp)
 402e50c:	10002226 	beq	r2,zero,402e598 <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 402e510:	e0bffb17 	ldw	r2,-20(fp)
 402e514:	10800217 	ldw	r2,8(r2)
 402e518:	108000cc 	andi	r2,r2,3
 402e51c:	10800060 	cmpeqi	r2,r2,1
 402e520:	1000181e 	bne	r2,zero,402e584 <read+0xc8>
        (fd->dev->read))
 402e524:	e0bffb17 	ldw	r2,-20(fp)
 402e528:	10800017 	ldw	r2,0(r2)
 402e52c:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 402e530:	10001426 	beq	r2,zero,402e584 <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
 402e534:	e0bffb17 	ldw	r2,-20(fp)
 402e538:	10800017 	ldw	r2,0(r2)
 402e53c:	10800517 	ldw	r2,20(r2)
 402e540:	e0ffff17 	ldw	r3,-4(fp)
 402e544:	180d883a 	mov	r6,r3
 402e548:	e17ffe17 	ldw	r5,-8(fp)
 402e54c:	e13ffb17 	ldw	r4,-20(fp)
 402e550:	103ee83a 	callr	r2
 402e554:	e0bffc15 	stw	r2,-16(fp)
 402e558:	e0bffc17 	ldw	r2,-16(fp)
 402e55c:	1000070e 	bge	r2,zero,402e57c <read+0xc0>
        {
          ALT_ERRNO = -rval;
 402e560:	402e46c0 	call	402e46c <alt_get_errno>
 402e564:	1007883a 	mov	r3,r2
 402e568:	e0bffc17 	ldw	r2,-16(fp)
 402e56c:	0085c83a 	sub	r2,zero,r2
 402e570:	18800015 	stw	r2,0(r3)
          return -1;
 402e574:	00bfffc4 	movi	r2,-1
 402e578:	00000c06 	br	402e5ac <read+0xf0>
        }
        return rval;
 402e57c:	e0bffc17 	ldw	r2,-16(fp)
 402e580:	00000a06 	br	402e5ac <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
 402e584:	402e46c0 	call	402e46c <alt_get_errno>
 402e588:	1007883a 	mov	r3,r2
 402e58c:	00800344 	movi	r2,13
 402e590:	18800015 	stw	r2,0(r3)
 402e594:	00000406 	br	402e5a8 <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
 402e598:	402e46c0 	call	402e46c <alt_get_errno>
 402e59c:	1007883a 	mov	r3,r2
 402e5a0:	00801444 	movi	r2,81
 402e5a4:	18800015 	stw	r2,0(r3)
  }
  return -1;
 402e5a8:	00bfffc4 	movi	r2,-1
}
 402e5ac:	e037883a 	mov	sp,fp
 402e5b0:	dfc00117 	ldw	ra,4(sp)
 402e5b4:	df000017 	ldw	fp,0(sp)
 402e5b8:	dec00204 	addi	sp,sp,8
 402e5bc:	f800283a 	ret

0402e5c0 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
 402e5c0:	defffc04 	addi	sp,sp,-16
 402e5c4:	dfc00315 	stw	ra,12(sp)
 402e5c8:	df000215 	stw	fp,8(sp)
 402e5cc:	dc000115 	stw	r16,4(sp)
 402e5d0:	df000204 	addi	fp,sp,8
 402e5d4:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
 402e5d8:	e0bffe17 	ldw	r2,-8(fp)
 402e5dc:	108000d0 	cmplti	r2,r2,3
 402e5e0:	1000111e 	bne	r2,zero,402e628 <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
 402e5e4:	040100f4 	movhi	r16,1027
 402e5e8:	84056104 	addi	r16,r16,5508
 402e5ec:	e0bffe17 	ldw	r2,-8(fp)
 402e5f0:	01400304 	movi	r5,12
 402e5f4:	1009883a 	mov	r4,r2
 402e5f8:	4020d7c0 	call	4020d7c <__mulsi3>
 402e5fc:	8085883a 	add	r2,r16,r2
 402e600:	10800204 	addi	r2,r2,8
 402e604:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
 402e608:	040100f4 	movhi	r16,1027
 402e60c:	84056104 	addi	r16,r16,5508
 402e610:	e0bffe17 	ldw	r2,-8(fp)
 402e614:	01400304 	movi	r5,12
 402e618:	1009883a 	mov	r4,r2
 402e61c:	4020d7c0 	call	4020d7c <__mulsi3>
 402e620:	8085883a 	add	r2,r16,r2
 402e624:	10000015 	stw	zero,0(r2)
  }
}
 402e628:	0001883a 	nop
 402e62c:	e6ffff04 	addi	sp,fp,-4
 402e630:	dfc00217 	ldw	ra,8(sp)
 402e634:	df000117 	ldw	fp,4(sp)
 402e638:	dc000017 	ldw	r16,0(sp)
 402e63c:	dec00304 	addi	sp,sp,12
 402e640:	f800283a 	ret

0402e644 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
 402e644:	defff904 	addi	sp,sp,-28
 402e648:	df000615 	stw	fp,24(sp)
 402e64c:	df000604 	addi	fp,sp,24
 402e650:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 402e654:	0005303a 	rdctl	r2,status
 402e658:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 402e65c:	e0fffe17 	ldw	r3,-8(fp)
 402e660:	00bfff84 	movi	r2,-2
 402e664:	1884703a 	and	r2,r3,r2
 402e668:	1001703a 	wrctl	status,r2
  
  return context;
 402e66c:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
 402e670:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
 402e674:	d0a00c17 	ldw	r2,-32720(gp)
 402e678:	10c000c4 	addi	r3,r2,3
 402e67c:	00bfff04 	movi	r2,-4
 402e680:	1884703a 	and	r2,r3,r2
 402e684:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
 402e688:	d0e00c17 	ldw	r3,-32720(gp)
 402e68c:	e0bfff17 	ldw	r2,-4(fp)
 402e690:	1887883a 	add	r3,r3,r2
 402e694:	00810134 	movhi	r2,1028
 402e698:	10a1a804 	addi	r2,r2,-31072
 402e69c:	10c0062e 	bgeu	r2,r3,402e6b8 <sbrk+0x74>
 402e6a0:	e0bffb17 	ldw	r2,-20(fp)
 402e6a4:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 402e6a8:	e0bffa17 	ldw	r2,-24(fp)
 402e6ac:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
 402e6b0:	00bfffc4 	movi	r2,-1
 402e6b4:	00000b06 	br	402e6e4 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
 402e6b8:	d0a00c17 	ldw	r2,-32720(gp)
 402e6bc:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
 402e6c0:	d0e00c17 	ldw	r3,-32720(gp)
 402e6c4:	e0bfff17 	ldw	r2,-4(fp)
 402e6c8:	1885883a 	add	r2,r3,r2
 402e6cc:	d0a00c15 	stw	r2,-32720(gp)
 402e6d0:	e0bffb17 	ldw	r2,-20(fp)
 402e6d4:	e0bffc15 	stw	r2,-16(fp)
 402e6d8:	e0bffc17 	ldw	r2,-16(fp)
 402e6dc:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
 402e6e0:	e0bffd17 	ldw	r2,-12(fp)
} 
 402e6e4:	e037883a 	mov	sp,fp
 402e6e8:	df000017 	ldw	fp,0(sp)
 402e6ec:	dec00104 	addi	sp,sp,4
 402e6f0:	f800283a 	ret

0402e6f4 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
 402e6f4:	defffa04 	addi	sp,sp,-24
 402e6f8:	df000515 	stw	fp,20(sp)
 402e6fc:	df000504 	addi	fp,sp,20
 402e700:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 402e704:	0005303a 	rdctl	r2,status
 402e708:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 402e70c:	e0fffc17 	ldw	r3,-16(fp)
 402e710:	00bfff84 	movi	r2,-2
 402e714:	1884703a 	and	r2,r3,r2
 402e718:	1001703a 	wrctl	status,r2
  
  return context;
 402e71c:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
 402e720:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
 402e724:	e0bfff17 	ldw	r2,-4(fp)
 402e728:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
 402e72c:	e0bffd17 	ldw	r2,-12(fp)
 402e730:	10800017 	ldw	r2,0(r2)
 402e734:	e0fffd17 	ldw	r3,-12(fp)
 402e738:	18c00117 	ldw	r3,4(r3)
 402e73c:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
 402e740:	e0bffd17 	ldw	r2,-12(fp)
 402e744:	10800117 	ldw	r2,4(r2)
 402e748:	e0fffd17 	ldw	r3,-12(fp)
 402e74c:	18c00017 	ldw	r3,0(r3)
 402e750:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
 402e754:	e0bffd17 	ldw	r2,-12(fp)
 402e758:	e0fffd17 	ldw	r3,-12(fp)
 402e75c:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
 402e760:	e0bffd17 	ldw	r2,-12(fp)
 402e764:	e0fffd17 	ldw	r3,-12(fp)
 402e768:	10c00015 	stw	r3,0(r2)
 402e76c:	e0bffb17 	ldw	r2,-20(fp)
 402e770:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 402e774:	e0bffe17 	ldw	r2,-8(fp)
 402e778:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
 402e77c:	0001883a 	nop
 402e780:	e037883a 	mov	sp,fp
 402e784:	df000017 	ldw	fp,0(sp)
 402e788:	dec00104 	addi	sp,sp,4
 402e78c:	f800283a 	ret

0402e790 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
 402e790:	defffb04 	addi	sp,sp,-20
 402e794:	dfc00415 	stw	ra,16(sp)
 402e798:	df000315 	stw	fp,12(sp)
 402e79c:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
 402e7a0:	d0a00d17 	ldw	r2,-32716(gp)
 402e7a4:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
 402e7a8:	d0a6d617 	ldw	r2,-25768(gp)
 402e7ac:	10800044 	addi	r2,r2,1
 402e7b0:	d0a6d615 	stw	r2,-25768(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 402e7b4:	00002e06 	br	402e870 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
 402e7b8:	e0bffd17 	ldw	r2,-12(fp)
 402e7bc:	10800017 	ldw	r2,0(r2)
 402e7c0:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
 402e7c4:	e0bffd17 	ldw	r2,-12(fp)
 402e7c8:	10800403 	ldbu	r2,16(r2)
 402e7cc:	10803fcc 	andi	r2,r2,255
 402e7d0:	10000426 	beq	r2,zero,402e7e4 <alt_tick+0x54>
 402e7d4:	d0a6d617 	ldw	r2,-25768(gp)
 402e7d8:	1000021e 	bne	r2,zero,402e7e4 <alt_tick+0x54>
    {
      alarm->rollover = 0;
 402e7dc:	e0bffd17 	ldw	r2,-12(fp)
 402e7e0:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
 402e7e4:	e0bffd17 	ldw	r2,-12(fp)
 402e7e8:	10800217 	ldw	r2,8(r2)
 402e7ec:	d0e6d617 	ldw	r3,-25768(gp)
 402e7f0:	18801d36 	bltu	r3,r2,402e868 <alt_tick+0xd8>
 402e7f4:	e0bffd17 	ldw	r2,-12(fp)
 402e7f8:	10800403 	ldbu	r2,16(r2)
 402e7fc:	10803fcc 	andi	r2,r2,255
 402e800:	1000191e 	bne	r2,zero,402e868 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
 402e804:	e0bffd17 	ldw	r2,-12(fp)
 402e808:	10800317 	ldw	r2,12(r2)
 402e80c:	e0fffd17 	ldw	r3,-12(fp)
 402e810:	18c00517 	ldw	r3,20(r3)
 402e814:	1809883a 	mov	r4,r3
 402e818:	103ee83a 	callr	r2
 402e81c:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
 402e820:	e0bfff17 	ldw	r2,-4(fp)
 402e824:	1000031e 	bne	r2,zero,402e834 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
 402e828:	e13ffd17 	ldw	r4,-12(fp)
 402e82c:	402e6f40 	call	402e6f4 <alt_alarm_stop>
 402e830:	00000d06 	br	402e868 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
 402e834:	e0bffd17 	ldw	r2,-12(fp)
 402e838:	10c00217 	ldw	r3,8(r2)
 402e83c:	e0bfff17 	ldw	r2,-4(fp)
 402e840:	1887883a 	add	r3,r3,r2
 402e844:	e0bffd17 	ldw	r2,-12(fp)
 402e848:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
 402e84c:	e0bffd17 	ldw	r2,-12(fp)
 402e850:	10c00217 	ldw	r3,8(r2)
 402e854:	d0a6d617 	ldw	r2,-25768(gp)
 402e858:	1880032e 	bgeu	r3,r2,402e868 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
 402e85c:	e0bffd17 	ldw	r2,-12(fp)
 402e860:	00c00044 	movi	r3,1
 402e864:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
 402e868:	e0bffe17 	ldw	r2,-8(fp)
 402e86c:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 402e870:	e0fffd17 	ldw	r3,-12(fp)
 402e874:	d0a00d04 	addi	r2,gp,-32716
 402e878:	18bfcf1e 	bne	r3,r2,402e7b8 <_gp+0xffff4054>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
 402e87c:	0001883a 	nop
}
 402e880:	0001883a 	nop
 402e884:	e037883a 	mov	sp,fp
 402e888:	dfc00117 	ldw	ra,4(sp)
 402e88c:	df000017 	ldw	fp,0(sp)
 402e890:	dec00204 	addi	sp,sp,8
 402e894:	f800283a 	ret

0402e898 <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
 402e898:	defffd04 	addi	sp,sp,-12
 402e89c:	dfc00215 	stw	ra,8(sp)
 402e8a0:	df000115 	stw	fp,4(sp)
 402e8a4:	df000104 	addi	fp,sp,4
 402e8a8:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
 402e8ac:	e13fff17 	ldw	r4,-4(fp)
 402e8b0:	402f7a80 	call	402f7a8 <alt_busy_sleep>
}
 402e8b4:	e037883a 	mov	sp,fp
 402e8b8:	dfc00117 	ldw	ra,4(sp)
 402e8bc:	df000017 	ldw	fp,0(sp)
 402e8c0:	dec00204 	addi	sp,sp,8
 402e8c4:	f800283a 	ret

0402e8c8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 402e8c8:	defffe04 	addi	sp,sp,-8
 402e8cc:	dfc00115 	stw	ra,4(sp)
 402e8d0:	df000015 	stw	fp,0(sp)
 402e8d4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 402e8d8:	008100f4 	movhi	r2,1027
 402e8dc:	1089e404 	addi	r2,r2,10128
 402e8e0:	10800017 	ldw	r2,0(r2)
 402e8e4:	10000526 	beq	r2,zero,402e8fc <alt_get_errno+0x34>
 402e8e8:	008100f4 	movhi	r2,1027
 402e8ec:	1089e404 	addi	r2,r2,10128
 402e8f0:	10800017 	ldw	r2,0(r2)
 402e8f4:	103ee83a 	callr	r2
 402e8f8:	00000206 	br	402e904 <alt_get_errno+0x3c>
 402e8fc:	008100f4 	movhi	r2,1027
 402e900:	1090aa04 	addi	r2,r2,17064
}
 402e904:	e037883a 	mov	sp,fp
 402e908:	dfc00117 	ldw	ra,4(sp)
 402e90c:	df000017 	ldw	fp,0(sp)
 402e910:	dec00204 	addi	sp,sp,8
 402e914:	f800283a 	ret

0402e918 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
 402e918:	defff904 	addi	sp,sp,-28
 402e91c:	dfc00615 	stw	ra,24(sp)
 402e920:	df000515 	stw	fp,20(sp)
 402e924:	df000504 	addi	fp,sp,20
 402e928:	e13ffd15 	stw	r4,-12(fp)
 402e92c:	e17ffe15 	stw	r5,-8(fp)
 402e930:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 402e934:	e0bffd17 	ldw	r2,-12(fp)
 402e938:	10000816 	blt	r2,zero,402e95c <write+0x44>
 402e93c:	01400304 	movi	r5,12
 402e940:	e13ffd17 	ldw	r4,-12(fp)
 402e944:	4020d7c0 	call	4020d7c <__mulsi3>
 402e948:	1007883a 	mov	r3,r2
 402e94c:	008100f4 	movhi	r2,1027
 402e950:	10856104 	addi	r2,r2,5508
 402e954:	1885883a 	add	r2,r3,r2
 402e958:	00000106 	br	402e960 <write+0x48>
 402e95c:	0005883a 	mov	r2,zero
 402e960:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 402e964:	e0bffb17 	ldw	r2,-20(fp)
 402e968:	10002126 	beq	r2,zero,402e9f0 <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
 402e96c:	e0bffb17 	ldw	r2,-20(fp)
 402e970:	10800217 	ldw	r2,8(r2)
 402e974:	108000cc 	andi	r2,r2,3
 402e978:	10001826 	beq	r2,zero,402e9dc <write+0xc4>
 402e97c:	e0bffb17 	ldw	r2,-20(fp)
 402e980:	10800017 	ldw	r2,0(r2)
 402e984:	10800617 	ldw	r2,24(r2)
 402e988:	10001426 	beq	r2,zero,402e9dc <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
 402e98c:	e0bffb17 	ldw	r2,-20(fp)
 402e990:	10800017 	ldw	r2,0(r2)
 402e994:	10800617 	ldw	r2,24(r2)
 402e998:	e0ffff17 	ldw	r3,-4(fp)
 402e99c:	180d883a 	mov	r6,r3
 402e9a0:	e17ffe17 	ldw	r5,-8(fp)
 402e9a4:	e13ffb17 	ldw	r4,-20(fp)
 402e9a8:	103ee83a 	callr	r2
 402e9ac:	e0bffc15 	stw	r2,-16(fp)
 402e9b0:	e0bffc17 	ldw	r2,-16(fp)
 402e9b4:	1000070e 	bge	r2,zero,402e9d4 <write+0xbc>
      {
        ALT_ERRNO = -rval;
 402e9b8:	402e8c80 	call	402e8c8 <alt_get_errno>
 402e9bc:	1007883a 	mov	r3,r2
 402e9c0:	e0bffc17 	ldw	r2,-16(fp)
 402e9c4:	0085c83a 	sub	r2,zero,r2
 402e9c8:	18800015 	stw	r2,0(r3)
        return -1;
 402e9cc:	00bfffc4 	movi	r2,-1
 402e9d0:	00000c06 	br	402ea04 <write+0xec>
      }
      return rval;
 402e9d4:	e0bffc17 	ldw	r2,-16(fp)
 402e9d8:	00000a06 	br	402ea04 <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
 402e9dc:	402e8c80 	call	402e8c8 <alt_get_errno>
 402e9e0:	1007883a 	mov	r3,r2
 402e9e4:	00800344 	movi	r2,13
 402e9e8:	18800015 	stw	r2,0(r3)
 402e9ec:	00000406 	br	402ea00 <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
 402e9f0:	402e8c80 	call	402e8c8 <alt_get_errno>
 402e9f4:	1007883a 	mov	r3,r2
 402e9f8:	00801444 	movi	r2,81
 402e9fc:	18800015 	stw	r2,0(r3)
  }
  return -1;
 402ea00:	00bfffc4 	movi	r2,-1
}
 402ea04:	e037883a 	mov	sp,fp
 402ea08:	dfc00117 	ldw	ra,4(sp)
 402ea0c:	df000017 	ldw	fp,0(sp)
 402ea10:	dec00204 	addi	sp,sp,8
 402ea14:	f800283a 	ret

0402ea18 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
 402ea18:	defffd04 	addi	sp,sp,-12
 402ea1c:	dfc00215 	stw	ra,8(sp)
 402ea20:	df000115 	stw	fp,4(sp)
 402ea24:	df000104 	addi	fp,sp,4
 402ea28:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
 402ea2c:	014100f4 	movhi	r5,1027
 402ea30:	2949e104 	addi	r5,r5,10116
 402ea34:	e13fff17 	ldw	r4,-4(fp)
 402ea38:	402f9500 	call	402f950 <alt_dev_llist_insert>
}
 402ea3c:	e037883a 	mov	sp,fp
 402ea40:	dfc00117 	ldw	ra,4(sp)
 402ea44:	df000017 	ldw	fp,0(sp)
 402ea48:	dec00204 	addi	sp,sp,8
 402ea4c:	f800283a 	ret

0402ea50 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
 402ea50:	defffd04 	addi	sp,sp,-12
 402ea54:	dfc00215 	stw	ra,8(sp)
 402ea58:	df000115 	stw	fp,4(sp)
 402ea5c:	df000104 	addi	fp,sp,4
 402ea60:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
 402ea64:	40301a80 	call	40301a8 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
 402ea68:	00800044 	movi	r2,1
 402ea6c:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
 402ea70:	0001883a 	nop
 402ea74:	e037883a 	mov	sp,fp
 402ea78:	dfc00117 	ldw	ra,4(sp)
 402ea7c:	df000017 	ldw	fp,0(sp)
 402ea80:	dec00204 	addi	sp,sp,8
 402ea84:	f800283a 	ret

0402ea88 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
 402ea88:	defffe04 	addi	sp,sp,-8
 402ea8c:	dfc00115 	stw	ra,4(sp)
 402ea90:	df000015 	stw	fp,0(sp)
 402ea94:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER, timer);
 402ea98:	01c0fa04 	movi	r7,1000
 402ea9c:	01800084 	movi	r6,2
 402eaa0:	000b883a 	mov	r5,zero
 402eaa4:	01010134 	movhi	r4,1028
 402eaa8:	21040004 	addi	r4,r4,4096
 402eaac:	402f5dc0 	call	402f5dc <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
 402eab0:	01800044 	movi	r6,1
 402eab4:	000b883a 	mov	r5,zero
 402eab8:	010100f4 	movhi	r4,1027
 402eabc:	2105cb04 	addi	r4,r4,5932
 402eac0:	402ec500 	call	402ec50 <altera_avalon_jtag_uart_init>
 402eac4:	010100f4 	movhi	r4,1027
 402eac8:	2105c104 	addi	r4,r4,5892
 402eacc:	402ea180 	call	402ea18 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS, sysid_qsys);
 402ead0:	0001883a 	nop
}
 402ead4:	0001883a 	nop
 402ead8:	e037883a 	mov	sp,fp
 402eadc:	dfc00117 	ldw	ra,4(sp)
 402eae0:	df000017 	ldw	fp,0(sp)
 402eae4:	dec00204 	addi	sp,sp,8
 402eae8:	f800283a 	ret

0402eaec <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
 402eaec:	defffa04 	addi	sp,sp,-24
 402eaf0:	dfc00515 	stw	ra,20(sp)
 402eaf4:	df000415 	stw	fp,16(sp)
 402eaf8:	df000404 	addi	fp,sp,16
 402eafc:	e13ffd15 	stw	r4,-12(fp)
 402eb00:	e17ffe15 	stw	r5,-8(fp)
 402eb04:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 402eb08:	e0bffd17 	ldw	r2,-12(fp)
 402eb0c:	10800017 	ldw	r2,0(r2)
 402eb10:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
 402eb14:	e0bffc17 	ldw	r2,-16(fp)
 402eb18:	10c00a04 	addi	r3,r2,40
 402eb1c:	e0bffd17 	ldw	r2,-12(fp)
 402eb20:	10800217 	ldw	r2,8(r2)
 402eb24:	100f883a 	mov	r7,r2
 402eb28:	e1bfff17 	ldw	r6,-4(fp)
 402eb2c:	e17ffe17 	ldw	r5,-8(fp)
 402eb30:	1809883a 	mov	r4,r3
 402eb34:	402f1240 	call	402f124 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
 402eb38:	e037883a 	mov	sp,fp
 402eb3c:	dfc00117 	ldw	ra,4(sp)
 402eb40:	df000017 	ldw	fp,0(sp)
 402eb44:	dec00204 	addi	sp,sp,8
 402eb48:	f800283a 	ret

0402eb4c <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
 402eb4c:	defffa04 	addi	sp,sp,-24
 402eb50:	dfc00515 	stw	ra,20(sp)
 402eb54:	df000415 	stw	fp,16(sp)
 402eb58:	df000404 	addi	fp,sp,16
 402eb5c:	e13ffd15 	stw	r4,-12(fp)
 402eb60:	e17ffe15 	stw	r5,-8(fp)
 402eb64:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 402eb68:	e0bffd17 	ldw	r2,-12(fp)
 402eb6c:	10800017 	ldw	r2,0(r2)
 402eb70:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
 402eb74:	e0bffc17 	ldw	r2,-16(fp)
 402eb78:	10c00a04 	addi	r3,r2,40
 402eb7c:	e0bffd17 	ldw	r2,-12(fp)
 402eb80:	10800217 	ldw	r2,8(r2)
 402eb84:	100f883a 	mov	r7,r2
 402eb88:	e1bfff17 	ldw	r6,-4(fp)
 402eb8c:	e17ffe17 	ldw	r5,-8(fp)
 402eb90:	1809883a 	mov	r4,r3
 402eb94:	402f3400 	call	402f340 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
 402eb98:	e037883a 	mov	sp,fp
 402eb9c:	dfc00117 	ldw	ra,4(sp)
 402eba0:	df000017 	ldw	fp,0(sp)
 402eba4:	dec00204 	addi	sp,sp,8
 402eba8:	f800283a 	ret

0402ebac <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
 402ebac:	defffc04 	addi	sp,sp,-16
 402ebb0:	dfc00315 	stw	ra,12(sp)
 402ebb4:	df000215 	stw	fp,8(sp)
 402ebb8:	df000204 	addi	fp,sp,8
 402ebbc:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 402ebc0:	e0bfff17 	ldw	r2,-4(fp)
 402ebc4:	10800017 	ldw	r2,0(r2)
 402ebc8:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
 402ebcc:	e0bffe17 	ldw	r2,-8(fp)
 402ebd0:	10c00a04 	addi	r3,r2,40
 402ebd4:	e0bfff17 	ldw	r2,-4(fp)
 402ebd8:	10800217 	ldw	r2,8(r2)
 402ebdc:	100b883a 	mov	r5,r2
 402ebe0:	1809883a 	mov	r4,r3
 402ebe4:	402efcc0 	call	402efcc <altera_avalon_jtag_uart_close>
}
 402ebe8:	e037883a 	mov	sp,fp
 402ebec:	dfc00117 	ldw	ra,4(sp)
 402ebf0:	df000017 	ldw	fp,0(sp)
 402ebf4:	dec00204 	addi	sp,sp,8
 402ebf8:	f800283a 	ret

0402ebfc <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
 402ebfc:	defffa04 	addi	sp,sp,-24
 402ec00:	dfc00515 	stw	ra,20(sp)
 402ec04:	df000415 	stw	fp,16(sp)
 402ec08:	df000404 	addi	fp,sp,16
 402ec0c:	e13ffd15 	stw	r4,-12(fp)
 402ec10:	e17ffe15 	stw	r5,-8(fp)
 402ec14:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
 402ec18:	e0bffd17 	ldw	r2,-12(fp)
 402ec1c:	10800017 	ldw	r2,0(r2)
 402ec20:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
 402ec24:	e0bffc17 	ldw	r2,-16(fp)
 402ec28:	10800a04 	addi	r2,r2,40
 402ec2c:	e1bfff17 	ldw	r6,-4(fp)
 402ec30:	e17ffe17 	ldw	r5,-8(fp)
 402ec34:	1009883a 	mov	r4,r2
 402ec38:	402f0340 	call	402f034 <altera_avalon_jtag_uart_ioctl>
}
 402ec3c:	e037883a 	mov	sp,fp
 402ec40:	dfc00117 	ldw	ra,4(sp)
 402ec44:	df000017 	ldw	fp,0(sp)
 402ec48:	dec00204 	addi	sp,sp,8
 402ec4c:	f800283a 	ret

0402ec50 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
 402ec50:	defffa04 	addi	sp,sp,-24
 402ec54:	dfc00515 	stw	ra,20(sp)
 402ec58:	df000415 	stw	fp,16(sp)
 402ec5c:	df000404 	addi	fp,sp,16
 402ec60:	e13ffd15 	stw	r4,-12(fp)
 402ec64:	e17ffe15 	stw	r5,-8(fp)
 402ec68:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 402ec6c:	e0bffd17 	ldw	r2,-12(fp)
 402ec70:	00c00044 	movi	r3,1
 402ec74:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
 402ec78:	e0bffd17 	ldw	r2,-12(fp)
 402ec7c:	10800017 	ldw	r2,0(r2)
 402ec80:	10800104 	addi	r2,r2,4
 402ec84:	1007883a 	mov	r3,r2
 402ec88:	e0bffd17 	ldw	r2,-12(fp)
 402ec8c:	10800817 	ldw	r2,32(r2)
 402ec90:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
 402ec94:	e0bffe17 	ldw	r2,-8(fp)
 402ec98:	e0ffff17 	ldw	r3,-4(fp)
 402ec9c:	d8000015 	stw	zero,0(sp)
 402eca0:	e1fffd17 	ldw	r7,-12(fp)
 402eca4:	018100f4 	movhi	r6,1027
 402eca8:	31bb4604 	addi	r6,r6,-4840
 402ecac:	180b883a 	mov	r5,r3
 402ecb0:	1009883a 	mov	r4,r2
 402ecb4:	402fad40 	call	402fad4 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
 402ecb8:	e0bffd17 	ldw	r2,-12(fp)
 402ecbc:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
 402ecc0:	e0bffd17 	ldw	r2,-12(fp)
 402ecc4:	10c00204 	addi	r3,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 402ecc8:	008100f4 	movhi	r2,1027
 402eccc:	1090ae04 	addi	r2,r2,17080
 402ecd0:	10800017 	ldw	r2,0(r2)
 402ecd4:	e1fffd17 	ldw	r7,-12(fp)
 402ecd8:	018100f4 	movhi	r6,1027
 402ecdc:	31bbc904 	addi	r6,r6,-4316
 402ece0:	100b883a 	mov	r5,r2
 402ece4:	1809883a 	mov	r4,r3
 402ece8:	402f6680 	call	402f668 <alt_alarm_start>
 402ecec:	1000040e 	bge	r2,zero,402ed00 <altera_avalon_jtag_uart_init+0xb0>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
 402ecf0:	e0fffd17 	ldw	r3,-12(fp)
 402ecf4:	00a00034 	movhi	r2,32768
 402ecf8:	10bfffc4 	addi	r2,r2,-1
 402ecfc:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
 402ed00:	0001883a 	nop
 402ed04:	e037883a 	mov	sp,fp
 402ed08:	dfc00117 	ldw	ra,4(sp)
 402ed0c:	df000017 	ldw	fp,0(sp)
 402ed10:	dec00204 	addi	sp,sp,8
 402ed14:	f800283a 	ret

0402ed18 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
 402ed18:	defff804 	addi	sp,sp,-32
 402ed1c:	df000715 	stw	fp,28(sp)
 402ed20:	df000704 	addi	fp,sp,28
 402ed24:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
 402ed28:	e0bfff17 	ldw	r2,-4(fp)
 402ed2c:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
 402ed30:	e0bffb17 	ldw	r2,-20(fp)
 402ed34:	10800017 	ldw	r2,0(r2)
 402ed38:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 402ed3c:	e0bffc17 	ldw	r2,-16(fp)
 402ed40:	10800104 	addi	r2,r2,4
 402ed44:	10800037 	ldwio	r2,0(r2)
 402ed48:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
 402ed4c:	e0bffd17 	ldw	r2,-12(fp)
 402ed50:	1080c00c 	andi	r2,r2,768
 402ed54:	10006d26 	beq	r2,zero,402ef0c <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
 402ed58:	e0bffd17 	ldw	r2,-12(fp)
 402ed5c:	1080400c 	andi	r2,r2,256
 402ed60:	10003526 	beq	r2,zero,402ee38 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
 402ed64:	00800074 	movhi	r2,1
 402ed68:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 402ed6c:	e0bffb17 	ldw	r2,-20(fp)
 402ed70:	10800a17 	ldw	r2,40(r2)
 402ed74:	10800044 	addi	r2,r2,1
 402ed78:	1081ffcc 	andi	r2,r2,2047
 402ed7c:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
 402ed80:	e0bffb17 	ldw	r2,-20(fp)
 402ed84:	10c00b17 	ldw	r3,44(r2)
 402ed88:	e0bffe17 	ldw	r2,-8(fp)
 402ed8c:	18801526 	beq	r3,r2,402ede4 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
 402ed90:	e0bffc17 	ldw	r2,-16(fp)
 402ed94:	10800037 	ldwio	r2,0(r2)
 402ed98:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
 402ed9c:	e0bff917 	ldw	r2,-28(fp)
 402eda0:	10a0000c 	andi	r2,r2,32768
 402eda4:	10001126 	beq	r2,zero,402edec <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
 402eda8:	e0bffb17 	ldw	r2,-20(fp)
 402edac:	10800a17 	ldw	r2,40(r2)
 402edb0:	e0fff917 	ldw	r3,-28(fp)
 402edb4:	1809883a 	mov	r4,r3
 402edb8:	e0fffb17 	ldw	r3,-20(fp)
 402edbc:	1885883a 	add	r2,r3,r2
 402edc0:	10800e04 	addi	r2,r2,56
 402edc4:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 402edc8:	e0bffb17 	ldw	r2,-20(fp)
 402edcc:	10800a17 	ldw	r2,40(r2)
 402edd0:	10800044 	addi	r2,r2,1
 402edd4:	10c1ffcc 	andi	r3,r2,2047
 402edd8:	e0bffb17 	ldw	r2,-20(fp)
 402eddc:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
 402ede0:	003fe206 	br	402ed6c <_gp+0xffff4608>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
 402ede4:	0001883a 	nop
 402ede8:	00000106 	br	402edf0 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
 402edec:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
 402edf0:	e0bff917 	ldw	r2,-28(fp)
 402edf4:	10bfffec 	andhi	r2,r2,65535
 402edf8:	10000f26 	beq	r2,zero,402ee38 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 402edfc:	e0bffb17 	ldw	r2,-20(fp)
 402ee00:	10c00817 	ldw	r3,32(r2)
 402ee04:	00bfff84 	movi	r2,-2
 402ee08:	1886703a 	and	r3,r3,r2
 402ee0c:	e0bffb17 	ldw	r2,-20(fp)
 402ee10:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
 402ee14:	e0bffc17 	ldw	r2,-16(fp)
 402ee18:	10800104 	addi	r2,r2,4
 402ee1c:	1007883a 	mov	r3,r2
 402ee20:	e0bffb17 	ldw	r2,-20(fp)
 402ee24:	10800817 	ldw	r2,32(r2)
 402ee28:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 402ee2c:	e0bffc17 	ldw	r2,-16(fp)
 402ee30:	10800104 	addi	r2,r2,4
 402ee34:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
 402ee38:	e0bffd17 	ldw	r2,-12(fp)
 402ee3c:	1080800c 	andi	r2,r2,512
 402ee40:	103fbe26 	beq	r2,zero,402ed3c <_gp+0xffff45d8>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
 402ee44:	e0bffd17 	ldw	r2,-12(fp)
 402ee48:	1004d43a 	srli	r2,r2,16
 402ee4c:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
 402ee50:	00001406 	br	402eea4 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
 402ee54:	e0bffc17 	ldw	r2,-16(fp)
 402ee58:	e0fffb17 	ldw	r3,-20(fp)
 402ee5c:	18c00d17 	ldw	r3,52(r3)
 402ee60:	e13ffb17 	ldw	r4,-20(fp)
 402ee64:	20c7883a 	add	r3,r4,r3
 402ee68:	18c20e04 	addi	r3,r3,2104
 402ee6c:	18c00003 	ldbu	r3,0(r3)
 402ee70:	18c03fcc 	andi	r3,r3,255
 402ee74:	18c0201c 	xori	r3,r3,128
 402ee78:	18ffe004 	addi	r3,r3,-128
 402ee7c:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 402ee80:	e0bffb17 	ldw	r2,-20(fp)
 402ee84:	10800d17 	ldw	r2,52(r2)
 402ee88:	10800044 	addi	r2,r2,1
 402ee8c:	10c1ffcc 	andi	r3,r2,2047
 402ee90:	e0bffb17 	ldw	r2,-20(fp)
 402ee94:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
 402ee98:	e0bffa17 	ldw	r2,-24(fp)
 402ee9c:	10bfffc4 	addi	r2,r2,-1
 402eea0:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
 402eea4:	e0bffa17 	ldw	r2,-24(fp)
 402eea8:	10000526 	beq	r2,zero,402eec0 <altera_avalon_jtag_uart_irq+0x1a8>
 402eeac:	e0bffb17 	ldw	r2,-20(fp)
 402eeb0:	10c00d17 	ldw	r3,52(r2)
 402eeb4:	e0bffb17 	ldw	r2,-20(fp)
 402eeb8:	10800c17 	ldw	r2,48(r2)
 402eebc:	18bfe51e 	bne	r3,r2,402ee54 <_gp+0xffff46f0>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
 402eec0:	e0bffa17 	ldw	r2,-24(fp)
 402eec4:	103f9d26 	beq	r2,zero,402ed3c <_gp+0xffff45d8>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 402eec8:	e0bffb17 	ldw	r2,-20(fp)
 402eecc:	10c00817 	ldw	r3,32(r2)
 402eed0:	00bfff44 	movi	r2,-3
 402eed4:	1886703a 	and	r3,r3,r2
 402eed8:	e0bffb17 	ldw	r2,-20(fp)
 402eedc:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 402eee0:	e0bffb17 	ldw	r2,-20(fp)
 402eee4:	10800017 	ldw	r2,0(r2)
 402eee8:	10800104 	addi	r2,r2,4
 402eeec:	1007883a 	mov	r3,r2
 402eef0:	e0bffb17 	ldw	r2,-20(fp)
 402eef4:	10800817 	ldw	r2,32(r2)
 402eef8:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 402eefc:	e0bffc17 	ldw	r2,-16(fp)
 402ef00:	10800104 	addi	r2,r2,4
 402ef04:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
 402ef08:	003f8c06 	br	402ed3c <_gp+0xffff45d8>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
 402ef0c:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
 402ef10:	0001883a 	nop
 402ef14:	e037883a 	mov	sp,fp
 402ef18:	df000017 	ldw	fp,0(sp)
 402ef1c:	dec00104 	addi	sp,sp,4
 402ef20:	f800283a 	ret

0402ef24 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
 402ef24:	defff804 	addi	sp,sp,-32
 402ef28:	df000715 	stw	fp,28(sp)
 402ef2c:	df000704 	addi	fp,sp,28
 402ef30:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
 402ef34:	e0bffb17 	ldw	r2,-20(fp)
 402ef38:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
 402ef3c:	e0bff917 	ldw	r2,-28(fp)
 402ef40:	10800017 	ldw	r2,0(r2)
 402ef44:	10800104 	addi	r2,r2,4
 402ef48:	10800037 	ldwio	r2,0(r2)
 402ef4c:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
 402ef50:	e0bffa17 	ldw	r2,-24(fp)
 402ef54:	1081000c 	andi	r2,r2,1024
 402ef58:	10000b26 	beq	r2,zero,402ef88 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
 402ef5c:	e0bff917 	ldw	r2,-28(fp)
 402ef60:	10800017 	ldw	r2,0(r2)
 402ef64:	10800104 	addi	r2,r2,4
 402ef68:	1007883a 	mov	r3,r2
 402ef6c:	e0bff917 	ldw	r2,-28(fp)
 402ef70:	10800817 	ldw	r2,32(r2)
 402ef74:	10810014 	ori	r2,r2,1024
 402ef78:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
 402ef7c:	e0bff917 	ldw	r2,-28(fp)
 402ef80:	10000915 	stw	zero,36(r2)
 402ef84:	00000a06 	br	402efb0 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
 402ef88:	e0bff917 	ldw	r2,-28(fp)
 402ef8c:	10c00917 	ldw	r3,36(r2)
 402ef90:	00a00034 	movhi	r2,32768
 402ef94:	10bfff04 	addi	r2,r2,-4
 402ef98:	10c00536 	bltu	r2,r3,402efb0 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
 402ef9c:	e0bff917 	ldw	r2,-28(fp)
 402efa0:	10800917 	ldw	r2,36(r2)
 402efa4:	10c00044 	addi	r3,r2,1
 402efa8:	e0bff917 	ldw	r2,-28(fp)
 402efac:	10c00915 	stw	r3,36(r2)
 402efb0:	008100f4 	movhi	r2,1027
 402efb4:	1090ae04 	addi	r2,r2,17080
 402efb8:	10800017 	ldw	r2,0(r2)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
 402efbc:	e037883a 	mov	sp,fp
 402efc0:	df000017 	ldw	fp,0(sp)
 402efc4:	dec00104 	addi	sp,sp,4
 402efc8:	f800283a 	ret

0402efcc <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
 402efcc:	defffd04 	addi	sp,sp,-12
 402efd0:	df000215 	stw	fp,8(sp)
 402efd4:	df000204 	addi	fp,sp,8
 402efd8:	e13ffe15 	stw	r4,-8(fp)
 402efdc:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 402efe0:	00000506 	br	402eff8 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
 402efe4:	e0bfff17 	ldw	r2,-4(fp)
 402efe8:	1090000c 	andi	r2,r2,16384
 402efec:	10000226 	beq	r2,zero,402eff8 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
 402eff0:	00bffd44 	movi	r2,-11
 402eff4:	00000b06 	br	402f024 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 402eff8:	e0bffe17 	ldw	r2,-8(fp)
 402effc:	10c00d17 	ldw	r3,52(r2)
 402f000:	e0bffe17 	ldw	r2,-8(fp)
 402f004:	10800c17 	ldw	r2,48(r2)
 402f008:	18800526 	beq	r3,r2,402f020 <altera_avalon_jtag_uart_close+0x54>
 402f00c:	e0bffe17 	ldw	r2,-8(fp)
 402f010:	10c00917 	ldw	r3,36(r2)
 402f014:	e0bffe17 	ldw	r2,-8(fp)
 402f018:	10800117 	ldw	r2,4(r2)
 402f01c:	18bff136 	bltu	r3,r2,402efe4 <_gp+0xffff4880>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
 402f020:	0005883a 	mov	r2,zero
}
 402f024:	e037883a 	mov	sp,fp
 402f028:	df000017 	ldw	fp,0(sp)
 402f02c:	dec00104 	addi	sp,sp,4
 402f030:	f800283a 	ret

0402f034 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
 402f034:	defffa04 	addi	sp,sp,-24
 402f038:	df000515 	stw	fp,20(sp)
 402f03c:	df000504 	addi	fp,sp,20
 402f040:	e13ffd15 	stw	r4,-12(fp)
 402f044:	e17ffe15 	stw	r5,-8(fp)
 402f048:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
 402f04c:	00bff9c4 	movi	r2,-25
 402f050:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
 402f054:	e0bffe17 	ldw	r2,-8(fp)
 402f058:	10da8060 	cmpeqi	r3,r2,27137
 402f05c:	1800031e 	bne	r3,zero,402f06c <altera_avalon_jtag_uart_ioctl+0x38>
 402f060:	109a80a0 	cmpeqi	r2,r2,27138
 402f064:	1000181e 	bne	r2,zero,402f0c8 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
 402f068:	00002906 	br	402f110 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
 402f06c:	e0bffd17 	ldw	r2,-12(fp)
 402f070:	10c00117 	ldw	r3,4(r2)
 402f074:	00a00034 	movhi	r2,32768
 402f078:	10bfffc4 	addi	r2,r2,-1
 402f07c:	18802126 	beq	r3,r2,402f104 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
 402f080:	e0bfff17 	ldw	r2,-4(fp)
 402f084:	10800017 	ldw	r2,0(r2)
 402f088:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
 402f08c:	e0bffc17 	ldw	r2,-16(fp)
 402f090:	10800090 	cmplti	r2,r2,2
 402f094:	1000061e 	bne	r2,zero,402f0b0 <altera_avalon_jtag_uart_ioctl+0x7c>
 402f098:	e0fffc17 	ldw	r3,-16(fp)
 402f09c:	00a00034 	movhi	r2,32768
 402f0a0:	10bfffc4 	addi	r2,r2,-1
 402f0a4:	18800226 	beq	r3,r2,402f0b0 <altera_avalon_jtag_uart_ioctl+0x7c>
 402f0a8:	e0bffc17 	ldw	r2,-16(fp)
 402f0ac:	00000206 	br	402f0b8 <altera_avalon_jtag_uart_ioctl+0x84>
 402f0b0:	00a00034 	movhi	r2,32768
 402f0b4:	10bfff84 	addi	r2,r2,-2
 402f0b8:	e0fffd17 	ldw	r3,-12(fp)
 402f0bc:	18800115 	stw	r2,4(r3)
      rc = 0;
 402f0c0:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 402f0c4:	00000f06 	br	402f104 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
 402f0c8:	e0bffd17 	ldw	r2,-12(fp)
 402f0cc:	10c00117 	ldw	r3,4(r2)
 402f0d0:	00a00034 	movhi	r2,32768
 402f0d4:	10bfffc4 	addi	r2,r2,-1
 402f0d8:	18800c26 	beq	r3,r2,402f10c <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
 402f0dc:	e0bffd17 	ldw	r2,-12(fp)
 402f0e0:	10c00917 	ldw	r3,36(r2)
 402f0e4:	e0bffd17 	ldw	r2,-12(fp)
 402f0e8:	10800117 	ldw	r2,4(r2)
 402f0ec:	1885803a 	cmpltu	r2,r3,r2
 402f0f0:	10c03fcc 	andi	r3,r2,255
 402f0f4:	e0bfff17 	ldw	r2,-4(fp)
 402f0f8:	10c00015 	stw	r3,0(r2)
      rc = 0;
 402f0fc:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 402f100:	00000206 	br	402f10c <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
 402f104:	0001883a 	nop
 402f108:	00000106 	br	402f110 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
 402f10c:	0001883a 	nop

  default:
    break;
  }

  return rc;
 402f110:	e0bffb17 	ldw	r2,-20(fp)
}
 402f114:	e037883a 	mov	sp,fp
 402f118:	df000017 	ldw	fp,0(sp)
 402f11c:	dec00104 	addi	sp,sp,4
 402f120:	f800283a 	ret

0402f124 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
 402f124:	defff304 	addi	sp,sp,-52
 402f128:	dfc00c15 	stw	ra,48(sp)
 402f12c:	df000b15 	stw	fp,44(sp)
 402f130:	df000b04 	addi	fp,sp,44
 402f134:	e13ffc15 	stw	r4,-16(fp)
 402f138:	e17ffd15 	stw	r5,-12(fp)
 402f13c:	e1bffe15 	stw	r6,-8(fp)
 402f140:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
 402f144:	e0bffd17 	ldw	r2,-12(fp)
 402f148:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 402f14c:	00004706 	br	402f26c <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
 402f150:	e0bffc17 	ldw	r2,-16(fp)
 402f154:	10800a17 	ldw	r2,40(r2)
 402f158:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
 402f15c:	e0bffc17 	ldw	r2,-16(fp)
 402f160:	10800b17 	ldw	r2,44(r2)
 402f164:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
 402f168:	e0fff717 	ldw	r3,-36(fp)
 402f16c:	e0bff817 	ldw	r2,-32(fp)
 402f170:	18800536 	bltu	r3,r2,402f188 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
 402f174:	e0fff717 	ldw	r3,-36(fp)
 402f178:	e0bff817 	ldw	r2,-32(fp)
 402f17c:	1885c83a 	sub	r2,r3,r2
 402f180:	e0bff615 	stw	r2,-40(fp)
 402f184:	00000406 	br	402f198 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
 402f188:	00c20004 	movi	r3,2048
 402f18c:	e0bff817 	ldw	r2,-32(fp)
 402f190:	1885c83a 	sub	r2,r3,r2
 402f194:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 402f198:	e0bff617 	ldw	r2,-40(fp)
 402f19c:	10001e26 	beq	r2,zero,402f218 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
 402f1a0:	e0fffe17 	ldw	r3,-8(fp)
 402f1a4:	e0bff617 	ldw	r2,-40(fp)
 402f1a8:	1880022e 	bgeu	r3,r2,402f1b4 <altera_avalon_jtag_uart_read+0x90>
        n = space;
 402f1ac:	e0bffe17 	ldw	r2,-8(fp)
 402f1b0:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
 402f1b4:	e0bffc17 	ldw	r2,-16(fp)
 402f1b8:	10c00e04 	addi	r3,r2,56
 402f1bc:	e0bff817 	ldw	r2,-32(fp)
 402f1c0:	1885883a 	add	r2,r3,r2
 402f1c4:	e1bff617 	ldw	r6,-40(fp)
 402f1c8:	100b883a 	mov	r5,r2
 402f1cc:	e13ff517 	ldw	r4,-44(fp)
 402f1d0:	4020da40 	call	4020da4 <memcpy>
      ptr   += n;
 402f1d4:	e0fff517 	ldw	r3,-44(fp)
 402f1d8:	e0bff617 	ldw	r2,-40(fp)
 402f1dc:	1885883a 	add	r2,r3,r2
 402f1e0:	e0bff515 	stw	r2,-44(fp)
      space -= n;
 402f1e4:	e0fffe17 	ldw	r3,-8(fp)
 402f1e8:	e0bff617 	ldw	r2,-40(fp)
 402f1ec:	1885c83a 	sub	r2,r3,r2
 402f1f0:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 402f1f4:	e0fff817 	ldw	r3,-32(fp)
 402f1f8:	e0bff617 	ldw	r2,-40(fp)
 402f1fc:	1885883a 	add	r2,r3,r2
 402f200:	10c1ffcc 	andi	r3,r2,2047
 402f204:	e0bffc17 	ldw	r2,-16(fp)
 402f208:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
 402f20c:	e0bffe17 	ldw	r2,-8(fp)
 402f210:	00bfcf16 	blt	zero,r2,402f150 <_gp+0xffff49ec>
 402f214:	00000106 	br	402f21c <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
 402f218:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
 402f21c:	e0fff517 	ldw	r3,-44(fp)
 402f220:	e0bffd17 	ldw	r2,-12(fp)
 402f224:	1880141e 	bne	r3,r2,402f278 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
 402f228:	e0bfff17 	ldw	r2,-4(fp)
 402f22c:	1090000c 	andi	r2,r2,16384
 402f230:	1000131e 	bne	r2,zero,402f280 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
 402f234:	0001883a 	nop
 402f238:	e0bffc17 	ldw	r2,-16(fp)
 402f23c:	10c00a17 	ldw	r3,40(r2)
 402f240:	e0bff717 	ldw	r2,-36(fp)
 402f244:	1880051e 	bne	r3,r2,402f25c <altera_avalon_jtag_uart_read+0x138>
 402f248:	e0bffc17 	ldw	r2,-16(fp)
 402f24c:	10c00917 	ldw	r3,36(r2)
 402f250:	e0bffc17 	ldw	r2,-16(fp)
 402f254:	10800117 	ldw	r2,4(r2)
 402f258:	18bff736 	bltu	r3,r2,402f238 <_gp+0xffff4ad4>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
 402f25c:	e0bffc17 	ldw	r2,-16(fp)
 402f260:	10c00a17 	ldw	r3,40(r2)
 402f264:	e0bff717 	ldw	r2,-36(fp)
 402f268:	18800726 	beq	r3,r2,402f288 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 402f26c:	e0bffe17 	ldw	r2,-8(fp)
 402f270:	00bfb716 	blt	zero,r2,402f150 <_gp+0xffff49ec>
 402f274:	00000506 	br	402f28c <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
 402f278:	0001883a 	nop
 402f27c:	00000306 	br	402f28c <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
 402f280:	0001883a 	nop
 402f284:	00000106 	br	402f28c <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
 402f288:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
 402f28c:	e0fff517 	ldw	r3,-44(fp)
 402f290:	e0bffd17 	ldw	r2,-12(fp)
 402f294:	18801826 	beq	r3,r2,402f2f8 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 402f298:	0005303a 	rdctl	r2,status
 402f29c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 402f2a0:	e0fffb17 	ldw	r3,-20(fp)
 402f2a4:	00bfff84 	movi	r2,-2
 402f2a8:	1884703a 	and	r2,r3,r2
 402f2ac:	1001703a 	wrctl	status,r2
  
  return context;
 402f2b0:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
 402f2b4:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 402f2b8:	e0bffc17 	ldw	r2,-16(fp)
 402f2bc:	10800817 	ldw	r2,32(r2)
 402f2c0:	10c00054 	ori	r3,r2,1
 402f2c4:	e0bffc17 	ldw	r2,-16(fp)
 402f2c8:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 402f2cc:	e0bffc17 	ldw	r2,-16(fp)
 402f2d0:	10800017 	ldw	r2,0(r2)
 402f2d4:	10800104 	addi	r2,r2,4
 402f2d8:	1007883a 	mov	r3,r2
 402f2dc:	e0bffc17 	ldw	r2,-16(fp)
 402f2e0:	10800817 	ldw	r2,32(r2)
 402f2e4:	18800035 	stwio	r2,0(r3)
 402f2e8:	e0bffa17 	ldw	r2,-24(fp)
 402f2ec:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 402f2f0:	e0bff917 	ldw	r2,-28(fp)
 402f2f4:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
 402f2f8:	e0fff517 	ldw	r3,-44(fp)
 402f2fc:	e0bffd17 	ldw	r2,-12(fp)
 402f300:	18800426 	beq	r3,r2,402f314 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
 402f304:	e0fff517 	ldw	r3,-44(fp)
 402f308:	e0bffd17 	ldw	r2,-12(fp)
 402f30c:	1885c83a 	sub	r2,r3,r2
 402f310:	00000606 	br	402f32c <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
 402f314:	e0bfff17 	ldw	r2,-4(fp)
 402f318:	1090000c 	andi	r2,r2,16384
 402f31c:	10000226 	beq	r2,zero,402f328 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
 402f320:	00bffd44 	movi	r2,-11
 402f324:	00000106 	br	402f32c <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
 402f328:	00bffec4 	movi	r2,-5
}
 402f32c:	e037883a 	mov	sp,fp
 402f330:	dfc00117 	ldw	ra,4(sp)
 402f334:	df000017 	ldw	fp,0(sp)
 402f338:	dec00204 	addi	sp,sp,8
 402f33c:	f800283a 	ret

0402f340 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
 402f340:	defff304 	addi	sp,sp,-52
 402f344:	dfc00c15 	stw	ra,48(sp)
 402f348:	df000b15 	stw	fp,44(sp)
 402f34c:	df000b04 	addi	fp,sp,44
 402f350:	e13ffc15 	stw	r4,-16(fp)
 402f354:	e17ffd15 	stw	r5,-12(fp)
 402f358:	e1bffe15 	stw	r6,-8(fp)
 402f35c:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
 402f360:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
 402f364:	e0bffd17 	ldw	r2,-12(fp)
 402f368:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 402f36c:	00003706 	br	402f44c <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
 402f370:	e0bffc17 	ldw	r2,-16(fp)
 402f374:	10800c17 	ldw	r2,48(r2)
 402f378:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
 402f37c:	e0bffc17 	ldw	r2,-16(fp)
 402f380:	10800d17 	ldw	r2,52(r2)
 402f384:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
 402f388:	e0fff917 	ldw	r3,-28(fp)
 402f38c:	e0bff517 	ldw	r2,-44(fp)
 402f390:	1880062e 	bgeu	r3,r2,402f3ac <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
 402f394:	e0fff517 	ldw	r3,-44(fp)
 402f398:	e0bff917 	ldw	r2,-28(fp)
 402f39c:	1885c83a 	sub	r2,r3,r2
 402f3a0:	10bfffc4 	addi	r2,r2,-1
 402f3a4:	e0bff615 	stw	r2,-40(fp)
 402f3a8:	00000b06 	br	402f3d8 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
 402f3ac:	e0bff517 	ldw	r2,-44(fp)
 402f3b0:	10000526 	beq	r2,zero,402f3c8 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
 402f3b4:	00c20004 	movi	r3,2048
 402f3b8:	e0bff917 	ldw	r2,-28(fp)
 402f3bc:	1885c83a 	sub	r2,r3,r2
 402f3c0:	e0bff615 	stw	r2,-40(fp)
 402f3c4:	00000406 	br	402f3d8 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
 402f3c8:	00c1ffc4 	movi	r3,2047
 402f3cc:	e0bff917 	ldw	r2,-28(fp)
 402f3d0:	1885c83a 	sub	r2,r3,r2
 402f3d4:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 402f3d8:	e0bff617 	ldw	r2,-40(fp)
 402f3dc:	10001e26 	beq	r2,zero,402f458 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
 402f3e0:	e0fffe17 	ldw	r3,-8(fp)
 402f3e4:	e0bff617 	ldw	r2,-40(fp)
 402f3e8:	1880022e 	bgeu	r3,r2,402f3f4 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
 402f3ec:	e0bffe17 	ldw	r2,-8(fp)
 402f3f0:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
 402f3f4:	e0bffc17 	ldw	r2,-16(fp)
 402f3f8:	10c20e04 	addi	r3,r2,2104
 402f3fc:	e0bff917 	ldw	r2,-28(fp)
 402f400:	1885883a 	add	r2,r3,r2
 402f404:	e1bff617 	ldw	r6,-40(fp)
 402f408:	e17ffd17 	ldw	r5,-12(fp)
 402f40c:	1009883a 	mov	r4,r2
 402f410:	4020da40 	call	4020da4 <memcpy>
      ptr   += n;
 402f414:	e0fffd17 	ldw	r3,-12(fp)
 402f418:	e0bff617 	ldw	r2,-40(fp)
 402f41c:	1885883a 	add	r2,r3,r2
 402f420:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
 402f424:	e0fffe17 	ldw	r3,-8(fp)
 402f428:	e0bff617 	ldw	r2,-40(fp)
 402f42c:	1885c83a 	sub	r2,r3,r2
 402f430:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 402f434:	e0fff917 	ldw	r3,-28(fp)
 402f438:	e0bff617 	ldw	r2,-40(fp)
 402f43c:	1885883a 	add	r2,r3,r2
 402f440:	10c1ffcc 	andi	r3,r2,2047
 402f444:	e0bffc17 	ldw	r2,-16(fp)
 402f448:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 402f44c:	e0bffe17 	ldw	r2,-8(fp)
 402f450:	00bfc716 	blt	zero,r2,402f370 <_gp+0xffff4c0c>
 402f454:	00000106 	br	402f45c <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
 402f458:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 402f45c:	0005303a 	rdctl	r2,status
 402f460:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 402f464:	e0fffb17 	ldw	r3,-20(fp)
 402f468:	00bfff84 	movi	r2,-2
 402f46c:	1884703a 	and	r2,r3,r2
 402f470:	1001703a 	wrctl	status,r2
  
  return context;
 402f474:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
 402f478:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 402f47c:	e0bffc17 	ldw	r2,-16(fp)
 402f480:	10800817 	ldw	r2,32(r2)
 402f484:	10c00094 	ori	r3,r2,2
 402f488:	e0bffc17 	ldw	r2,-16(fp)
 402f48c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 402f490:	e0bffc17 	ldw	r2,-16(fp)
 402f494:	10800017 	ldw	r2,0(r2)
 402f498:	10800104 	addi	r2,r2,4
 402f49c:	1007883a 	mov	r3,r2
 402f4a0:	e0bffc17 	ldw	r2,-16(fp)
 402f4a4:	10800817 	ldw	r2,32(r2)
 402f4a8:	18800035 	stwio	r2,0(r3)
 402f4ac:	e0bffa17 	ldw	r2,-24(fp)
 402f4b0:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 402f4b4:	e0bff817 	ldw	r2,-32(fp)
 402f4b8:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
 402f4bc:	e0bffe17 	ldw	r2,-8(fp)
 402f4c0:	0080100e 	bge	zero,r2,402f504 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
 402f4c4:	e0bfff17 	ldw	r2,-4(fp)
 402f4c8:	1090000c 	andi	r2,r2,16384
 402f4cc:	1000101e 	bne	r2,zero,402f510 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
 402f4d0:	0001883a 	nop
 402f4d4:	e0bffc17 	ldw	r2,-16(fp)
 402f4d8:	10c00d17 	ldw	r3,52(r2)
 402f4dc:	e0bff517 	ldw	r2,-44(fp)
 402f4e0:	1880051e 	bne	r3,r2,402f4f8 <altera_avalon_jtag_uart_write+0x1b8>
 402f4e4:	e0bffc17 	ldw	r2,-16(fp)
 402f4e8:	10c00917 	ldw	r3,36(r2)
 402f4ec:	e0bffc17 	ldw	r2,-16(fp)
 402f4f0:	10800117 	ldw	r2,4(r2)
 402f4f4:	18bff736 	bltu	r3,r2,402f4d4 <_gp+0xffff4d70>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
 402f4f8:	e0bffc17 	ldw	r2,-16(fp)
 402f4fc:	10800917 	ldw	r2,36(r2)
 402f500:	1000051e 	bne	r2,zero,402f518 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
 402f504:	e0bffe17 	ldw	r2,-8(fp)
 402f508:	00bfd016 	blt	zero,r2,402f44c <_gp+0xffff4ce8>
 402f50c:	00000306 	br	402f51c <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
 402f510:	0001883a 	nop
 402f514:	00000106 	br	402f51c <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
 402f518:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
 402f51c:	e0fffd17 	ldw	r3,-12(fp)
 402f520:	e0bff717 	ldw	r2,-36(fp)
 402f524:	18800426 	beq	r3,r2,402f538 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
 402f528:	e0fffd17 	ldw	r3,-12(fp)
 402f52c:	e0bff717 	ldw	r2,-36(fp)
 402f530:	1885c83a 	sub	r2,r3,r2
 402f534:	00000606 	br	402f550 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
 402f538:	e0bfff17 	ldw	r2,-4(fp)
 402f53c:	1090000c 	andi	r2,r2,16384
 402f540:	10000226 	beq	r2,zero,402f54c <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
 402f544:	00bffd44 	movi	r2,-11
 402f548:	00000106 	br	402f550 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
 402f54c:	00bffec4 	movi	r2,-5
}
 402f550:	e037883a 	mov	sp,fp
 402f554:	dfc00117 	ldw	ra,4(sp)
 402f558:	df000017 	ldw	fp,0(sp)
 402f55c:	dec00204 	addi	sp,sp,8
 402f560:	f800283a 	ret

0402f564 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
 402f564:	defffa04 	addi	sp,sp,-24
 402f568:	dfc00515 	stw	ra,20(sp)
 402f56c:	df000415 	stw	fp,16(sp)
 402f570:	df000404 	addi	fp,sp,16
 402f574:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
 402f578:	0007883a 	mov	r3,zero
 402f57c:	e0bfff17 	ldw	r2,-4(fp)
 402f580:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
 402f584:	e0bfff17 	ldw	r2,-4(fp)
 402f588:	10800104 	addi	r2,r2,4
 402f58c:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 402f590:	0005303a 	rdctl	r2,status
 402f594:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 402f598:	e0fffd17 	ldw	r3,-12(fp)
 402f59c:	00bfff84 	movi	r2,-2
 402f5a0:	1884703a 	and	r2,r3,r2
 402f5a4:	1001703a 	wrctl	status,r2
  
  return context;
 402f5a8:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
 402f5ac:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
 402f5b0:	402e7900 	call	402e790 <alt_tick>
 402f5b4:	e0bffc17 	ldw	r2,-16(fp)
 402f5b8:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 402f5bc:	e0bffe17 	ldw	r2,-8(fp)
 402f5c0:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
 402f5c4:	0001883a 	nop
 402f5c8:	e037883a 	mov	sp,fp
 402f5cc:	dfc00117 	ldw	ra,4(sp)
 402f5d0:	df000017 	ldw	fp,0(sp)
 402f5d4:	dec00204 	addi	sp,sp,8
 402f5d8:	f800283a 	ret

0402f5dc <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
 402f5dc:	defff804 	addi	sp,sp,-32
 402f5e0:	dfc00715 	stw	ra,28(sp)
 402f5e4:	df000615 	stw	fp,24(sp)
 402f5e8:	df000604 	addi	fp,sp,24
 402f5ec:	e13ffc15 	stw	r4,-16(fp)
 402f5f0:	e17ffd15 	stw	r5,-12(fp)
 402f5f4:	e1bffe15 	stw	r6,-8(fp)
 402f5f8:	e1ffff15 	stw	r7,-4(fp)
 402f5fc:	e0bfff17 	ldw	r2,-4(fp)
 402f600:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
 402f604:	008100f4 	movhi	r2,1027
 402f608:	1090ae04 	addi	r2,r2,17080
 402f60c:	10800017 	ldw	r2,0(r2)
 402f610:	1000041e 	bne	r2,zero,402f624 <alt_avalon_timer_sc_init+0x48>
  {
    _alt_tick_rate = nticks;
 402f614:	008100f4 	movhi	r2,1027
 402f618:	1090ae04 	addi	r2,r2,17080
 402f61c:	e0fffb17 	ldw	r3,-20(fp)
 402f620:	10c00015 	stw	r3,0(r2)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
 402f624:	e0bffc17 	ldw	r2,-16(fp)
 402f628:	10800104 	addi	r2,r2,4
 402f62c:	00c001c4 	movi	r3,7
 402f630:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
 402f634:	d8000015 	stw	zero,0(sp)
 402f638:	e1fffc17 	ldw	r7,-16(fp)
 402f63c:	018100f4 	movhi	r6,1027
 402f640:	31bd5904 	addi	r6,r6,-2716
 402f644:	e17ffe17 	ldw	r5,-8(fp)
 402f648:	e13ffd17 	ldw	r4,-12(fp)
 402f64c:	402fad40 	call	402fad4 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
 402f650:	0001883a 	nop
 402f654:	e037883a 	mov	sp,fp
 402f658:	dfc00117 	ldw	ra,4(sp)
 402f65c:	df000017 	ldw	fp,0(sp)
 402f660:	dec00204 	addi	sp,sp,8
 402f664:	f800283a 	ret

0402f668 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
 402f668:	defff504 	addi	sp,sp,-44
 402f66c:	df000a15 	stw	fp,40(sp)
 402f670:	df000a04 	addi	fp,sp,40
 402f674:	e13ffc15 	stw	r4,-16(fp)
 402f678:	e17ffd15 	stw	r5,-12(fp)
 402f67c:	e1bffe15 	stw	r6,-8(fp)
 402f680:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
 402f684:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 402f688:	008100f4 	movhi	r2,1027
 402f68c:	1090ae04 	addi	r2,r2,17080
 402f690:	10800017 	ldw	r2,0(r2)
  
  if (alt_ticks_per_second ())
 402f694:	10003f26 	beq	r2,zero,402f794 <alt_alarm_start+0x12c>
  {
    if (alarm)
 402f698:	e0bffc17 	ldw	r2,-16(fp)
 402f69c:	10003b26 	beq	r2,zero,402f78c <alt_alarm_start+0x124>
    {
      alarm->callback = callback;
 402f6a0:	e0bffc17 	ldw	r2,-16(fp)
 402f6a4:	e0fffe17 	ldw	r3,-8(fp)
 402f6a8:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
 402f6ac:	e0bffc17 	ldw	r2,-16(fp)
 402f6b0:	e0ffff17 	ldw	r3,-4(fp)
 402f6b4:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 402f6b8:	0005303a 	rdctl	r2,status
 402f6bc:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 402f6c0:	e0fff917 	ldw	r3,-28(fp)
 402f6c4:	00bfff84 	movi	r2,-2
 402f6c8:	1884703a 	and	r2,r3,r2
 402f6cc:	1001703a 	wrctl	status,r2
  
  return context;
 402f6d0:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
 402f6d4:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 402f6d8:	008100f4 	movhi	r2,1027
 402f6dc:	1090af04 	addi	r2,r2,17084
 402f6e0:	10800017 	ldw	r2,0(r2)
      
      current_nticks = alt_nticks();
 402f6e4:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
 402f6e8:	e0fffd17 	ldw	r3,-12(fp)
 402f6ec:	e0bff617 	ldw	r2,-40(fp)
 402f6f0:	1885883a 	add	r2,r3,r2
 402f6f4:	10c00044 	addi	r3,r2,1
 402f6f8:	e0bffc17 	ldw	r2,-16(fp)
 402f6fc:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
 402f700:	e0bffc17 	ldw	r2,-16(fp)
 402f704:	10c00217 	ldw	r3,8(r2)
 402f708:	e0bff617 	ldw	r2,-40(fp)
 402f70c:	1880042e 	bgeu	r3,r2,402f720 <alt_alarm_start+0xb8>
      {
        alarm->rollover = 1;
 402f710:	e0bffc17 	ldw	r2,-16(fp)
 402f714:	00c00044 	movi	r3,1
 402f718:	10c00405 	stb	r3,16(r2)
 402f71c:	00000206 	br	402f728 <alt_alarm_start+0xc0>
      }
      else
      {
        alarm->rollover = 0;
 402f720:	e0bffc17 	ldw	r2,-16(fp)
 402f724:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
 402f728:	e0fffc17 	ldw	r3,-16(fp)
 402f72c:	008100f4 	movhi	r2,1027
 402f730:	1089e604 	addi	r2,r2,10136
 402f734:	e0bffa15 	stw	r2,-24(fp)
 402f738:	e0fffb15 	stw	r3,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 402f73c:	e0bffb17 	ldw	r2,-20(fp)
 402f740:	e0fffa17 	ldw	r3,-24(fp)
 402f744:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 402f748:	e0bffa17 	ldw	r2,-24(fp)
 402f74c:	10c00017 	ldw	r3,0(r2)
 402f750:	e0bffb17 	ldw	r2,-20(fp)
 402f754:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 402f758:	e0bffa17 	ldw	r2,-24(fp)
 402f75c:	10800017 	ldw	r2,0(r2)
 402f760:	e0fffb17 	ldw	r3,-20(fp)
 402f764:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 402f768:	e0bffa17 	ldw	r2,-24(fp)
 402f76c:	e0fffb17 	ldw	r3,-20(fp)
 402f770:	10c00015 	stw	r3,0(r2)
 402f774:	e0bff817 	ldw	r2,-32(fp)
 402f778:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 402f77c:	e0bff717 	ldw	r2,-36(fp)
 402f780:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
 402f784:	0005883a 	mov	r2,zero
 402f788:	00000306 	br	402f798 <alt_alarm_start+0x130>
    }
    else
    {
      return -EINVAL;
 402f78c:	00bffa84 	movi	r2,-22
 402f790:	00000106 	br	402f798 <alt_alarm_start+0x130>
    }
  }
  else
  {
    return -ENOTSUP;
 402f794:	00bfde84 	movi	r2,-134
  }
}
 402f798:	e037883a 	mov	sp,fp
 402f79c:	df000017 	ldw	fp,0(sp)
 402f7a0:	dec00104 	addi	sp,sp,4
 402f7a4:	f800283a 	ret

0402f7a8 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
 402f7a8:	defffa04 	addi	sp,sp,-24
 402f7ac:	dfc00515 	stw	ra,20(sp)
 402f7b0:	df000415 	stw	fp,16(sp)
 402f7b4:	df000404 	addi	fp,sp,16
 402f7b8:	e13fff15 	stw	r4,-4(fp)
  int big_loops;
  alt_u32 cycles_per_loop;
  
  if (!strcmp(NIOS2_CPU_IMPLEMENTATION,"tiny"))
  {
    cycles_per_loop = 9;
 402f7bc:	00800244 	movi	r2,9
 402f7c0:	e0bffd15 	stw	r2,-12(fp)
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
 402f7c4:	014003f4 	movhi	r5,15
 402f7c8:	29509004 	addi	r5,r5,16960
 402f7cc:	e13ffd17 	ldw	r4,-12(fp)
 402f7d0:	4020d7c0 	call	4020d7c <__mulsi3>
 402f7d4:	100b883a 	mov	r5,r2
 402f7d8:	01017db4 	movhi	r4,1526
 402f7dc:	21384004 	addi	r4,r4,-7936
 402f7e0:	4020cc00 	call	4020cc0 <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
 402f7e4:	100b883a 	mov	r5,r2
 402f7e8:	01200034 	movhi	r4,32768
 402f7ec:	213fffc4 	addi	r4,r4,-1
 402f7f0:	4020cc00 	call	4020cc0 <__udivsi3>
 402f7f4:	100b883a 	mov	r5,r2
 402f7f8:	e13fff17 	ldw	r4,-4(fp)
 402f7fc:	4020cc00 	call	4020cc0 <__udivsi3>
 402f800:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
 402f804:	e0bffe17 	ldw	r2,-8(fp)
 402f808:	10002a26 	beq	r2,zero,402f8b4 <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
 402f80c:	e03ffc15 	stw	zero,-16(fp)
 402f810:	00001706 	br	402f870 <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
 402f814:	00a00034 	movhi	r2,32768
 402f818:	10bfffc4 	addi	r2,r2,-1
 402f81c:	10bfffc4 	addi	r2,r2,-1
 402f820:	103ffe1e 	bne	r2,zero,402f81c <_gp+0xffff50b8>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
 402f824:	014003f4 	movhi	r5,15
 402f828:	29509004 	addi	r5,r5,16960
 402f82c:	e13ffd17 	ldw	r4,-12(fp)
 402f830:	4020d7c0 	call	4020d7c <__mulsi3>
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
 402f834:	100b883a 	mov	r5,r2
 402f838:	01017db4 	movhi	r4,1526
 402f83c:	21384004 	addi	r4,r4,-7936
 402f840:	4020cc00 	call	4020cc0 <__udivsi3>
 402f844:	100b883a 	mov	r5,r2
 402f848:	01200034 	movhi	r4,32768
 402f84c:	213fffc4 	addi	r4,r4,-1
 402f850:	4020cc00 	call	4020cc0 <__udivsi3>
 402f854:	1007883a 	mov	r3,r2
 402f858:	e0bfff17 	ldw	r2,-4(fp)
 402f85c:	10c5c83a 	sub	r2,r2,r3
 402f860:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
 402f864:	e0bffc17 	ldw	r2,-16(fp)
 402f868:	10800044 	addi	r2,r2,1
 402f86c:	e0bffc15 	stw	r2,-16(fp)
 402f870:	e0fffc17 	ldw	r3,-16(fp)
 402f874:	e0bffe17 	ldw	r2,-8(fp)
 402f878:	18bfe616 	blt	r3,r2,402f814 <_gp+0xffff50b0>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
 402f87c:	014003f4 	movhi	r5,15
 402f880:	29509004 	addi	r5,r5,16960
 402f884:	e13ffd17 	ldw	r4,-12(fp)
 402f888:	4020d7c0 	call	4020d7c <__mulsi3>
 402f88c:	100b883a 	mov	r5,r2
 402f890:	01017db4 	movhi	r4,1526
 402f894:	21384004 	addi	r4,r4,-7936
 402f898:	4020cc00 	call	4020cc0 <__udivsi3>
 402f89c:	e17fff17 	ldw	r5,-4(fp)
 402f8a0:	1009883a 	mov	r4,r2
 402f8a4:	4020d7c0 	call	4020d7c <__mulsi3>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
 402f8a8:	10bfffc4 	addi	r2,r2,-1
 402f8ac:	103ffe1e 	bne	r2,zero,402f8a8 <_gp+0xffff5144>
 402f8b0:	00000d06 	br	402f8e8 <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
 402f8b4:	014003f4 	movhi	r5,15
 402f8b8:	29509004 	addi	r5,r5,16960
 402f8bc:	e13ffd17 	ldw	r4,-12(fp)
 402f8c0:	4020d7c0 	call	4020d7c <__mulsi3>
 402f8c4:	100b883a 	mov	r5,r2
 402f8c8:	01017db4 	movhi	r4,1526
 402f8cc:	21384004 	addi	r4,r4,-7936
 402f8d0:	4020cc00 	call	4020cc0 <__udivsi3>
 402f8d4:	e17fff17 	ldw	r5,-4(fp)
 402f8d8:	1009883a 	mov	r4,r2
 402f8dc:	4020d7c0 	call	4020d7c <__mulsi3>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
 402f8e0:	10bfffc4 	addi	r2,r2,-1
 402f8e4:	00bffe16 	blt	zero,r2,402f8e0 <_gp+0xffff517c>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
 402f8e8:	0005883a 	mov	r2,zero
}
 402f8ec:	e037883a 	mov	sp,fp
 402f8f0:	dfc00117 	ldw	ra,4(sp)
 402f8f4:	df000017 	ldw	fp,0(sp)
 402f8f8:	dec00204 	addi	sp,sp,8
 402f8fc:	f800283a 	ret

0402f900 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 402f900:	defffe04 	addi	sp,sp,-8
 402f904:	dfc00115 	stw	ra,4(sp)
 402f908:	df000015 	stw	fp,0(sp)
 402f90c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 402f910:	008100f4 	movhi	r2,1027
 402f914:	1089e404 	addi	r2,r2,10128
 402f918:	10800017 	ldw	r2,0(r2)
 402f91c:	10000526 	beq	r2,zero,402f934 <alt_get_errno+0x34>
 402f920:	008100f4 	movhi	r2,1027
 402f924:	1089e404 	addi	r2,r2,10128
 402f928:	10800017 	ldw	r2,0(r2)
 402f92c:	103ee83a 	callr	r2
 402f930:	00000206 	br	402f93c <alt_get_errno+0x3c>
 402f934:	008100f4 	movhi	r2,1027
 402f938:	1090aa04 	addi	r2,r2,17064
}
 402f93c:	e037883a 	mov	sp,fp
 402f940:	dfc00117 	ldw	ra,4(sp)
 402f944:	df000017 	ldw	fp,0(sp)
 402f948:	dec00204 	addi	sp,sp,8
 402f94c:	f800283a 	ret

0402f950 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
 402f950:	defffa04 	addi	sp,sp,-24
 402f954:	dfc00515 	stw	ra,20(sp)
 402f958:	df000415 	stw	fp,16(sp)
 402f95c:	df000404 	addi	fp,sp,16
 402f960:	e13ffe15 	stw	r4,-8(fp)
 402f964:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
 402f968:	e0bffe17 	ldw	r2,-8(fp)
 402f96c:	10000326 	beq	r2,zero,402f97c <alt_dev_llist_insert+0x2c>
 402f970:	e0bffe17 	ldw	r2,-8(fp)
 402f974:	10800217 	ldw	r2,8(r2)
 402f978:	1000061e 	bne	r2,zero,402f994 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
 402f97c:	402f9000 	call	402f900 <alt_get_errno>
 402f980:	1007883a 	mov	r3,r2
 402f984:	00800584 	movi	r2,22
 402f988:	18800015 	stw	r2,0(r3)
    return -EINVAL;
 402f98c:	00bffa84 	movi	r2,-22
 402f990:	00001306 	br	402f9e0 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
 402f994:	e0bffe17 	ldw	r2,-8(fp)
 402f998:	e0ffff17 	ldw	r3,-4(fp)
 402f99c:	e0fffc15 	stw	r3,-16(fp)
 402f9a0:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 402f9a4:	e0bffd17 	ldw	r2,-12(fp)
 402f9a8:	e0fffc17 	ldw	r3,-16(fp)
 402f9ac:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 402f9b0:	e0bffc17 	ldw	r2,-16(fp)
 402f9b4:	10c00017 	ldw	r3,0(r2)
 402f9b8:	e0bffd17 	ldw	r2,-12(fp)
 402f9bc:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 402f9c0:	e0bffc17 	ldw	r2,-16(fp)
 402f9c4:	10800017 	ldw	r2,0(r2)
 402f9c8:	e0fffd17 	ldw	r3,-12(fp)
 402f9cc:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 402f9d0:	e0bffc17 	ldw	r2,-16(fp)
 402f9d4:	e0fffd17 	ldw	r3,-12(fp)
 402f9d8:	10c00015 	stw	r3,0(r2)

  return 0;  
 402f9dc:	0005883a 	mov	r2,zero
}
 402f9e0:	e037883a 	mov	sp,fp
 402f9e4:	dfc00117 	ldw	ra,4(sp)
 402f9e8:	df000017 	ldw	fp,0(sp)
 402f9ec:	dec00204 	addi	sp,sp,8
 402f9f0:	f800283a 	ret

0402f9f4 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
 402f9f4:	defffd04 	addi	sp,sp,-12
 402f9f8:	dfc00215 	stw	ra,8(sp)
 402f9fc:	df000115 	stw	fp,4(sp)
 402fa00:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 402fa04:	008100f4 	movhi	r2,1027
 402fa08:	10821c04 	addi	r2,r2,2160
 402fa0c:	e0bfff15 	stw	r2,-4(fp)
 402fa10:	00000606 	br	402fa2c <_do_ctors+0x38>
        (*ctor) (); 
 402fa14:	e0bfff17 	ldw	r2,-4(fp)
 402fa18:	10800017 	ldw	r2,0(r2)
 402fa1c:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 402fa20:	e0bfff17 	ldw	r2,-4(fp)
 402fa24:	10bfff04 	addi	r2,r2,-4
 402fa28:	e0bfff15 	stw	r2,-4(fp)
 402fa2c:	e0ffff17 	ldw	r3,-4(fp)
 402fa30:	008100f4 	movhi	r2,1027
 402fa34:	10821d04 	addi	r2,r2,2164
 402fa38:	18bff62e 	bgeu	r3,r2,402fa14 <_gp+0xffff52b0>
        (*ctor) (); 
}
 402fa3c:	0001883a 	nop
 402fa40:	e037883a 	mov	sp,fp
 402fa44:	dfc00117 	ldw	ra,4(sp)
 402fa48:	df000017 	ldw	fp,0(sp)
 402fa4c:	dec00204 	addi	sp,sp,8
 402fa50:	f800283a 	ret

0402fa54 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
 402fa54:	defffd04 	addi	sp,sp,-12
 402fa58:	dfc00215 	stw	ra,8(sp)
 402fa5c:	df000115 	stw	fp,4(sp)
 402fa60:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 402fa64:	008100f4 	movhi	r2,1027
 402fa68:	10821c04 	addi	r2,r2,2160
 402fa6c:	e0bfff15 	stw	r2,-4(fp)
 402fa70:	00000606 	br	402fa8c <_do_dtors+0x38>
        (*dtor) (); 
 402fa74:	e0bfff17 	ldw	r2,-4(fp)
 402fa78:	10800017 	ldw	r2,0(r2)
 402fa7c:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 402fa80:	e0bfff17 	ldw	r2,-4(fp)
 402fa84:	10bfff04 	addi	r2,r2,-4
 402fa88:	e0bfff15 	stw	r2,-4(fp)
 402fa8c:	e0ffff17 	ldw	r3,-4(fp)
 402fa90:	008100f4 	movhi	r2,1027
 402fa94:	10821d04 	addi	r2,r2,2164
 402fa98:	18bff62e 	bgeu	r3,r2,402fa74 <_gp+0xffff5310>
        (*dtor) (); 
}
 402fa9c:	0001883a 	nop
 402faa0:	e037883a 	mov	sp,fp
 402faa4:	dfc00117 	ldw	ra,4(sp)
 402faa8:	df000017 	ldw	fp,0(sp)
 402faac:	dec00204 	addi	sp,sp,8
 402fab0:	f800283a 	ret

0402fab4 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
 402fab4:	deffff04 	addi	sp,sp,-4
 402fab8:	df000015 	stw	fp,0(sp)
 402fabc:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
 402fac0:	0001883a 	nop
 402fac4:	e037883a 	mov	sp,fp
 402fac8:	df000017 	ldw	fp,0(sp)
 402facc:	dec00104 	addi	sp,sp,4
 402fad0:	f800283a 	ret

0402fad4 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 402fad4:	defff904 	addi	sp,sp,-28
 402fad8:	dfc00615 	stw	ra,24(sp)
 402fadc:	df000515 	stw	fp,20(sp)
 402fae0:	df000504 	addi	fp,sp,20
 402fae4:	e13ffc15 	stw	r4,-16(fp)
 402fae8:	e17ffd15 	stw	r5,-12(fp)
 402faec:	e1bffe15 	stw	r6,-8(fp)
 402faf0:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
 402faf4:	e0800217 	ldw	r2,8(fp)
 402faf8:	d8800015 	stw	r2,0(sp)
 402fafc:	e1ffff17 	ldw	r7,-4(fp)
 402fb00:	e1bffe17 	ldw	r6,-8(fp)
 402fb04:	e17ffd17 	ldw	r5,-12(fp)
 402fb08:	e13ffc17 	ldw	r4,-16(fp)
 402fb0c:	402fcb40 	call	402fcb4 <alt_iic_isr_register>
}  
 402fb10:	e037883a 	mov	sp,fp
 402fb14:	dfc00117 	ldw	ra,4(sp)
 402fb18:	df000017 	ldw	fp,0(sp)
 402fb1c:	dec00204 	addi	sp,sp,8
 402fb20:	f800283a 	ret

0402fb24 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
 402fb24:	defff904 	addi	sp,sp,-28
 402fb28:	df000615 	stw	fp,24(sp)
 402fb2c:	df000604 	addi	fp,sp,24
 402fb30:	e13ffe15 	stw	r4,-8(fp)
 402fb34:	e17fff15 	stw	r5,-4(fp)
 402fb38:	e0bfff17 	ldw	r2,-4(fp)
 402fb3c:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 402fb40:	0005303a 	rdctl	r2,status
 402fb44:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 402fb48:	e0fffb17 	ldw	r3,-20(fp)
 402fb4c:	00bfff84 	movi	r2,-2
 402fb50:	1884703a 	and	r2,r3,r2
 402fb54:	1001703a 	wrctl	status,r2
  
  return context;
 402fb58:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 402fb5c:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
 402fb60:	00c00044 	movi	r3,1
 402fb64:	e0bffa17 	ldw	r2,-24(fp)
 402fb68:	1884983a 	sll	r2,r3,r2
 402fb6c:	1007883a 	mov	r3,r2
 402fb70:	008100f4 	movhi	r2,1027
 402fb74:	1090b004 	addi	r2,r2,17088
 402fb78:	10800017 	ldw	r2,0(r2)
 402fb7c:	1886b03a 	or	r3,r3,r2
 402fb80:	008100f4 	movhi	r2,1027
 402fb84:	1090b004 	addi	r2,r2,17088
 402fb88:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 402fb8c:	008100f4 	movhi	r2,1027
 402fb90:	1090b004 	addi	r2,r2,17088
 402fb94:	10800017 	ldw	r2,0(r2)
 402fb98:	100170fa 	wrctl	ienable,r2
 402fb9c:	e0bffc17 	ldw	r2,-16(fp)
 402fba0:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 402fba4:	e0bffd17 	ldw	r2,-12(fp)
 402fba8:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 402fbac:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
 402fbb0:	0001883a 	nop
}
 402fbb4:	e037883a 	mov	sp,fp
 402fbb8:	df000017 	ldw	fp,0(sp)
 402fbbc:	dec00104 	addi	sp,sp,4
 402fbc0:	f800283a 	ret

0402fbc4 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
 402fbc4:	defff904 	addi	sp,sp,-28
 402fbc8:	df000615 	stw	fp,24(sp)
 402fbcc:	df000604 	addi	fp,sp,24
 402fbd0:	e13ffe15 	stw	r4,-8(fp)
 402fbd4:	e17fff15 	stw	r5,-4(fp)
 402fbd8:	e0bfff17 	ldw	r2,-4(fp)
 402fbdc:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 402fbe0:	0005303a 	rdctl	r2,status
 402fbe4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 402fbe8:	e0fffb17 	ldw	r3,-20(fp)
 402fbec:	00bfff84 	movi	r2,-2
 402fbf0:	1884703a 	and	r2,r3,r2
 402fbf4:	1001703a 	wrctl	status,r2
  
  return context;
 402fbf8:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 402fbfc:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
 402fc00:	00c00044 	movi	r3,1
 402fc04:	e0bffa17 	ldw	r2,-24(fp)
 402fc08:	1884983a 	sll	r2,r3,r2
 402fc0c:	0084303a 	nor	r2,zero,r2
 402fc10:	1007883a 	mov	r3,r2
 402fc14:	008100f4 	movhi	r2,1027
 402fc18:	1090b004 	addi	r2,r2,17088
 402fc1c:	10800017 	ldw	r2,0(r2)
 402fc20:	1886703a 	and	r3,r3,r2
 402fc24:	008100f4 	movhi	r2,1027
 402fc28:	1090b004 	addi	r2,r2,17088
 402fc2c:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 402fc30:	008100f4 	movhi	r2,1027
 402fc34:	1090b004 	addi	r2,r2,17088
 402fc38:	10800017 	ldw	r2,0(r2)
 402fc3c:	100170fa 	wrctl	ienable,r2
 402fc40:	e0bffc17 	ldw	r2,-16(fp)
 402fc44:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 402fc48:	e0bffd17 	ldw	r2,-12(fp)
 402fc4c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 402fc50:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
 402fc54:	0001883a 	nop
}
 402fc58:	e037883a 	mov	sp,fp
 402fc5c:	df000017 	ldw	fp,0(sp)
 402fc60:	dec00104 	addi	sp,sp,4
 402fc64:	f800283a 	ret

0402fc68 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
 402fc68:	defffc04 	addi	sp,sp,-16
 402fc6c:	df000315 	stw	fp,12(sp)
 402fc70:	df000304 	addi	fp,sp,12
 402fc74:	e13ffe15 	stw	r4,-8(fp)
 402fc78:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
 402fc7c:	000530fa 	rdctl	r2,ienable
 402fc80:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
 402fc84:	00c00044 	movi	r3,1
 402fc88:	e0bfff17 	ldw	r2,-4(fp)
 402fc8c:	1884983a 	sll	r2,r3,r2
 402fc90:	1007883a 	mov	r3,r2
 402fc94:	e0bffd17 	ldw	r2,-12(fp)
 402fc98:	1884703a 	and	r2,r3,r2
 402fc9c:	1004c03a 	cmpne	r2,r2,zero
 402fca0:	10803fcc 	andi	r2,r2,255
}
 402fca4:	e037883a 	mov	sp,fp
 402fca8:	df000017 	ldw	fp,0(sp)
 402fcac:	dec00104 	addi	sp,sp,4
 402fcb0:	f800283a 	ret

0402fcb4 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 402fcb4:	defff504 	addi	sp,sp,-44
 402fcb8:	dfc00a15 	stw	ra,40(sp)
 402fcbc:	df000915 	stw	fp,36(sp)
 402fcc0:	df000904 	addi	fp,sp,36
 402fcc4:	e13ffc15 	stw	r4,-16(fp)
 402fcc8:	e17ffd15 	stw	r5,-12(fp)
 402fccc:	e1bffe15 	stw	r6,-8(fp)
 402fcd0:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
 402fcd4:	00bffa84 	movi	r2,-22
 402fcd8:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
 402fcdc:	e0bffd17 	ldw	r2,-12(fp)
 402fce0:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
 402fce4:	e0bff817 	ldw	r2,-32(fp)
 402fce8:	10800808 	cmpgei	r2,r2,32
 402fcec:	1000271e 	bne	r2,zero,402fd8c <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 402fcf0:	0005303a 	rdctl	r2,status
 402fcf4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 402fcf8:	e0fffb17 	ldw	r3,-20(fp)
 402fcfc:	00bfff84 	movi	r2,-2
 402fd00:	1884703a 	and	r2,r3,r2
 402fd04:	1001703a 	wrctl	status,r2
  
  return context;
 402fd08:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
 402fd0c:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
 402fd10:	008100f4 	movhi	r2,1027
 402fd14:	1090bc04 	addi	r2,r2,17136
 402fd18:	e0fff817 	ldw	r3,-32(fp)
 402fd1c:	180690fa 	slli	r3,r3,3
 402fd20:	10c5883a 	add	r2,r2,r3
 402fd24:	e0fffe17 	ldw	r3,-8(fp)
 402fd28:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
 402fd2c:	008100f4 	movhi	r2,1027
 402fd30:	1090bc04 	addi	r2,r2,17136
 402fd34:	e0fff817 	ldw	r3,-32(fp)
 402fd38:	180690fa 	slli	r3,r3,3
 402fd3c:	10c5883a 	add	r2,r2,r3
 402fd40:	10800104 	addi	r2,r2,4
 402fd44:	e0ffff17 	ldw	r3,-4(fp)
 402fd48:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
 402fd4c:	e0bffe17 	ldw	r2,-8(fp)
 402fd50:	10000526 	beq	r2,zero,402fd68 <alt_iic_isr_register+0xb4>
 402fd54:	e0bff817 	ldw	r2,-32(fp)
 402fd58:	100b883a 	mov	r5,r2
 402fd5c:	e13ffc17 	ldw	r4,-16(fp)
 402fd60:	402fb240 	call	402fb24 <alt_ic_irq_enable>
 402fd64:	00000406 	br	402fd78 <alt_iic_isr_register+0xc4>
 402fd68:	e0bff817 	ldw	r2,-32(fp)
 402fd6c:	100b883a 	mov	r5,r2
 402fd70:	e13ffc17 	ldw	r4,-16(fp)
 402fd74:	402fbc40 	call	402fbc4 <alt_ic_irq_disable>
 402fd78:	e0bff715 	stw	r2,-36(fp)
 402fd7c:	e0bffa17 	ldw	r2,-24(fp)
 402fd80:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 402fd84:	e0bff917 	ldw	r2,-28(fp)
 402fd88:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
 402fd8c:	e0bff717 	ldw	r2,-36(fp)
}
 402fd90:	e037883a 	mov	sp,fp
 402fd94:	dfc00117 	ldw	ra,4(sp)
 402fd98:	df000017 	ldw	fp,0(sp)
 402fd9c:	dec00204 	addi	sp,sp,8
 402fda0:	f800283a 	ret

0402fda4 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
 402fda4:	defff804 	addi	sp,sp,-32
 402fda8:	dfc00715 	stw	ra,28(sp)
 402fdac:	df000615 	stw	fp,24(sp)
 402fdb0:	dc000515 	stw	r16,20(sp)
 402fdb4:	df000604 	addi	fp,sp,24
 402fdb8:	e13ffb15 	stw	r4,-20(fp)
 402fdbc:	e17ffc15 	stw	r5,-16(fp)
 402fdc0:	e1bffd15 	stw	r6,-12(fp)
 402fdc4:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
 402fdc8:	e1bffe17 	ldw	r6,-8(fp)
 402fdcc:	e17ffd17 	ldw	r5,-12(fp)
 402fdd0:	e13ffc17 	ldw	r4,-16(fp)
 402fdd4:	40300480 	call	4030048 <open>
 402fdd8:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
 402fddc:	e0bffa17 	ldw	r2,-24(fp)
 402fde0:	10002216 	blt	r2,zero,402fe6c <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
 402fde4:	040100f4 	movhi	r16,1027
 402fde8:	84056104 	addi	r16,r16,5508
 402fdec:	e0bffa17 	ldw	r2,-24(fp)
 402fdf0:	01400304 	movi	r5,12
 402fdf4:	1009883a 	mov	r4,r2
 402fdf8:	4020d7c0 	call	4020d7c <__mulsi3>
 402fdfc:	8085883a 	add	r2,r16,r2
 402fe00:	10c00017 	ldw	r3,0(r2)
 402fe04:	e0bffb17 	ldw	r2,-20(fp)
 402fe08:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
 402fe0c:	040100f4 	movhi	r16,1027
 402fe10:	84056104 	addi	r16,r16,5508
 402fe14:	e0bffa17 	ldw	r2,-24(fp)
 402fe18:	01400304 	movi	r5,12
 402fe1c:	1009883a 	mov	r4,r2
 402fe20:	4020d7c0 	call	4020d7c <__mulsi3>
 402fe24:	8085883a 	add	r2,r16,r2
 402fe28:	10800104 	addi	r2,r2,4
 402fe2c:	10c00017 	ldw	r3,0(r2)
 402fe30:	e0bffb17 	ldw	r2,-20(fp)
 402fe34:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
 402fe38:	040100f4 	movhi	r16,1027
 402fe3c:	84056104 	addi	r16,r16,5508
 402fe40:	e0bffa17 	ldw	r2,-24(fp)
 402fe44:	01400304 	movi	r5,12
 402fe48:	1009883a 	mov	r4,r2
 402fe4c:	4020d7c0 	call	4020d7c <__mulsi3>
 402fe50:	8085883a 	add	r2,r16,r2
 402fe54:	10800204 	addi	r2,r2,8
 402fe58:	10c00017 	ldw	r3,0(r2)
 402fe5c:	e0bffb17 	ldw	r2,-20(fp)
 402fe60:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
 402fe64:	e13ffa17 	ldw	r4,-24(fp)
 402fe68:	402e5c00 	call	402e5c0 <alt_release_fd>
  }
} 
 402fe6c:	0001883a 	nop
 402fe70:	e6ffff04 	addi	sp,fp,-4
 402fe74:	dfc00217 	ldw	ra,8(sp)
 402fe78:	df000117 	ldw	fp,4(sp)
 402fe7c:	dc000017 	ldw	r16,0(sp)
 402fe80:	dec00304 	addi	sp,sp,12
 402fe84:	f800283a 	ret

0402fe88 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
 402fe88:	defffb04 	addi	sp,sp,-20
 402fe8c:	dfc00415 	stw	ra,16(sp)
 402fe90:	df000315 	stw	fp,12(sp)
 402fe94:	df000304 	addi	fp,sp,12
 402fe98:	e13ffd15 	stw	r4,-12(fp)
 402fe9c:	e17ffe15 	stw	r5,-8(fp)
 402fea0:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
 402fea4:	01c07fc4 	movi	r7,511
 402fea8:	01800044 	movi	r6,1
 402feac:	e17ffd17 	ldw	r5,-12(fp)
 402feb0:	010100f4 	movhi	r4,1027
 402feb4:	21056404 	addi	r4,r4,5520
 402feb8:	402fda40 	call	402fda4 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
 402febc:	01c07fc4 	movi	r7,511
 402fec0:	000d883a 	mov	r6,zero
 402fec4:	e17ffe17 	ldw	r5,-8(fp)
 402fec8:	010100f4 	movhi	r4,1027
 402fecc:	21056104 	addi	r4,r4,5508
 402fed0:	402fda40 	call	402fda4 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
 402fed4:	01c07fc4 	movi	r7,511
 402fed8:	01800044 	movi	r6,1
 402fedc:	e17fff17 	ldw	r5,-4(fp)
 402fee0:	010100f4 	movhi	r4,1027
 402fee4:	21056704 	addi	r4,r4,5532
 402fee8:	402fda40 	call	402fda4 <alt_open_fd>
}  
 402feec:	0001883a 	nop
 402fef0:	e037883a 	mov	sp,fp
 402fef4:	dfc00117 	ldw	ra,4(sp)
 402fef8:	df000017 	ldw	fp,0(sp)
 402fefc:	dec00204 	addi	sp,sp,8
 402ff00:	f800283a 	ret

0402ff04 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 402ff04:	defffe04 	addi	sp,sp,-8
 402ff08:	dfc00115 	stw	ra,4(sp)
 402ff0c:	df000015 	stw	fp,0(sp)
 402ff10:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 402ff14:	008100f4 	movhi	r2,1027
 402ff18:	1089e404 	addi	r2,r2,10128
 402ff1c:	10800017 	ldw	r2,0(r2)
 402ff20:	10000526 	beq	r2,zero,402ff38 <alt_get_errno+0x34>
 402ff24:	008100f4 	movhi	r2,1027
 402ff28:	1089e404 	addi	r2,r2,10128
 402ff2c:	10800017 	ldw	r2,0(r2)
 402ff30:	103ee83a 	callr	r2
 402ff34:	00000206 	br	402ff40 <alt_get_errno+0x3c>
 402ff38:	008100f4 	movhi	r2,1027
 402ff3c:	1090aa04 	addi	r2,r2,17064
}
 402ff40:	e037883a 	mov	sp,fp
 402ff44:	dfc00117 	ldw	ra,4(sp)
 402ff48:	df000017 	ldw	fp,0(sp)
 402ff4c:	dec00204 	addi	sp,sp,8
 402ff50:	f800283a 	ret

0402ff54 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
 402ff54:	defffb04 	addi	sp,sp,-20
 402ff58:	dfc00415 	stw	ra,16(sp)
 402ff5c:	df000315 	stw	fp,12(sp)
 402ff60:	dc000215 	stw	r16,8(sp)
 402ff64:	df000304 	addi	fp,sp,12
 402ff68:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
 402ff6c:	e0bffe17 	ldw	r2,-8(fp)
 402ff70:	10800217 	ldw	r2,8(r2)
 402ff74:	10d00034 	orhi	r3,r2,16384
 402ff78:	e0bffe17 	ldw	r2,-8(fp)
 402ff7c:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 402ff80:	e03ffd15 	stw	zero,-12(fp)
 402ff84:	00002306 	br	4030014 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 402ff88:	040100f4 	movhi	r16,1027
 402ff8c:	84056104 	addi	r16,r16,5508
 402ff90:	e0bffd17 	ldw	r2,-12(fp)
 402ff94:	01400304 	movi	r5,12
 402ff98:	1009883a 	mov	r4,r2
 402ff9c:	4020d7c0 	call	4020d7c <__mulsi3>
 402ffa0:	8085883a 	add	r2,r16,r2
 402ffa4:	10c00017 	ldw	r3,0(r2)
 402ffa8:	e0bffe17 	ldw	r2,-8(fp)
 402ffac:	10800017 	ldw	r2,0(r2)
 402ffb0:	1880151e 	bne	r3,r2,4030008 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 402ffb4:	040100f4 	movhi	r16,1027
 402ffb8:	84056104 	addi	r16,r16,5508
 402ffbc:	e0bffd17 	ldw	r2,-12(fp)
 402ffc0:	01400304 	movi	r5,12
 402ffc4:	1009883a 	mov	r4,r2
 402ffc8:	4020d7c0 	call	4020d7c <__mulsi3>
 402ffcc:	8085883a 	add	r2,r16,r2
 402ffd0:	10800204 	addi	r2,r2,8
 402ffd4:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 402ffd8:	10000b0e 	bge	r2,zero,4030008 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
 402ffdc:	01400304 	movi	r5,12
 402ffe0:	e13ffd17 	ldw	r4,-12(fp)
 402ffe4:	4020d7c0 	call	4020d7c <__mulsi3>
 402ffe8:	1007883a 	mov	r3,r2
 402ffec:	008100f4 	movhi	r2,1027
 402fff0:	10856104 	addi	r2,r2,5508
 402fff4:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 402fff8:	e0bffe17 	ldw	r2,-8(fp)
 402fffc:	18800226 	beq	r3,r2,4030008 <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
 4030000:	00bffcc4 	movi	r2,-13
 4030004:	00000a06 	br	4030030 <alt_file_locked+0xdc>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 4030008:	e0bffd17 	ldw	r2,-12(fp)
 403000c:	10800044 	addi	r2,r2,1
 4030010:	e0bffd15 	stw	r2,-12(fp)
 4030014:	008100f4 	movhi	r2,1027
 4030018:	1089e304 	addi	r2,r2,10124
 403001c:	10800017 	ldw	r2,0(r2)
 4030020:	1007883a 	mov	r3,r2
 4030024:	e0bffd17 	ldw	r2,-12(fp)
 4030028:	18bfd72e 	bgeu	r3,r2,402ff88 <_gp+0xffff5824>
    }
  }
  
  /* The device is not locked */
 
  return 0;
 403002c:	0005883a 	mov	r2,zero
}
 4030030:	e6ffff04 	addi	sp,fp,-4
 4030034:	dfc00217 	ldw	ra,8(sp)
 4030038:	df000117 	ldw	fp,4(sp)
 403003c:	dc000017 	ldw	r16,0(sp)
 4030040:	dec00304 	addi	sp,sp,12
 4030044:	f800283a 	ret

04030048 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
 4030048:	defff604 	addi	sp,sp,-40
 403004c:	dfc00915 	stw	ra,36(sp)
 4030050:	df000815 	stw	fp,32(sp)
 4030054:	df000804 	addi	fp,sp,32
 4030058:	e13ffd15 	stw	r4,-12(fp)
 403005c:	e17ffe15 	stw	r5,-8(fp)
 4030060:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
 4030064:	00bfffc4 	movi	r2,-1
 4030068:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
 403006c:	00bffb44 	movi	r2,-19
 4030070:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
 4030074:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
 4030078:	014100f4 	movhi	r5,1027
 403007c:	2949e104 	addi	r5,r5,10116
 4030080:	e13ffd17 	ldw	r4,-12(fp)
 4030084:	40301cc0 	call	40301cc <alt_find_dev>
 4030088:	e0bff815 	stw	r2,-32(fp)
 403008c:	e0bff817 	ldw	r2,-32(fp)
 4030090:	1000051e 	bne	r2,zero,40300a8 <open+0x60>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
 4030094:	e13ffd17 	ldw	r4,-12(fp)
 4030098:	403025c0 	call	403025c <alt_find_file>
 403009c:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
 40300a0:	00800044 	movi	r2,1
 40300a4:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
 40300a8:	e0bff817 	ldw	r2,-32(fp)
 40300ac:	10002b26 	beq	r2,zero,403015c <open+0x114>
  {
    if ((index = alt_get_fd (dev)) < 0)
 40300b0:	e13ff817 	ldw	r4,-32(fp)
 40300b4:	40303700 	call	4030370 <alt_get_fd>
 40300b8:	e0bff915 	stw	r2,-28(fp)
 40300bc:	e0bff917 	ldw	r2,-28(fp)
 40300c0:	1000030e 	bge	r2,zero,40300d0 <open+0x88>
    {
      status = index;
 40300c4:	e0bff917 	ldw	r2,-28(fp)
 40300c8:	e0bffa15 	stw	r2,-24(fp)
 40300cc:	00002506 	br	4030164 <open+0x11c>
    }
    else
    {
      fd = &alt_fd_list[index];
 40300d0:	01400304 	movi	r5,12
 40300d4:	e13ff917 	ldw	r4,-28(fp)
 40300d8:	4020d7c0 	call	4020d7c <__mulsi3>
 40300dc:	1007883a 	mov	r3,r2
 40300e0:	008100f4 	movhi	r2,1027
 40300e4:	10856104 	addi	r2,r2,5508
 40300e8:	1885883a 	add	r2,r3,r2
 40300ec:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
 40300f0:	e0fffe17 	ldw	r3,-8(fp)
 40300f4:	00900034 	movhi	r2,16384
 40300f8:	10bfffc4 	addi	r2,r2,-1
 40300fc:	1886703a 	and	r3,r3,r2
 4030100:	e0bffc17 	ldw	r2,-16(fp)
 4030104:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
 4030108:	e0bffb17 	ldw	r2,-20(fp)
 403010c:	1000051e 	bne	r2,zero,4030124 <open+0xdc>
 4030110:	e13ffc17 	ldw	r4,-16(fp)
 4030114:	402ff540 	call	402ff54 <alt_file_locked>
 4030118:	e0bffa15 	stw	r2,-24(fp)
 403011c:	e0bffa17 	ldw	r2,-24(fp)
 4030120:	10001016 	blt	r2,zero,4030164 <open+0x11c>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
 4030124:	e0bff817 	ldw	r2,-32(fp)
 4030128:	10800317 	ldw	r2,12(r2)
 403012c:	10000826 	beq	r2,zero,4030150 <open+0x108>
 4030130:	e0bff817 	ldw	r2,-32(fp)
 4030134:	10800317 	ldw	r2,12(r2)
 4030138:	e1ffff17 	ldw	r7,-4(fp)
 403013c:	e1bffe17 	ldw	r6,-8(fp)
 4030140:	e17ffd17 	ldw	r5,-12(fp)
 4030144:	e13ffc17 	ldw	r4,-16(fp)
 4030148:	103ee83a 	callr	r2
 403014c:	00000106 	br	4030154 <open+0x10c>
 4030150:	0005883a 	mov	r2,zero
 4030154:	e0bffa15 	stw	r2,-24(fp)
 4030158:	00000206 	br	4030164 <open+0x11c>
      }
    }
  }
  else
  {
    status = -ENODEV;
 403015c:	00bffb44 	movi	r2,-19
 4030160:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
 4030164:	e0bffa17 	ldw	r2,-24(fp)
 4030168:	1000090e 	bge	r2,zero,4030190 <open+0x148>
  {
    alt_release_fd (index);  
 403016c:	e13ff917 	ldw	r4,-28(fp)
 4030170:	402e5c00 	call	402e5c0 <alt_release_fd>
    ALT_ERRNO = -status;
 4030174:	402ff040 	call	402ff04 <alt_get_errno>
 4030178:	1007883a 	mov	r3,r2
 403017c:	e0bffa17 	ldw	r2,-24(fp)
 4030180:	0085c83a 	sub	r2,zero,r2
 4030184:	18800015 	stw	r2,0(r3)
    return -1;
 4030188:	00bfffc4 	movi	r2,-1
 403018c:	00000106 	br	4030194 <open+0x14c>
  }
  
  /* return the reference upon success */

  return index;
 4030190:	e0bff917 	ldw	r2,-28(fp)
}
 4030194:	e037883a 	mov	sp,fp
 4030198:	dfc00117 	ldw	ra,4(sp)
 403019c:	df000017 	ldw	fp,0(sp)
 40301a0:	dec00204 	addi	sp,sp,8
 40301a4:	f800283a 	ret

040301a8 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
 40301a8:	deffff04 	addi	sp,sp,-4
 40301ac:	df000015 	stw	fp,0(sp)
 40301b0:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
 40301b4:	000170fa 	wrctl	ienable,zero
}
 40301b8:	0001883a 	nop
 40301bc:	e037883a 	mov	sp,fp
 40301c0:	df000017 	ldw	fp,0(sp)
 40301c4:	dec00104 	addi	sp,sp,4
 40301c8:	f800283a 	ret

040301cc <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
 40301cc:	defffa04 	addi	sp,sp,-24
 40301d0:	dfc00515 	stw	ra,20(sp)
 40301d4:	df000415 	stw	fp,16(sp)
 40301d8:	df000404 	addi	fp,sp,16
 40301dc:	e13ffe15 	stw	r4,-8(fp)
 40301e0:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
 40301e4:	e0bfff17 	ldw	r2,-4(fp)
 40301e8:	10800017 	ldw	r2,0(r2)
 40301ec:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
 40301f0:	e13ffe17 	ldw	r4,-8(fp)
 40301f4:	40210c80 	call	40210c8 <strlen>
 40301f8:	10800044 	addi	r2,r2,1
 40301fc:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 4030200:	00000d06 	br	4030238 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
 4030204:	e0bffc17 	ldw	r2,-16(fp)
 4030208:	10800217 	ldw	r2,8(r2)
 403020c:	e0fffd17 	ldw	r3,-12(fp)
 4030210:	180d883a 	mov	r6,r3
 4030214:	e17ffe17 	ldw	r5,-8(fp)
 4030218:	1009883a 	mov	r4,r2
 403021c:	403052c0 	call	403052c <memcmp>
 4030220:	1000021e 	bne	r2,zero,403022c <alt_find_dev+0x60>
    {
      /* match found */

      return next;
 4030224:	e0bffc17 	ldw	r2,-16(fp)
 4030228:	00000706 	br	4030248 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
 403022c:	e0bffc17 	ldw	r2,-16(fp)
 4030230:	10800017 	ldw	r2,0(r2)
 4030234:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 4030238:	e0fffc17 	ldw	r3,-16(fp)
 403023c:	e0bfff17 	ldw	r2,-4(fp)
 4030240:	18bff01e 	bne	r3,r2,4030204 <_gp+0xffff5aa0>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
 4030244:	0005883a 	mov	r2,zero
}
 4030248:	e037883a 	mov	sp,fp
 403024c:	dfc00117 	ldw	ra,4(sp)
 4030250:	df000017 	ldw	fp,0(sp)
 4030254:	dec00204 	addi	sp,sp,8
 4030258:	f800283a 	ret

0403025c <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
 403025c:	defffb04 	addi	sp,sp,-20
 4030260:	dfc00415 	stw	ra,16(sp)
 4030264:	df000315 	stw	fp,12(sp)
 4030268:	df000304 	addi	fp,sp,12
 403026c:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
 4030270:	008100f4 	movhi	r2,1027
 4030274:	1089df04 	addi	r2,r2,10108
 4030278:	10800017 	ldw	r2,0(r2)
 403027c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 4030280:	00003106 	br	4030348 <alt_find_file+0xec>
  {
    len = strlen(next->name);
 4030284:	e0bffd17 	ldw	r2,-12(fp)
 4030288:	10800217 	ldw	r2,8(r2)
 403028c:	1009883a 	mov	r4,r2
 4030290:	40210c80 	call	40210c8 <strlen>
 4030294:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
 4030298:	e0bffd17 	ldw	r2,-12(fp)
 403029c:	10c00217 	ldw	r3,8(r2)
 40302a0:	e0bffe17 	ldw	r2,-8(fp)
 40302a4:	10bfffc4 	addi	r2,r2,-1
 40302a8:	1885883a 	add	r2,r3,r2
 40302ac:	10800003 	ldbu	r2,0(r2)
 40302b0:	10803fcc 	andi	r2,r2,255
 40302b4:	1080201c 	xori	r2,r2,128
 40302b8:	10bfe004 	addi	r2,r2,-128
 40302bc:	10800bd8 	cmpnei	r2,r2,47
 40302c0:	1000031e 	bne	r2,zero,40302d0 <alt_find_file+0x74>
    {
      len -= 1;
 40302c4:	e0bffe17 	ldw	r2,-8(fp)
 40302c8:	10bfffc4 	addi	r2,r2,-1
 40302cc:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 40302d0:	e0bffe17 	ldw	r2,-8(fp)
 40302d4:	e0ffff17 	ldw	r3,-4(fp)
 40302d8:	1885883a 	add	r2,r3,r2
 40302dc:	10800003 	ldbu	r2,0(r2)
 40302e0:	10803fcc 	andi	r2,r2,255
 40302e4:	1080201c 	xori	r2,r2,128
 40302e8:	10bfe004 	addi	r2,r2,-128
 40302ec:	10800be0 	cmpeqi	r2,r2,47
 40302f0:	1000081e 	bne	r2,zero,4030314 <alt_find_file+0xb8>
 40302f4:	e0bffe17 	ldw	r2,-8(fp)
 40302f8:	e0ffff17 	ldw	r3,-4(fp)
 40302fc:	1885883a 	add	r2,r3,r2
 4030300:	10800003 	ldbu	r2,0(r2)
 4030304:	10803fcc 	andi	r2,r2,255
 4030308:	1080201c 	xori	r2,r2,128
 403030c:	10bfe004 	addi	r2,r2,-128
 4030310:	10000a1e 	bne	r2,zero,403033c <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
 4030314:	e0bffd17 	ldw	r2,-12(fp)
 4030318:	10800217 	ldw	r2,8(r2)
 403031c:	e0fffe17 	ldw	r3,-8(fp)
 4030320:	180d883a 	mov	r6,r3
 4030324:	e17fff17 	ldw	r5,-4(fp)
 4030328:	1009883a 	mov	r4,r2
 403032c:	403052c0 	call	403052c <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 4030330:	1000021e 	bne	r2,zero,403033c <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
 4030334:	e0bffd17 	ldw	r2,-12(fp)
 4030338:	00000806 	br	403035c <alt_find_file+0x100>
    }
    next = (alt_dev*) next->llist.next;
 403033c:	e0bffd17 	ldw	r2,-12(fp)
 4030340:	10800017 	ldw	r2,0(r2)
 4030344:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 4030348:	e0fffd17 	ldw	r3,-12(fp)
 403034c:	008100f4 	movhi	r2,1027
 4030350:	1089df04 	addi	r2,r2,10108
 4030354:	18bfcb1e 	bne	r3,r2,4030284 <_gp+0xffff5b20>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
 4030358:	0005883a 	mov	r2,zero
}
 403035c:	e037883a 	mov	sp,fp
 4030360:	dfc00117 	ldw	ra,4(sp)
 4030364:	df000017 	ldw	fp,0(sp)
 4030368:	dec00204 	addi	sp,sp,8
 403036c:	f800283a 	ret

04030370 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
 4030370:	defffa04 	addi	sp,sp,-24
 4030374:	dfc00515 	stw	ra,20(sp)
 4030378:	df000415 	stw	fp,16(sp)
 403037c:	dc000315 	stw	r16,12(sp)
 4030380:	df000404 	addi	fp,sp,16
 4030384:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
 4030388:	00bffa04 	movi	r2,-24
 403038c:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 4030390:	e03ffc15 	stw	zero,-16(fp)
 4030394:	00002106 	br	403041c <alt_get_fd+0xac>
  {
    if (!alt_fd_list[i].dev)
 4030398:	040100f4 	movhi	r16,1027
 403039c:	84056104 	addi	r16,r16,5508
 40303a0:	e0bffc17 	ldw	r2,-16(fp)
 40303a4:	01400304 	movi	r5,12
 40303a8:	1009883a 	mov	r4,r2
 40303ac:	4020d7c0 	call	4020d7c <__mulsi3>
 40303b0:	8085883a 	add	r2,r16,r2
 40303b4:	10800017 	ldw	r2,0(r2)
 40303b8:	1000151e 	bne	r2,zero,4030410 <alt_get_fd+0xa0>
    {
      alt_fd_list[i].dev = dev;
 40303bc:	040100f4 	movhi	r16,1027
 40303c0:	84056104 	addi	r16,r16,5508
 40303c4:	e0bffc17 	ldw	r2,-16(fp)
 40303c8:	01400304 	movi	r5,12
 40303cc:	1009883a 	mov	r4,r2
 40303d0:	4020d7c0 	call	4020d7c <__mulsi3>
 40303d4:	8085883a 	add	r2,r16,r2
 40303d8:	e0fffe17 	ldw	r3,-8(fp)
 40303dc:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
 40303e0:	008100f4 	movhi	r2,1027
 40303e4:	1089e304 	addi	r2,r2,10124
 40303e8:	10c00017 	ldw	r3,0(r2)
 40303ec:	e0bffc17 	ldw	r2,-16(fp)
 40303f0:	1880040e 	bge	r3,r2,4030404 <alt_get_fd+0x94>
      {
        alt_max_fd = i;
 40303f4:	008100f4 	movhi	r2,1027
 40303f8:	1089e304 	addi	r2,r2,10124
 40303fc:	e0fffc17 	ldw	r3,-16(fp)
 4030400:	10c00015 	stw	r3,0(r2)
      }
      rc = i;
 4030404:	e0bffc17 	ldw	r2,-16(fp)
 4030408:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
 403040c:	00000606 	br	4030428 <alt_get_fd+0xb8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 4030410:	e0bffc17 	ldw	r2,-16(fp)
 4030414:	10800044 	addi	r2,r2,1
 4030418:	e0bffc15 	stw	r2,-16(fp)
 403041c:	e0bffc17 	ldw	r2,-16(fp)
 4030420:	10800810 	cmplti	r2,r2,32
 4030424:	103fdc1e 	bne	r2,zero,4030398 <_gp+0xffff5c34>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
 4030428:	e0bffd17 	ldw	r2,-12(fp)
}
 403042c:	e6ffff04 	addi	sp,fp,-4
 4030430:	dfc00217 	ldw	ra,8(sp)
 4030434:	df000117 	ldw	fp,4(sp)
 4030438:	dc000017 	ldw	r16,0(sp)
 403043c:	dec00304 	addi	sp,sp,12
 4030440:	f800283a 	ret

04030444 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
 4030444:	defffe04 	addi	sp,sp,-8
 4030448:	df000115 	stw	fp,4(sp)
 403044c:	df000104 	addi	fp,sp,4
 4030450:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
 4030454:	e0bfff17 	ldw	r2,-4(fp)
 4030458:	10bffe84 	addi	r2,r2,-6
 403045c:	10c00428 	cmpgeui	r3,r2,16
 4030460:	18001a1e 	bne	r3,zero,40304cc <alt_exception_cause_generated_bad_addr+0x88>
 4030464:	100690ba 	slli	r3,r2,2
 4030468:	008100f4 	movhi	r2,1027
 403046c:	10811f04 	addi	r2,r2,1148
 4030470:	1885883a 	add	r2,r3,r2
 4030474:	10800017 	ldw	r2,0(r2)
 4030478:	1000683a 	jmp	r2
 403047c:	040304bc 	xorhi	r16,zero,3090
 4030480:	040304bc 	xorhi	r16,zero,3090
 4030484:	040304cc 	andi	r16,zero,3091
 4030488:	040304cc 	andi	r16,zero,3091
 403048c:	040304cc 	andi	r16,zero,3091
 4030490:	040304bc 	xorhi	r16,zero,3090
 4030494:	040304c4 	movi	r16,3091
 4030498:	040304cc 	andi	r16,zero,3091
 403049c:	040304bc 	xorhi	r16,zero,3090
 40304a0:	040304bc 	xorhi	r16,zero,3090
 40304a4:	040304cc 	andi	r16,zero,3091
 40304a8:	040304bc 	xorhi	r16,zero,3090
 40304ac:	040304c4 	movi	r16,3091
 40304b0:	040304cc 	andi	r16,zero,3091
 40304b4:	040304cc 	andi	r16,zero,3091
 40304b8:	040304bc 	xorhi	r16,zero,3090
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
 40304bc:	00800044 	movi	r2,1
 40304c0:	00000306 	br	40304d0 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
 40304c4:	0005883a 	mov	r2,zero
 40304c8:	00000106 	br	40304d0 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
 40304cc:	0005883a 	mov	r2,zero
  }
}
 40304d0:	e037883a 	mov	sp,fp
 40304d4:	df000017 	ldw	fp,0(sp)
 40304d8:	dec00104 	addi	sp,sp,4
 40304dc:	f800283a 	ret

040304e0 <atexit>:
 40304e0:	200b883a 	mov	r5,r4
 40304e4:	000f883a 	mov	r7,zero
 40304e8:	000d883a 	mov	r6,zero
 40304ec:	0009883a 	mov	r4,zero
 40304f0:	40305a81 	jmpi	40305a8 <__register_exitproc>

040304f4 <exit>:
 40304f4:	defffe04 	addi	sp,sp,-8
 40304f8:	000b883a 	mov	r5,zero
 40304fc:	dc000015 	stw	r16,0(sp)
 4030500:	dfc00115 	stw	ra,4(sp)
 4030504:	2021883a 	mov	r16,r4
 4030508:	40306c00 	call	40306c0 <__call_exitprocs>
 403050c:	008100f4 	movhi	r2,1027
 4030510:	1089d904 	addi	r2,r2,10084
 4030514:	11000017 	ldw	r4,0(r2)
 4030518:	20800f17 	ldw	r2,60(r4)
 403051c:	10000126 	beq	r2,zero,4030524 <exit+0x30>
 4030520:	103ee83a 	callr	r2
 4030524:	8009883a 	mov	r4,r16
 4030528:	40308400 	call	4030840 <_exit>

0403052c <memcmp>:
 403052c:	01c000c4 	movi	r7,3
 4030530:	3980192e 	bgeu	r7,r6,4030598 <memcmp+0x6c>
 4030534:	2144b03a 	or	r2,r4,r5
 4030538:	11c4703a 	and	r2,r2,r7
 403053c:	10000f26 	beq	r2,zero,403057c <memcmp+0x50>
 4030540:	20800003 	ldbu	r2,0(r4)
 4030544:	28c00003 	ldbu	r3,0(r5)
 4030548:	10c0151e 	bne	r2,r3,40305a0 <memcmp+0x74>
 403054c:	31bfff84 	addi	r6,r6,-2
 4030550:	01ffffc4 	movi	r7,-1
 4030554:	00000406 	br	4030568 <memcmp+0x3c>
 4030558:	20800003 	ldbu	r2,0(r4)
 403055c:	28c00003 	ldbu	r3,0(r5)
 4030560:	31bfffc4 	addi	r6,r6,-1
 4030564:	10c00e1e 	bne	r2,r3,40305a0 <memcmp+0x74>
 4030568:	21000044 	addi	r4,r4,1
 403056c:	29400044 	addi	r5,r5,1
 4030570:	31fff91e 	bne	r6,r7,4030558 <_gp+0xffff5df4>
 4030574:	0005883a 	mov	r2,zero
 4030578:	f800283a 	ret
 403057c:	20c00017 	ldw	r3,0(r4)
 4030580:	28800017 	ldw	r2,0(r5)
 4030584:	18bfee1e 	bne	r3,r2,4030540 <_gp+0xffff5ddc>
 4030588:	31bfff04 	addi	r6,r6,-4
 403058c:	21000104 	addi	r4,r4,4
 4030590:	29400104 	addi	r5,r5,4
 4030594:	39bff936 	bltu	r7,r6,403057c <_gp+0xffff5e18>
 4030598:	303fe91e 	bne	r6,zero,4030540 <_gp+0xffff5ddc>
 403059c:	003ff506 	br	4030574 <_gp+0xffff5e10>
 40305a0:	10c5c83a 	sub	r2,r2,r3
 40305a4:	f800283a 	ret

040305a8 <__register_exitproc>:
 40305a8:	defffa04 	addi	sp,sp,-24
 40305ac:	dc000315 	stw	r16,12(sp)
 40305b0:	040100f4 	movhi	r16,1027
 40305b4:	8409d904 	addi	r16,r16,10084
 40305b8:	80c00017 	ldw	r3,0(r16)
 40305bc:	dc400415 	stw	r17,16(sp)
 40305c0:	dfc00515 	stw	ra,20(sp)
 40305c4:	18805217 	ldw	r2,328(r3)
 40305c8:	2023883a 	mov	r17,r4
 40305cc:	10003726 	beq	r2,zero,40306ac <__register_exitproc+0x104>
 40305d0:	10c00117 	ldw	r3,4(r2)
 40305d4:	010007c4 	movi	r4,31
 40305d8:	20c00e16 	blt	r4,r3,4030614 <__register_exitproc+0x6c>
 40305dc:	1a000044 	addi	r8,r3,1
 40305e0:	8800221e 	bne	r17,zero,403066c <__register_exitproc+0xc4>
 40305e4:	18c00084 	addi	r3,r3,2
 40305e8:	18c7883a 	add	r3,r3,r3
 40305ec:	18c7883a 	add	r3,r3,r3
 40305f0:	12000115 	stw	r8,4(r2)
 40305f4:	10c7883a 	add	r3,r2,r3
 40305f8:	19400015 	stw	r5,0(r3)
 40305fc:	0005883a 	mov	r2,zero
 4030600:	dfc00517 	ldw	ra,20(sp)
 4030604:	dc400417 	ldw	r17,16(sp)
 4030608:	dc000317 	ldw	r16,12(sp)
 403060c:	dec00604 	addi	sp,sp,24
 4030610:	f800283a 	ret
 4030614:	00800034 	movhi	r2,0
 4030618:	10800004 	addi	r2,r2,0
 403061c:	10002626 	beq	r2,zero,40306b8 <__register_exitproc+0x110>
 4030620:	01006404 	movi	r4,400
 4030624:	d9400015 	stw	r5,0(sp)
 4030628:	d9800115 	stw	r6,4(sp)
 403062c:	d9c00215 	stw	r7,8(sp)
 4030630:	00000000 	call	0 <__alt_mem_sdram>
 4030634:	d9400017 	ldw	r5,0(sp)
 4030638:	d9800117 	ldw	r6,4(sp)
 403063c:	d9c00217 	ldw	r7,8(sp)
 4030640:	10001d26 	beq	r2,zero,40306b8 <__register_exitproc+0x110>
 4030644:	81000017 	ldw	r4,0(r16)
 4030648:	10000115 	stw	zero,4(r2)
 403064c:	02000044 	movi	r8,1
 4030650:	22405217 	ldw	r9,328(r4)
 4030654:	0007883a 	mov	r3,zero
 4030658:	12400015 	stw	r9,0(r2)
 403065c:	20805215 	stw	r2,328(r4)
 4030660:	10006215 	stw	zero,392(r2)
 4030664:	10006315 	stw	zero,396(r2)
 4030668:	883fde26 	beq	r17,zero,40305e4 <_gp+0xffff5e80>
 403066c:	18c9883a 	add	r4,r3,r3
 4030670:	2109883a 	add	r4,r4,r4
 4030674:	1109883a 	add	r4,r2,r4
 4030678:	21802215 	stw	r6,136(r4)
 403067c:	01800044 	movi	r6,1
 4030680:	12406217 	ldw	r9,392(r2)
 4030684:	30cc983a 	sll	r6,r6,r3
 4030688:	4992b03a 	or	r9,r9,r6
 403068c:	12406215 	stw	r9,392(r2)
 4030690:	21c04215 	stw	r7,264(r4)
 4030694:	01000084 	movi	r4,2
 4030698:	893fd21e 	bne	r17,r4,40305e4 <_gp+0xffff5e80>
 403069c:	11006317 	ldw	r4,396(r2)
 40306a0:	218cb03a 	or	r6,r4,r6
 40306a4:	11806315 	stw	r6,396(r2)
 40306a8:	003fce06 	br	40305e4 <_gp+0xffff5e80>
 40306ac:	18805304 	addi	r2,r3,332
 40306b0:	18805215 	stw	r2,328(r3)
 40306b4:	003fc606 	br	40305d0 <_gp+0xffff5e6c>
 40306b8:	00bfffc4 	movi	r2,-1
 40306bc:	003fd006 	br	4030600 <_gp+0xffff5e9c>

040306c0 <__call_exitprocs>:
 40306c0:	defff504 	addi	sp,sp,-44
 40306c4:	df000915 	stw	fp,36(sp)
 40306c8:	dd400615 	stw	r21,24(sp)
 40306cc:	dc800315 	stw	r18,12(sp)
 40306d0:	dfc00a15 	stw	ra,40(sp)
 40306d4:	ddc00815 	stw	r23,32(sp)
 40306d8:	dd800715 	stw	r22,28(sp)
 40306dc:	dd000515 	stw	r20,20(sp)
 40306e0:	dcc00415 	stw	r19,16(sp)
 40306e4:	dc400215 	stw	r17,8(sp)
 40306e8:	dc000115 	stw	r16,4(sp)
 40306ec:	d9000015 	stw	r4,0(sp)
 40306f0:	2839883a 	mov	fp,r5
 40306f4:	04800044 	movi	r18,1
 40306f8:	057fffc4 	movi	r21,-1
 40306fc:	008100f4 	movhi	r2,1027
 4030700:	1089d904 	addi	r2,r2,10084
 4030704:	12000017 	ldw	r8,0(r2)
 4030708:	45005217 	ldw	r20,328(r8)
 403070c:	44c05204 	addi	r19,r8,328
 4030710:	a0001c26 	beq	r20,zero,4030784 <__call_exitprocs+0xc4>
 4030714:	a0800117 	ldw	r2,4(r20)
 4030718:	15ffffc4 	addi	r23,r2,-1
 403071c:	b8000d16 	blt	r23,zero,4030754 <__call_exitprocs+0x94>
 4030720:	14000044 	addi	r16,r2,1
 4030724:	8421883a 	add	r16,r16,r16
 4030728:	8421883a 	add	r16,r16,r16
 403072c:	84402004 	addi	r17,r16,128
 4030730:	a463883a 	add	r17,r20,r17
 4030734:	a421883a 	add	r16,r20,r16
 4030738:	e0001e26 	beq	fp,zero,40307b4 <__call_exitprocs+0xf4>
 403073c:	80804017 	ldw	r2,256(r16)
 4030740:	e0801c26 	beq	fp,r2,40307b4 <__call_exitprocs+0xf4>
 4030744:	bdffffc4 	addi	r23,r23,-1
 4030748:	843fff04 	addi	r16,r16,-4
 403074c:	8c7fff04 	addi	r17,r17,-4
 4030750:	bd7ff91e 	bne	r23,r21,4030738 <_gp+0xffff5fd4>
 4030754:	00800034 	movhi	r2,0
 4030758:	10800004 	addi	r2,r2,0
 403075c:	10000926 	beq	r2,zero,4030784 <__call_exitprocs+0xc4>
 4030760:	a0800117 	ldw	r2,4(r20)
 4030764:	1000301e 	bne	r2,zero,4030828 <__call_exitprocs+0x168>
 4030768:	a0800017 	ldw	r2,0(r20)
 403076c:	10003226 	beq	r2,zero,4030838 <__call_exitprocs+0x178>
 4030770:	a009883a 	mov	r4,r20
 4030774:	98800015 	stw	r2,0(r19)
 4030778:	00000000 	call	0 <__alt_mem_sdram>
 403077c:	9d000017 	ldw	r20,0(r19)
 4030780:	a03fe41e 	bne	r20,zero,4030714 <_gp+0xffff5fb0>
 4030784:	dfc00a17 	ldw	ra,40(sp)
 4030788:	df000917 	ldw	fp,36(sp)
 403078c:	ddc00817 	ldw	r23,32(sp)
 4030790:	dd800717 	ldw	r22,28(sp)
 4030794:	dd400617 	ldw	r21,24(sp)
 4030798:	dd000517 	ldw	r20,20(sp)
 403079c:	dcc00417 	ldw	r19,16(sp)
 40307a0:	dc800317 	ldw	r18,12(sp)
 40307a4:	dc400217 	ldw	r17,8(sp)
 40307a8:	dc000117 	ldw	r16,4(sp)
 40307ac:	dec00b04 	addi	sp,sp,44
 40307b0:	f800283a 	ret
 40307b4:	a0800117 	ldw	r2,4(r20)
 40307b8:	80c00017 	ldw	r3,0(r16)
 40307bc:	10bfffc4 	addi	r2,r2,-1
 40307c0:	15c01426 	beq	r2,r23,4030814 <__call_exitprocs+0x154>
 40307c4:	80000015 	stw	zero,0(r16)
 40307c8:	183fde26 	beq	r3,zero,4030744 <_gp+0xffff5fe0>
 40307cc:	95c8983a 	sll	r4,r18,r23
 40307d0:	a0806217 	ldw	r2,392(r20)
 40307d4:	a5800117 	ldw	r22,4(r20)
 40307d8:	2084703a 	and	r2,r4,r2
 40307dc:	10000b26 	beq	r2,zero,403080c <__call_exitprocs+0x14c>
 40307e0:	a0806317 	ldw	r2,396(r20)
 40307e4:	2088703a 	and	r4,r4,r2
 40307e8:	20000c1e 	bne	r4,zero,403081c <__call_exitprocs+0x15c>
 40307ec:	89400017 	ldw	r5,0(r17)
 40307f0:	d9000017 	ldw	r4,0(sp)
 40307f4:	183ee83a 	callr	r3
 40307f8:	a0800117 	ldw	r2,4(r20)
 40307fc:	15bfbf1e 	bne	r2,r22,40306fc <_gp+0xffff5f98>
 4030800:	98800017 	ldw	r2,0(r19)
 4030804:	153fcf26 	beq	r2,r20,4030744 <_gp+0xffff5fe0>
 4030808:	003fbc06 	br	40306fc <_gp+0xffff5f98>
 403080c:	183ee83a 	callr	r3
 4030810:	003ff906 	br	40307f8 <_gp+0xffff6094>
 4030814:	a5c00115 	stw	r23,4(r20)
 4030818:	003feb06 	br	40307c8 <_gp+0xffff6064>
 403081c:	89000017 	ldw	r4,0(r17)
 4030820:	183ee83a 	callr	r3
 4030824:	003ff406 	br	40307f8 <_gp+0xffff6094>
 4030828:	a0800017 	ldw	r2,0(r20)
 403082c:	a027883a 	mov	r19,r20
 4030830:	1029883a 	mov	r20,r2
 4030834:	003fb606 	br	4030710 <_gp+0xffff5fac>
 4030838:	0005883a 	mov	r2,zero
 403083c:	003ffb06 	br	403082c <_gp+0xffff60c8>

04030840 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
 4030840:	defffd04 	addi	sp,sp,-12
 4030844:	df000215 	stw	fp,8(sp)
 4030848:	df000204 	addi	fp,sp,8
 403084c:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
 4030850:	0001883a 	nop
 4030854:	e0bfff17 	ldw	r2,-4(fp)
 4030858:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
 403085c:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
 4030860:	10000226 	beq	r2,zero,403086c <_exit+0x2c>
    ALT_SIM_FAIL();
 4030864:	002af070 	cmpltui	zero,zero,43969
 4030868:	00000106 	br	4030870 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
 403086c:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
 4030870:	003fff06 	br	4030870 <_gp+0xffff610c>
